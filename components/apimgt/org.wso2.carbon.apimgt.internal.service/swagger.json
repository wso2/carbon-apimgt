{
  "swagger" : "2.0",
  "info" : {
    "description" : "This API allows you to access internal data.",
    "version" : "1.0.0",
    "title" : "Internal Utility API"
  },
  "host" : "apim.wso2.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/throttle" : {
      "get" : {
        "tags" : [ "Throttling" ],
        "summary" : "throttled events available",
        "description" : "This will provide access to throttled events in database.\n",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "**Search condition**.\n\nYou can search for an application by specifying the name as \"query\" attribute.\n\nEg.\n\"app1\" will match an application if the name is exactly \"app1\".\n\nCurrently this does not support wildcards. Given name must exactly match the application name.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of Throttle Events",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ThrottledEvent"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/throttleAsString" : {
      "get" : {
        "tags" : [ "Throttling" ],
        "summary" : "throttled events available",
        "description" : "This will provide access to throttled events in database.\n",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "**Search condition**.\n\nYou can search for an application by specifying the name as \"query\" attribute.\n\nEg.\n\"app1\" will match an application if the name is exactly \"app1\".\n\nCurrently this does not support wildcards. Given name must exactly match the application name.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "throttle events string",
            "schema" : {
              "type" : "string"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/isThrottled" : {
      "get" : {
        "tags" : [ "Throttling" ],
        "summary" : "throttled events available",
        "description" : "This will provide access to throttled events in database.\n",
        "parameters" : [ {
          "name" : "query",
          "in" : "query",
          "description" : "**Search condition**.\n\nYou can search for an application by specifying the name as \"query\" attribute.\n\nEg.\n\"app1\" will match an application if the name is exactly \"app1\".\n\nCurrently this does not support wildcards. Given name must exactly match the application name.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Throttle Event",
            "schema" : {
              "$ref" : "#/definitions/ThrottledEvent"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/block" : {
      "get" : {
        "tags" : [ "Throttling" ],
        "summary" : "blocking events available",
        "description" : "This will provide access to throttled events in database.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Block Conditions",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/BlockConditions"
              }
            }
          }
        }
      }
    },
    "/keyTemplates" : {
      "get" : {
        "summary" : "An Array of key templates according to custom policies",
        "description" : "This will provide access to key templates define in custom policies\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of Key Templates",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/keymanagers" : {
      "get" : {
        "summary" : "An Array of key managers configured",
        "description" : "this will provide key managers configured\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of key managers",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KeyManager"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/revokedjwt" : {
      "get" : {
        "summary" : "JTIs of revoked jwt tokens",
        "description" : "This will provide access to JTIs of revoked JWT tokens in database.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of revoke JWTs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RevokedJWTList"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all apis",
        "description" : "This will provide access to apis in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "**Search condition**.\n context of the api\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "**Search condition**.\n versio  of the api\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "Media types acceptable for the response. Default is application/json.\n",
          "required" : false,
          "type" : "string",
          "default" : "application/json"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of APIs in the database",
            "schema" : {
              "$ref" : "#/definitions/APIList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all applications",
        "description" : "This will provide access to applications in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "appId",
          "in" : "query",
          "description" : "**Search condition**.\n Application ID of the application\n",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of applications in the database",
            "schema" : {
              "$ref" : "#/definitions/ApplicationList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all subscriptions",
        "description" : "This will provide access to subscriptions in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID  of the subscription\n",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "appId",
          "in" : "query",
          "description" : "**Search condition**.\n  Application ID  of the subscription\n",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of subscriptions in the database",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscription-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all subscription throttling policies",
        "description" : "This will provide access to subscription level throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Subscription policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of subscription policies in the database",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/application-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all application throttling policies",
        "description" : "This will provide access to application level throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Application policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of application policies in the database",
            "schema" : {
              "$ref" : "#/definitions/ApplicationPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all API throttling policies",
        "description" : "This will provide access to api level throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Api policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of api policies in the database",
            "schema" : {
              "$ref" : "#/definitions/ApiPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/application-key-mappings" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all application key mappings",
        "description" : "This will provide access to application vs key mappings in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "consumerKey",
          "in" : "query",
          "description" : "**Search condition**.\n Consumer Key of the application\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of application key mappings in the database",
            "schema" : {
              "$ref" : "#/definitions/ApplicationKeyMappingList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/scopes" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all scopes.",
        "description" : "This will provide access to the Scopes created in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scopeKey",
          "in" : "query",
          "description" : "**Search condition**.\n Scope Key\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of Scopes in Database.",
            "schema" : {
              "$ref" : "#/definitions/ScopesList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/synapse-artifacts" : {
      "get" : {
        "tags" : [ "Retrieving Synapse artifacts" ],
        "summary" : "Get all the synapse artifacts for a given API UUID and gateway label",
        "description" : "This will provide access to synapse artifacts in database.\n",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gatewayLabel",
          "in" : "query",
          "description" : "**Search condition**.\n label associated with the API\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gatewayInstruction",
          "in" : "query",
          "description" : "**Search condition**.\n Publish/Remove\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "String of gatewayRuntimeArtifacts",
            "schema" : {
              "type" : "string"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/gateway-synapse-artifacts" : {
      "get" : {
        "tags" : [ "Retrieving All Synapse artifacts" ],
        "summary" : "Get all synapse artifacts for a given gateway label",
        "description" : "This will provide access to the synapse artifacts in database.\n",
        "parameters" : [ {
          "name" : "gatewayLabel",
          "in" : "query",
          "description" : "**Search condition**.\n label associated with the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of gatewayRuntimeArtifacts",
            "schema" : {
              "$ref" : "#/definitions/SynapseArtifactList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/synapse-attributes" : {
      "get" : {
        "tags" : [ "Retrieving Synapse artifacts" ],
        "summary" : "Get API UUID and label associated with it",
        "description" : "This will provide access to synapse artifacts in database.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "**Search condition**.\n  API Name\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "**Search condition**.\n tenantDomain associated with the API\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "**Search condition**.\nversion of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of gatewayRuntimeArtifacts",
            "schema" : {
              "$ref" : "#/definitions/SynapseAttributes"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notify" : {
      "post" : {
        "tags" : [ "Notification" ],
        "summary" : "Push notification events into nodes.",
        "description" : "This pushes events to the other nodes.\n",
        "parameters" : [ {
          "name" : "X-WSO2-KEY-MANAGER",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Notification event payload",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Received success",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "SynapseAttributes" : {
      "properties" : {
        "count" : {
          "type" : "integer"
        },
        "labels" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "apiId" : {
          "type" : "string"
        }
      }
    },
    "ThrottledEvent" : {
      "properties" : {
        "throttle_key" : {
          "type" : "string",
          "description" : "throttle key."
        },
        "last_updated_time" : {
          "type" : "string",
          "description" : "Last time decision updated."
        },
        "throttle_state" : {
          "type" : "string",
          "description" : "throttle state."
        }
      }
    },
    "Error" : {
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    },
    "BlockConditions" : {
      "properties" : {
        "api" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "application" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ip" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPLevel"
          }
        },
        "user" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "custom" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "subscription" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RevokedJWTList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RevokedJWT"
      }
    },
    "RevokedJWT" : {
      "properties" : {
        "jwt_signature" : {
          "type" : "string",
          "description" : "signature of the JWT token."
        },
        "expiry_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        }
      }
    },
    "RevokeAPIKey" : {
      "properties" : {
        "apiKey" : {
          "type" : "string",
          "description" : "API Key token."
        },
        "expiryTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        },
        "tenantId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        }
      }
    },
    "IPLevel" : {
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "iprange"
        },
        "fixedIp" : {
          "type" : "string",
          "description" : "IP address."
        },
        "startingIp" : {
          "type" : "string",
          "description" : "Ip Range Starting IP"
        },
        "endingIp" : {
          "type" : "string",
          "description" : "Ip Range Ending IP."
        },
        "invert" : {
          "type" : "boolean",
          "description" : "Condition is invert."
        },
        "tenantDomain" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer"
        }
      }
    },
    "APIList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of APIs returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/API"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "API List"
    },
    "API" : {
      "properties" : {
        "apiId" : {
          "type" : "integer"
        },
        "provider" : {
          "type" : "string",
          "description" : "API Provider name."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the API"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the API."
        },
        "context" : {
          "type" : "string",
          "description" : "Context of the API."
        },
        "policy" : {
          "type" : "string",
          "description" : "API level throttling policy."
        },
        "apiType" : {
          "type" : "string",
          "example" : "APIProduct",
          "description" : "Type of the API."
        },
        "isDefaultVersion" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether this is the default version of the API."
        },
        "urlMappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URLMapping"
          }
        }
      }
    },
    "synapseArtifact" : {
      "properties" : {
        "apiId" : {
          "type" : "string"
        },
        "apiName" : {
          "type" : "string",
          "description" : "API Provider name."
        },
        "version" : {
          "type" : "string",
          "description" : "version of the API"
        },
        "tenantDomain" : {
          "type" : "string",
          "description" : "tenantDomain of the API"
        },
        "gatewayLabel" : {
          "type" : "string",
          "description" : "label of the API"
        },
        "gatewayInstruction" : {
          "type" : "string",
          "description" : "Publish/Remove"
        },
        "bytesEncodedAsString" : {
          "type" : "string",
          "description" : "bytes"
        }
      }
    },
    "ApplicationList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Applications returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Application"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Application List"
    },
    "Application" : {
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "subName" : {
          "type" : "string"
        },
        "policy" : {
          "type" : "string",
          "description" : "Application level throtting policy."
        },
        "tokenType" : {
          "type" : "string",
          "example" : "JWT",
          "description" : "type of the token."
        },
        "groupIds" : {
          "type" : "array",
          "example" : "wso2",
          "description" : "group ids associated with the application.",
          "items" : {
            "$ref" : "#/definitions/GroupId"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "GroupId" : {
      "properties" : {
        "groupId" : {
          "type" : "string"
        },
        "applicationId" : {
          "type" : "integer"
        }
      },
      "title" : "Application Group Id"
    },
    "KeyManager" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "tenantDomain" : {
          "type" : "string"
        },
        "configuration" : {
          "type" : "object",
          "properties" : { }
        }
      }
    },
    "SubscriptionList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Subscriptions returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Subscription"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Application List"
    },
    "Subscription" : {
      "properties" : {
        "subscriptionId" : {
          "type" : "integer"
        },
        "policyId" : {
          "type" : "string"
        },
        "apiId" : {
          "type" : "integer"
        },
        "appId" : {
          "type" : "integer"
        },
        "subscriptionState" : {
          "type" : "string"
        }
      }
    },
    "SynapseArtifactList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Synapse Artifacts returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "SynapseArtifactList"
    },
    "ApplicationKeyMappingList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of ApplicationKeyMappings returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationKeyMapping"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApplicationKeyMapping List"
    },
    "ApplicationKeyMapping" : {
      "properties" : {
        "applicationId" : {
          "type" : "integer"
        },
        "consumerKey" : {
          "type" : "string"
        },
        "keyType" : {
          "type" : "string"
        },
        "keyManager" : {
          "type" : "string"
        }
      }
    },
    "ScopesList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of ApplicationKeyMappings returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Scope"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApplicationKeyMapping List"
    },
    "Scope" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Policy" : {
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "tenantId" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "quotaType" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of SubscriptionPolices returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubscriptionPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "SubscriptionPolicy List"
    },
    "SubscriptionPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      }, {
        "$ref" : "#/definitions/GraphQLQuery"
      }, {
        "properties" : {
          "rateLimitCount" : {
            "type" : "integer"
          },
          "rateLimitTimeUnit" : {
            "type" : "string"
          },
          "stopOnQuotaReach" : {
            "type" : "boolean"
          }
        }
      } ]
    },
    "GraphQLQuery" : {
      "properties" : {
        "graphQLMaxComplexity" : {
          "type" : "integer",
          "example" : 400,
          "description" : "Maximum Complexity of the GraphQL query"
        },
        "graphQLMaxDepth" : {
          "type" : "integer",
          "example" : 10,
          "description" : "Maximum Depth of the GraphQL query"
        }
      },
      "title" : "GraphQL Query"
    },
    "ApplicationPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of ApplicationPolicies returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApplicationPolicy List"
    },
    "ApplicationPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      } ]
    },
    "ApiPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Api Policies returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApiPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApiPolicy List"
    },
    "ApiPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      }, {
        "properties" : {
          "conditionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ApiPolicyConditionGroup"
            }
          },
          "applicableLevel" : {
            "type" : "string"
          }
        }
      } ]
    },
    "ApiPolicyConditionGroup" : {
      "properties" : {
        "policyId" : {
          "type" : "integer"
        },
        "quotaType" : {
          "type" : "string"
        },
        "conditionGroupId" : {
          "type" : "integer"
        },
        "condition" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Condition"
          }
        }
      }
    },
    "Condition" : {
      "properties" : {
        "conditionType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "isInverted" : {
          "type" : "boolean"
        }
      }
    },
    "URLMapping" : {
      "properties" : {
        "authScheme" : {
          "type" : "string"
        },
        "throttlingPolicy" : {
          "type" : "string"
        },
        "httpMethod" : {
          "type" : "string"
        },
        "urlPattern" : {
          "type" : "string"
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Pagination" : {
      "properties" : {
        "offset" : {
          "type" : "integer",
          "example" : 0
        },
        "limit" : {
          "type" : "integer",
          "example" : 1
        },
        "total" : {
          "type" : "integer",
          "example" : 10
        },
        "next" : {
          "type" : "string",
          "description" : "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous" : {
          "type" : "string",
          "description" : "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        }
      },
      "title" : "Pagination"
    }
  },
  "parameters" : {
    "requestedTenant" : {
      "name" : "xWSO2Tenant",
      "in" : "header",
      "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
      "required" : true,
      "type" : "string"
    },
    "type" : {
      "name" : "X-WSO2-KEY-MANAGER",
      "in" : "header",
      "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
      "required" : true,
      "type" : "string"
    },
    "Accept" : {
      "name" : "Accept",
      "in" : "header",
      "description" : "Media types acceptable for the response. Default is application/json.\n",
      "required" : false,
      "type" : "string",
      "default" : "application/json"
    }
  }
}