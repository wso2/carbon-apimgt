{
  "swagger" : "2.0",
  "info" : {
    "description" : "This API allows you to access internal data.",
    "version" : "1.0.0",
    "title" : "Internal Utility API"
  },
  "host" : "apim.wso2.com",
  "basePath" : "/v1",
  "schemes" : [ "https" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/block" : {
      "get" : {
        "tags" : [ "Throttling" ],
        "summary" : "blocking events available",
        "description" : "This will provide access to throttled events in database.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Block Conditions",
            "schema" : {
              "type" : "object",
              "additionalProperties" : {
                "$ref" : "#/definitions/BlockConditions"
              }
            }
          }
        }
      }
    },
    "/keyTemplates" : {
      "get" : {
        "summary" : "An Array of key templates according to custom policies",
        "description" : "This will provide access to key templates define in custom policies\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of Key Templates",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/keymanagers" : {
      "get" : {
        "summary" : "An Array of key managers configured",
        "description" : "this will provide key managers configured\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of key managers",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/KeyManager"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/revokedjwt" : {
      "get" : {
        "summary" : "JTIs of revoked jwt tokens",
        "description" : "This will provide access to JTIs of revoked JWT tokens in database.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of revoke JWTs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RevokedJWTList"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/revokedconsumerkeys" : {
      "get" : {
        "summary" : "Consumer keys of revoked jwt",
        "description" : "This will provide access to Consumer keys of revoked JWT's in database.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of revoke JWTs",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RevokedJWTConsumerKeyList"
              }
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all apis",
        "description" : "This will provide access to apis in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "context",
          "in" : "query",
          "description" : "**Search condition**.\n context of the api\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "**Search condition**.\n versio  of the api\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gatewayLabel",
          "in" : "query",
          "description" : "**Search condition**.\n label associated with the APIs\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "expand",
          "in" : "query",
          "description" : "Defines whether the returned response should contain full details of API\n",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "Accept",
          "in" : "header",
          "description" : "Media types acceptable for the response. Default is application/json.\n",
          "required" : false,
          "type" : "string",
          "default" : "application/json"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of APIs in the database",
            "schema" : {
              "$ref" : "#/definitions/APIList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all applications",
        "description" : "This will provide access to applications in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "appId",
          "in" : "query",
          "description" : "**Search condition**.\n Application ID of the application\n",
          "required" : false,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of applications in the database",
            "schema" : {
              "$ref" : "#/definitions/ApplicationList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all subscriptions",
        "description" : "This will provide access to subscriptions in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID  of the subscription\n",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "appId",
          "in" : "query",
          "description" : "**Search condition**.\n  Application ID  of the subscription\n",
          "required" : false,
          "type" : "integer"
        }, {
          "name" : "apiUUID",
          "in" : "query",
          "description" : "**Search condition**.\n  Api UUID  of the subscription\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "applicationUUID",
          "in" : "query",
          "description" : "**Search condition**.\n  Application UUID  of the subscription\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of subscriptions in the database",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscription-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all subscription throttling policies",
        "description" : "This will provide access to subscription level throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Subscription policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of subscription policies in the database",
            "schema" : {
              "$ref" : "#/definitions/SubscriptionPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/application-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all application throttling policies",
        "description" : "This will provide access to application level throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Application policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of application policies in the database",
            "schema" : {
              "$ref" : "#/definitions/ApplicationPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all API throttling policies",
        "description" : "This will provide access to api level throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Api policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of api policies in the database",
            "schema" : {
              "$ref" : "#/definitions/ApiPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/global-policies" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all Global throttling policies",
        "description" : "This will provide access to global throttling policies in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyName",
          "in" : "query",
          "description" : "**Search condition**.\n Global policy name\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of global policies in the database",
            "schema" : {
              "$ref" : "#/definitions/GlobalPolicyList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/application-key-mappings" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all application key mappings",
        "description" : "This will provide access to application vs key mappings in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "consumerKey",
          "in" : "query",
          "description" : "**Search condition**.\n Consumer Key of the application\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "keymanager",
          "in" : "query",
          "description" : "**Search condition**.\n KeyManager associated to consumer_key of the application\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of application key mappings in the database",
            "schema" : {
              "$ref" : "#/definitions/ApplicationKeyMappingList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/scopes" : {
      "get" : {
        "tags" : [ "Subscription Validation" ],
        "summary" : "Get all scopes.",
        "description" : "This will provide access to the Scopes created in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scopeKey",
          "in" : "query",
          "description" : "**Search condition**.\n Scope Key\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of Scopes in Database.",
            "schema" : {
              "$ref" : "#/definitions/ScopesList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/runtime-artifacts" : {
      "get" : {
        "tags" : [ "Retrieving Runtime artifacts" ],
        "summary" : "Get all the runtime artifacts for a given API UUID and gateway label",
        "description" : "This will provide access to runtime artifacts in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gatewayLabel",
          "in" : "query",
          "description" : "**Search condition**.\n label associated with the APIs\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "**Search condition**.\n type of gateway\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "**Search condition**.\n name of API\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "**Search condition**.\n version of API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of runtime Artifacts"
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/retrieve-api-artifacts" : {
      "post" : {
        "tags" : [ "Retrieve API artifacts" ],
        "summary" : "Get API runtime artifacts from ID list",
        "description" : "This will provide access to API runtime artifacts in database for a given API UUID list.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gatewayLabel",
          "in" : "query",
          "description" : "**Search condition**.\n label associated with the APIs\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type of gateway\n",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "uuidList",
          "description" : "API UUID list payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UUIDList"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of runtime Artifacts"
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/runtime-metadata" : {
      "get" : {
        "tags" : [ "Retrieving Runtime artifacts" ],
        "summary" : "Metadata information for API runtimes",
        "description" : "This will provide access to the deployment metadata in json format\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "gatewayLabel",
          "in" : "query",
          "description" : "**Search condition**.\n label associated with the APIs\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Json file of runtime metadata"
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/endpoint-certificates" : {
      "get" : {
        "tags" : [ "Retrieving Runtime artifacts" ],
        "summary" : "Get all the endpoint certificates for given alias.",
        "description" : "This will provide access to\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "alias",
          "in" : "query",
          "description" : "**Search condition**.\n  Alias\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of endpoint certificates"
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/deployed-revisions" : {
      "patch" : {
        "tags" : [ "API Revisions" ],
        "summary" : "Deploy Revision",
        "description" : "Deploy a revision\n",
        "operationId" : "deployedAPIRevision",
        "parameters" : [ {
          "in" : "body",
          "name" : "deployedAPIRevisionDTOList",
          "description" : "Notification event payload",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/DeployedAPIRevision"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Created.\n"
          },
          "default" : {
            "$ref" : "#/definitions/Error"
          }
        }
      }
    },
    "/apis/undeployed-revision" : {
      "post" : {
        "tags" : [ "UnDeployed API Revision" ],
        "summary" : "Remove undeployed revision",
        "description" : "Remove undeployed Revision entry from the database",
        "operationId" : "unDeployedAPIRevision",
        "parameters" : [ {
          "in" : "body",
          "name" : "unDeployedAPIRevisionDTO",
          "description" : "Notification event payload",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UnDeployedAPIRevision"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Fetch un-deployed revision"
          },
          "default" : {
            "$ref" : "#/definitions/Error"
          }
        }
      }
    },
    "/ga-config" : {
      "get" : {
        "tags" : [ "Retrieving Runtime artifacts" ],
        "summary" : "Get Google analytics config related to tenant.",
        "description" : "This will provide access to runtime artifacts in database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiId",
          "in" : "query",
          "description" : "**Search condition**.\n  Api ID\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "google analytics configuration"
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/webhooks-subscriptions" : {
      "get" : {
        "tags" : [ "Retrieving webhooks subscriptions" ],
        "summary" : "Get webhooks subscriptions",
        "description" : "This will provide list of webhooks subscriptions from the database.\n",
        "parameters" : [ {
          "name" : "xWSO2Tenant",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n            retrieved from.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of webhooks subscriptions",
            "schema" : {
              "$ref" : "#/definitions/webhooksSubscriptionsList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/notify" : {
      "post" : {
        "tags" : [ "Notification" ],
        "summary" : "Push notification events into nodes.",
        "description" : "This pushes events to the other nodes.\n",
        "parameters" : [ {
          "name" : "X-WSO2-KEY-MANAGER",
          "in" : "header",
          "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "Notification event payload",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Event Received success",
            "schema" : {
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api-logging-configs" : {
      "get" : {
        "tags" : [ "Logging" ],
        "summary" : "Retrieve persisted per API logging data.",
        "description" : "This retrieve the persisted API logging data for API logging support.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Event Received success",
            "schema" : {
              "$ref" : "#/definitions/APILoggingConfigList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    },
    "/correlation-configs" : {
      "get" : {
        "tags" : [ "Logging" ],
        "summary" : "Retrieve persisted correlation configs data.",
        "description" : "This retrieve the persisted correlation configs data for updating correlation logs.\n",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "An array of correlation component configs",
            "schema" : {
              "$ref" : "#/definitions/CorrelationComponentsList"
            }
          },
          "default" : {
            "description" : "Unexpected error",
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "SynapseAttributes" : {
      "properties" : {
        "count" : {
          "type" : "integer"
        },
        "labels" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "apiId" : {
          "type" : "string"
        }
      }
    },
    "Error" : {
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "fields" : {
          "type" : "string"
        }
      }
    },
    "BlockConditions" : {
      "properties" : {
        "api" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "application" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "ip" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IPLevel"
          }
        },
        "user" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "custom" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "subscription" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "UUIDList" : {
      "properties" : {
        "uuids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "RevokedJWTList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RevokedJWT"
      }
    },
    "RevokedJWT" : {
      "properties" : {
        "jwt_signature" : {
          "type" : "string",
          "description" : "signature of the JWT token."
        },
        "expiry_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        }
      }
    },
    "RevokedJWTConsumerKeyList" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RevokedJWTConsumerKey"
      }
    },
    "RevokedJWTConsumerKey" : {
      "properties" : {
        "consumer_key" : {
          "type" : "string",
          "description" : "concumer key of the JWT."
        },
        "expiry_time" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        },
        "type" : {
          "type" : "string",
          "description" : "revoked consumer key type."
        },
        "tenant_id" : {
          "type" : "string",
          "description" : "revoked consumer key's respective tenant Id."
        }
      }
    },
    "RevokeAPIKey" : {
      "properties" : {
        "apiKey" : {
          "type" : "string",
          "description" : "API Key token."
        },
        "expiryTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        },
        "tenantId" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "expiry timestamp."
        }
      }
    },
    "IPLevel" : {
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "iprange"
        },
        "fixedIp" : {
          "type" : "string",
          "description" : "IP address."
        },
        "startingIp" : {
          "type" : "string",
          "description" : "Ip Range Starting IP"
        },
        "endingIp" : {
          "type" : "string",
          "description" : "Ip Range Ending IP."
        },
        "invert" : {
          "type" : "boolean",
          "description" : "Condition is invert."
        },
        "tenantDomain" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer"
        }
      }
    },
    "APIList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of APIs returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/API"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "API List"
    },
    "DeployedAPIRevision" : {
      "properties" : {
        "apiId" : {
          "type" : "string",
          "example" : "c26b2b9b-4632-4ca4-b6f3-521c8863990c",
          "minLength" : 0,
          "maxLength" : 255
        },
        "revisionId" : {
          "type" : "integer",
          "example" : 1
        },
        "envInfo" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DeployedEnvInfo"
          }
        }
      },
      "title" : "Deployed revision information"
    },
    "UnDeployedAPIRevision" : {
      "properties" : {
        "apiUUID" : {
          "type" : "string",
          "example" : "c26b2b9b-4632-4ca4-b6f3-521c8863990c",
          "minLength" : 0,
          "maxLength" : 255
        },
        "revisionUUID" : {
          "type" : "string",
          "example" : "c26b2b9b-4632-4ca4-b6f3-521c8863990c",
          "minLength" : 0,
          "maxLength" : 255
        },
        "environment" : {
          "type" : "string",
          "example" : "Default",
          "minLength" : 0,
          "maxLength" : 255
        }
      },
      "title" : "UnDeployed revision information"
    },
    "DeployedEnvInfo" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "default",
          "minLength" : 1,
          "maxLength" : 255
        },
        "vhost" : {
          "type" : "string",
          "example" : "mg.wso2.com",
          "minLength" : 1,
          "maxLength" : 255,
          "pattern" : "^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$"
        }
      },
      "title" : "Environment information"
    },
    "API" : {
      "properties" : {
        "uuid" : {
          "type" : "string",
          "description" : "UUID of API"
        },
        "apiId" : {
          "type" : "integer"
        },
        "provider" : {
          "type" : "string",
          "description" : "API Provider name."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the API"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the API."
        },
        "context" : {
          "type" : "string",
          "description" : "Context of the API."
        },
        "policy" : {
          "type" : "string",
          "description" : "API level throttling policy."
        },
        "apiType" : {
          "type" : "string",
          "example" : "APIProduct",
          "description" : "Type of the API."
        },
        "status" : {
          "type" : "string",
          "example" : "APIProduct",
          "description" : "Type of the API."
        },
        "organization" : {
          "type" : "string",
          "example" : "wso2.com",
          "description" : "Organization of the API."
        },
        "isDefaultVersion" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether this is the default version of the API."
        },
        "urlMappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URLMapping"
          }
        }
      }
    },
    "synapseArtifact" : {
      "properties" : {
        "apiId" : {
          "type" : "string"
        },
        "apiName" : {
          "type" : "string",
          "description" : "API Provider name."
        },
        "version" : {
          "type" : "string",
          "description" : "version of the API"
        },
        "tenantDomain" : {
          "type" : "string",
          "description" : "tenantDomain of the API"
        },
        "gatewayLabel" : {
          "type" : "string",
          "description" : "label of the API"
        },
        "gatewayInstruction" : {
          "type" : "string",
          "description" : "Publish/Remove"
        },
        "bytesEncodedAsString" : {
          "type" : "string",
          "description" : "bytes"
        }
      }
    },
    "ApplicationList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Applications returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Application"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Application List"
    },
    "Application" : {
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "subName" : {
          "type" : "string"
        },
        "policy" : {
          "type" : "string",
          "description" : "Application level throtting policy."
        },
        "tokenType" : {
          "type" : "string",
          "example" : "JWT",
          "description" : "type of the token."
        },
        "groupIds" : {
          "type" : "array",
          "example" : "wso2",
          "description" : "group ids associated with the application.",
          "items" : {
            "$ref" : "#/definitions/GroupId"
          }
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "organization" : {
          "type" : "string",
          "description" : "organization of application."
        }
      }
    },
    "GroupId" : {
      "properties" : {
        "groupId" : {
          "type" : "string"
        },
        "applicationId" : {
          "type" : "integer"
        }
      },
      "title" : "Application Group Id"
    },
    "KeyManager" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "tenantDomain" : {
          "type" : "string"
        },
        "configuration" : {
          "type" : "object",
          "properties" : { }
        },
        "tokenType" : {
          "type" : "string",
          "example" : "EXCHANGED",
          "description" : "The type of the tokens to be used (exchanged or without exchanged). Accepted values are EXCHANGED, DIRECT or BOTH.",
          "enum" : [ "EXCHANGED", "DIRECT", "BOTH" ],
          "default" : "DIRECT"
        }
      }
    },
    "SubscriptionList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Subscriptions returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Subscription"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Application List"
    },
    "Subscription" : {
      "properties" : {
        "subscriptionUUID" : {
          "type" : "string"
        },
        "subscriptionId" : {
          "type" : "integer"
        },
        "policyId" : {
          "type" : "string"
        },
        "apiUUID" : {
          "type" : "string"
        },
        "apiId" : {
          "type" : "integer"
        },
        "applicationUUID" : {
          "type" : "string"
        },
        "appId" : {
          "type" : "integer"
        },
        "subscriptionState" : {
          "type" : "string"
        }
      }
    },
    "SynapseArtifactList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Synapse Artifacts returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "SynapseArtifactList"
    },
    "ApplicationKeyMappingList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of ApplicationKeyMappings returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationKeyMapping"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApplicationKeyMapping List"
    },
    "ApplicationKeyMapping" : {
      "properties" : {
        "applicationId" : {
          "type" : "integer"
        },
        "applicationUUID" : {
          "type" : "string"
        },
        "consumerKey" : {
          "type" : "string"
        },
        "keyType" : {
          "type" : "string"
        },
        "keyManager" : {
          "type" : "string"
        }
      }
    },
    "ScopesList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Scopes returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Scope"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Scopes List"
    },
    "Scope" : {
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "roles" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "webhooksSubscriptionsList" : {
      "properties" : {
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/webhooksSubscription"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Scopes List"
    },
    "webhooksSubscription" : {
      "properties" : {
        "apiUUID" : {
          "type" : "string",
          "description" : "The API UUID"
        },
        "apiContext" : {
          "type" : "string",
          "description" : "The API context."
        },
        "apiVersion" : {
          "type" : "string",
          "description" : "The API version."
        },
        "tenantDomain" : {
          "type" : "string",
          "description" : "The tenant domain."
        },
        "tenantId" : {
          "type" : "integer",
          "example" : -1234,
          "description" : "The tenant id."
        },
        "appID" : {
          "type" : "string",
          "example" : "1",
          "description" : "The application ID of the subscription."
        },
        "callbackURL" : {
          "type" : "string",
          "description" : "The callback URL"
        },
        "topicName" : {
          "type" : "string",
          "description" : "The topic name."
        },
        "secret" : {
          "type" : "string",
          "description" : "Secret value of the subscription."
        },
        "expiryTime" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "the expiry time in millis"
        },
        "tier" : {
          "type" : "string",
          "example" : "Bronze",
          "description" : "the subscription tier."
        },
        "applicationTier" : {
          "type" : "string",
          "example" : "Unlimited",
          "description" : "the application tier."
        },
        "apiTier" : {
          "type" : "string",
          "example" : "Bronze",
          "description" : "the API tier."
        },
        "subscriberName" : {
          "type" : "string",
          "example" : "admin",
          "description" : "the subscriber name."
        }
      }
    },
    "Policy" : {
      "properties" : {
        "id" : {
          "type" : "integer"
        },
        "tenantId" : {
          "type" : "integer"
        },
        "tenantDomain" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "quotaType" : {
          "type" : "string"
        }
      }
    },
    "SubscriptionPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of SubscriptionPolices returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubscriptionPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "SubscriptionPolicy List"
    },
    "SubscriptionPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      }, {
        "$ref" : "#/definitions/GraphQLQuery"
      }, {
        "properties" : {
          "rateLimitCount" : {
            "type" : "integer"
          },
          "rateLimitTimeUnit" : {
            "type" : "string"
          },
          "stopOnQuotaReach" : {
            "type" : "boolean"
          },
          "defaultLimit" : {
            "$ref" : "#/definitions/ThrottleLimit"
          }
        }
      } ]
    },
    "GraphQLQuery" : {
      "properties" : {
        "graphQLMaxComplexity" : {
          "type" : "integer",
          "example" : 400,
          "description" : "Maximum Complexity of the GraphQL query"
        },
        "graphQLMaxDepth" : {
          "type" : "integer",
          "example" : 10,
          "description" : "Maximum Depth of the GraphQL query"
        }
      },
      "title" : "GraphQL Query"
    },
    "ApplicationPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of ApplicationPolicies returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApplicationPolicy List"
    },
    "ApplicationPolicy" : {
      "properties" : {
        "defaultLimit" : {
          "$ref" : "#/definitions/ThrottleLimit"
        }
      },
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      } ]
    },
    "ApiPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Api Policies returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApiPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "ApiPolicy List"
    },
    "ApiPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      }, {
        "properties" : {
          "conditionGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/ApiPolicyConditionGroup"
            }
          },
          "applicableLevel" : {
            "type" : "string"
          },
          "defaultLimit" : {
            "$ref" : "#/definitions/ThrottleLimit"
          }
        }
      } ]
    },
    "ApiPolicyConditionGroup" : {
      "properties" : {
        "policyId" : {
          "type" : "integer"
        },
        "quotaType" : {
          "type" : "string"
        },
        "conditionGroupId" : {
          "type" : "integer"
        },
        "condition" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Condition"
          }
        },
        "defaultLimit" : {
          "$ref" : "#/definitions/ThrottleLimit"
        }
      }
    },
    "Condition" : {
      "properties" : {
        "conditionType" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        },
        "isInverted" : {
          "type" : "boolean"
        }
      }
    },
    "GlobalPolicyList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Global Policies returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GlobalPolicy"
          }
        },
        "pagination" : {
          "$ref" : "#/definitions/Pagination"
        }
      },
      "title" : "Global Policy List"
    },
    "GlobalPolicy" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Policy"
      }, {
        "properties" : {
          "siddhiQuery" : {
            "type" : "string"
          },
          "keyTemplate" : {
            "type" : "string"
          }
        }
      } ]
    },
    "URLMapping" : {
      "properties" : {
        "authScheme" : {
          "type" : "string"
        },
        "throttlingPolicy" : {
          "type" : "string"
        },
        "httpMethod" : {
          "type" : "string"
        },
        "urlPattern" : {
          "type" : "string"
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "Pagination" : {
      "properties" : {
        "offset" : {
          "type" : "integer",
          "example" : 0
        },
        "limit" : {
          "type" : "integer",
          "example" : 1
        },
        "total" : {
          "type" : "integer",
          "example" : 10
        },
        "next" : {
          "type" : "string",
          "description" : "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous" : {
          "type" : "string",
          "description" : "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        }
      },
      "title" : "Pagination"
    },
    "ThrottleLimitBase" : {
      "required" : [ "timeUnit", "unitTime" ],
      "properties" : {
        "timeUnit" : {
          "type" : "string",
          "example" : "min",
          "description" : "Unit of the time. Allowed values are \"sec\", \"min\", \"hour\", \"day\""
        },
        "unitTime" : {
          "type" : "integer",
          "example" : 10,
          "description" : "Time limit that the throttling limit applies."
        }
      },
      "title" : "Throttle Limit Base"
    },
    "ThrottleLimit" : {
      "properties" : {
        "quotaType" : {
          "type" : "string"
        },
        "requestCount" : {
          "$ref" : "#/definitions/RequestCountLimit"
        },
        "bandwidth" : {
          "$ref" : "#/definitions/BandwidthLimit"
        },
        "eventCount" : {
          "$ref" : "#/definitions/EventCountLimit"
        }
      },
      "title" : "Throttle Limit"
    },
    "BandwidthLimit" : {
      "title" : "Bandwidth Limit object",
      "allOf" : [ {
        "$ref" : "#/definitions/ThrottleLimitBase"
      }, {
        "required" : [ "dataAmount", "dataUnit" ],
        "properties" : {
          "dataAmount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1000,
            "description" : "Amount of data allowed to be transfered"
          },
          "dataUnit" : {
            "type" : "string",
            "example" : "KB",
            "description" : "Unit of data allowed to be transfered. Allowed values are \"KB\", \"MB\" and \"GB\""
          }
        }
      } ]
    },
    "RequestCountLimit" : {
      "title" : "Request Count Limit object",
      "allOf" : [ {
        "$ref" : "#/definitions/ThrottleLimitBase"
      }, {
        "required" : [ "requestCount" ],
        "properties" : {
          "requestCount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 1000,
            "description" : "Maximum number of requests allowed"
          }
        }
      } ]
    },
    "EventCountLimit" : {
      "title" : "Event Count Limit object",
      "allOf" : [ {
        "$ref" : "#/components/schemas/ThrottleLimitBase"
      }, {
        "type" : "object",
        "required" : [ "eventCount" ],
        "properties" : {
          "eventCount" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 3000,
            "description" : "Maximum number of events allowed"
          }
        }
      } ]
    },
    "APILoggingConfigList" : {
      "properties" : {
        "apis" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/APILoggingConfig"
          }
        }
      },
      "title" : "apis"
    },
    "APILoggingConfig" : {
      "properties" : {
        "context" : {
          "type" : "string",
          "example" : "pizashack/v1.0.0"
        },
        "logLevel" : {
          "type" : "string",
          "example" : "all"
        }
      },
      "title" : "API Info object with log details"
    },
    "CorrelationComponentsList" : {
      "properties" : {
        "components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CorrelationComponent"
          }
        }
      },
      "title" : "correlation-components"
    },
    "CorrelationComponent" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "http"
        },
        "enabled" : {
          "type" : "string",
          "example" : "true"
        },
        "properties" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CorrelationComponentProperty"
          }
        }
      },
      "title" : "Correlation Component INFO object"
    },
    "CorrelationComponentProperty" : {
      "properties" : {
        "name" : {
          "type" : "string",
          "example" : "deniedThreads"
        },
        "value" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "MessageDeliveryTaskPool"
          }
        }
      },
      "title" : "Properties for correlation components"
    }
  },
  "parameters" : {
    "requestedTenant" : {
      "name" : "xWSO2Tenant",
      "in" : "header",
      "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
      "required" : true,
      "type" : "string"
    },
    "type" : {
      "name" : "X-WSO2-KEY-MANAGER",
      "in" : "header",
      "description" : "This is used to specify the tenant domain, where the resource need to be\n  retrieved from.\n",
      "required" : true,
      "type" : "string"
    },
    "Accept" : {
      "name" : "Accept",
      "in" : "header",
      "description" : "Media types acceptable for the response. Default is application/json.\n",
      "required" : false,
      "type" : "string",
      "default" : "application/json"
    }
  }
}