swagger: '2.0'
######################################################
# Prolog
######################################################
info:
  version: "v1"
  title: "WSO2 API Manager - Store"
  description: |
    This document specifies a **RESTful API** for WSO2 **API Manager** - Store.

    It is written with [swagger 2](http://swagger.io/).

  contact:
    name: "WSO2"
    url: "http://wso2.com/products/api-manager/"
    email: "architecture@wso2.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

######################################################
# The fixed parts of the URLs of the API
######################################################

# The schemes supported by the API
schemes:
  - https
  - http

# The domain of the API.
# This is configured by the customer during deployment.
# The given host is just an example.
host: apis.wso2.com

# The base path of the API.
# Will be prefixed to all paths.
basePath: /api/am/store/v1

# The following media types can be passed as input in message bodies of the API.
# The actual media type must be specified in the Content-Type header field of the request.
# The default is json, i.e. the Content-Type header is not needed to
# be set, but supporting it serves extensibility.
consumes:
  - application/json

# The following media types may be passed as output in message bodies of the API.
# The media type(s) consumable by the requestor is specified in the Accept header field
# of the corresponding request.
# The actual media type returned will be specfied in the Content-Type header field
# of the of the response.
# The default of the Accept header is json, i.e. there is not needed to
# set the value, but supporting it serves extensibility.
produces:
  - application/json

x-wso2-security:
  apim:
    x-wso2-scopes:
      - description: ""
        roles: Internal/subscriber
        name: apim:subscribe
        key: apim:subscribe

######################################################
# The "API Collection" resource APIs
######################################################
paths:
  /apis:

#-----------------------------------------------------
# Retrieving the list of all APIs qualifying under a given search condition
#-----------------------------------------------------
    get:
      summary: |
        Retrieving APIs
      description: |
        Get a list of available APIs qualifying under a given search condition.
      parameters:
        - $ref : '#/parameters/limit'
        - $ref : '#/parameters/offset'
        - name : query
          in: query
          description: |
            **Search condition**.

            You can search in attributes by using an **"attribute:"** modifier.

            Eg.
            "provider:wso2" will match an API if the provider of the API is exactly "wso2".

            Additionally you can use wildcards.

            Eg.
            "provider:wso2*" will match an API if the provider of the API starts with "wso2".

            Supported attribute modifiers are [**version, context, lifeCycleStatus,
            description, subcontext, doc, provider, tag **]

            If no advanced attribute modifier has been specified, search will match the
            given query string against API Name.
          type: string
        - $ref : "#/parameters/Accept"
        - $ref : "#/parameters/If-None-Match"
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API Collection
        - Retrieve
      responses:
        200:
          description: |
            OK.
            List of qualifying APIs is returned.
          schema:
            $ref: '#/definitions/APIList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Individual API" resource APIs
######################################################
  /apis/{apiId}:

#-----------------------------------------------------
# Retrieve the details of an API definition
#-----------------------------------------------------
    get:
      description: |
        Get details of an API
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Requested API is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests.
              type: string
          schema:
            $ref: '#/definitions/API'
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'


  /apis/{apiId}/swagger:
#-----------------------------------------------------
# Retrieve the API swagger definition
#-----------------------------------------------------
    get:
      description: |
        Get the swagger of an API
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/labelName'
        - $ref: '#/parameters/scheme'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Requested swagger document of the API is returned
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Document Collection" resource APIs
######################################################
  /apis/{apiId}/documents:

#-----------------------------------------------------
# Retrieve the documents associated with an API that qualify under a search condition
#-----------------------------------------------------
    get:
      description: |
        Get a list of documents belonging to an API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Retrieve Documents
      responses:
        200:
          description: |
            OK.
            Document list is returned.
          schema:
            $ref: '#/definitions/DocumentList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Individual Document" resource APIs
######################################################
  '/apis/{apiId}/documents/{documentId}':

#-----------------------------------------------------
# Retrieve a particular document of a certain API
#-----------------------------------------------------
    get:
      description: |
        Get a particular document associated with an API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/documentId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Retrieve Document
      responses:
        200:
          description: |
            OK.
            Document returned.
          schema:
            $ref: '#/definitions/Document'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Document does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'


################################################################
# The content resource of "Individual Document" resource APIs
################################################################

  '/apis/{apiId}/documents/{documentId}/content':

  #-------------------------------------------------------------------------------------------------
  # Downloads a FILE type document/get the inline content or source url of a certain document
  #-------------------------------------------------------------------------------------------------
      get:
        description: |
          Downloads a FILE type document/get the inline content or source url of a certain document.
        parameters:
          - $ref: '#/parameters/apiId'
          - $ref: '#/parameters/documentId'
          - $ref: '#/parameters/Accept'
          - $ref: '#/parameters/If-None-Match'
          - $ref: '#/parameters/If-Modified-Since'
          - $ref: '#/parameters/Minor-Version'
        tags:
          - API (individual)
          - Retrieve Document
        responses:
          200:
            description: |
              OK.
              File or inline content returned.
            headers:
              Content-Type:
                description: |
                  The content type of the body.
                type: string
              ETag:
                description: |
                  Entity Tag of the response resource.
                  Used by caches, or in conditional requests.
                type: string
              Last-Modified:
                description: |
                  Date and time the resource has been modifed the last time.
                  Used by caches, or in conditional reuquests.
                type: string
          303:
            description: |
              See Other.
              Source can be retrived from the URL specified at the Location header.
            headers:
              Location:
                description: |
                  The Source URL of the document.
                type: string
          304:
            description: |
              Not Modified.
              Empty body because the client has already the latest version of the requested resource.
          404:
            description: |
              Not Found.
              Requested Document does not exist.
            schema:
              $ref: '#/definitions/Error'
          406:
            description: |
              Not Acceptable.
              The requested media type is not supported
            schema:
              $ref: '#/definitions/Error'

######################################################
# The "API Rating" resource APIs
######################################################
  '/apis/{apiId}/rating':

#-----------------------------------------------------
# Retrieve the Rating of a certain API
#-----------------------------------------------------
    get:
      description: |
        Get the rating of an API.
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Retrieve Rating
      responses:
        200:
          description: |
            OK.
            Rating returned.
          schema:
            $ref: '#/definitions/RatingList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        404:
          description: |
            Not Found.
            Requested rating does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Add a new Rating
#-----------------------------------------------------
    post:
      x-scope: apim:subscribe
      description: |
        Add a new Rating
      parameters:
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            Rating object that should to be added
          required: true
          schema:
            $ref: '#/definitions/Rating'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Create
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/Rating'
          headers:
            Location:
              description: |
                Location to the newly created Rating.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional request.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Comments Collection" resource API
######################################################
  '/apis/{apiId}/comments':

#-----------------------------------------------------
# Retrieve a list of all comments of a certain API
#-----------------------------------------------------
   get:
      description: |
        Get a list of Comments that are already added to APIs
      parameters:
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Comments Collection
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Comments list is returned.
          schema:
            $ref: '#/definitions/CommentList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        406:
          description: |
            Not Acceptable. The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

#########################################################
# "Individual API comment" resource APIs
#########################################################
  '/apis/{apiId}/comments/{commentId}':

#-----------------------------------------------------------------------
# Retrieve an individual Comment for a certain API
#-----------------------------------------------------------------------
    get:
      x-scope: apim:subscribe
      description: |
        Get the individual comment given by a subscriber for a certain API.
      parameters:
        - $ref: '#/parameters/commentId'
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Retrieve Comment
      responses:
        200:
          description: |
            OK.
            Comment returned.
          schema:
            $ref: '#/definitions/Comment'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested comment does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete a particular Comment
#-----------------------------------------------------
    delete:
      x-scope: apim:subscribe
      description: |
        Remove a Comment
      parameters:
        - $ref: '#/parameters/commentId'
        - $ref: '#/parameters/apiId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Delete
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'

#########################################################
# "Add API comment" resource APIs
#########################################################
  '/apis/{apiId}/comments':
#-----------------------------------------------------
# Add a new Comment
#-----------------------------------------------------
    post:
      x-scope: apim:subscribe
      description: |
        Add a new Comment
      parameters:
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            Comment object that should to be added
          required: true
          schema:
            $ref: '#/definitions/Comment'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Create
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/Comment'
          headers:
            Location:
              description: |
                Location to the newly created Comment.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional request.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update a particular Comment
#-----------------------------------------------------
    put:
      x-scope: apim:subscribe
      description: |
        Update a certain Comment
      parameters:
        - $ref: '#/parameters/commentId'
        - $ref: '#/parameters/apiId'
        - in: body
          name: body
          description: |
            Comment object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Comment'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - API (individual)
        - Update
      responses:
        200:
          description: |
            OK.
            Comment updated.
          schema:
            $ref: '#/definitions/Comment'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Application Collection" resource APIs
######################################################
  /applications:

#-----------------------------------------------------
# Retrieve a list of all applications of a certain subscriber
#-----------------------------------------------------
    get:
      x-scope: apim:subscribe
      description: |
        Get a list of applications
      parameters:
        - name : query
          in: query
          description: |
            **Search condition**.

            You can search for an application by specifying the name as "query" attribute.

            Eg.
            "app1" will match an application if the name is exactly "app1".

            Currently this does not support wildcards. Given name must exactly match the application name.
          type: string
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Application Collection
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Application list returned.
          schema:
            $ref: '#/definitions/ApplicationList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Create a new application
#-----------------------------------------------------
    post:
      x-scope: apim:subscribe
      description: |
        Create a new application.
      parameters:
        - in: body
          name: body
          description: |
            Application object that is to be created.
          required: true
          schema:
            $ref: '#/definitions/Application'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Application (individual)
        - Create
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/Application'
          headers:
            Location:
              description: |
                Location of the newly created Application.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional request
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        409:
          description: |
            Conflict.
            Application already exists.
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Individual Application" resource APIs
######################################################
  '/applications/{applicationId}':

#-----------------------------------------------------
# Retrieve the details about a certain application
#-----------------------------------------------------
    get:
      x-scope: apim:subscribe
      description: |
        Get application details
      parameters:
        - $ref: '#/parameters/applicationId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Application (individual)
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Application returned.
          schema:
            $ref: '#/definitions/Application'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested application does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Update a certain application
#-----------------------------------------------------
    put:
      x-scope: apim:subscribe
      description: |
        Update application details
      parameters:
        - $ref: '#/parameters/applicationId'
        - in: body
          name: body
          description: |
            Application object that needs to be updated
          required: true
          schema:
            $ref: '#/definitions/Application'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Application (individual)
        - Update
      responses:
        200:
          description: |
            OK.
            Application updated.
          schema:
            $ref: '#/definitions/Application'
          headers:
            Location:
              description: |
                The URL of the newly created resource.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete a certain application
#-----------------------------------------------------
    delete:
      x-scope: apim:subscribe
      description: |
        Remove an application
      parameters:
        - $ref: '#/parameters/applicationId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Application (individual)
        - Delete
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Generate Keys" Processing Function resource API
######################################################
  '/applications/generate-keys':

#-----------------------------------------------------
# Generate keys for an application
#-----------------------------------------------------
    post:
      x-scope: apim:subscribe
      description: |
        Generate keys for application
      parameters:
        - $ref: '#/parameters/applicationId-Q'
        - in: body
          name: body
          description: |
            Application object the keys of which are to be generated
          required: true
          schema:
            $ref: '#/definitions/ApplicationKeyGenerateRequest'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Application (individual)
        - Generate Keys
      responses:
        200:
          description: |
            OK.
            Keys are generated.
          schema:
            $ref: '#/definitions/ApplicationKey'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional request.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.‚
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            The resource to be updated does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Subscription Collection" resource APIs
######################################################
  /subscriptions:

#-----------------------------------------------------
# Retrieve all subscriptions of a certain API and application
#-----------------------------------------------------
    get:
      x-scope: apim:subscribe
      description: |
        Get subscription list.
        The API Identifier or Application Identifier
        the subscriptions of which are to be returned are passed as parameters.
      parameters:
        - $ref: '#/parameters/apiId-Q'
        - $ref: '#/parameters/applicationId-Q'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Subscription Collection
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Subscription list returned.
          schema:
            $ref: '#/definitions/SubscriptionList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable. The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Create a new subscription
#-----------------------------------------------------
    post:
      x-scope: apim:subscribe
      description: |
        Add a new subscription
      parameters:
        - in: body
          name: body
          description: |
            Subscription object that should to be added
          required: true
          schema:
            $ref: '#/definitions/Subscription'
        - $ref: '#/parameters/Content-Type'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Subscription (individual)
        - Create
      responses:
        201:
          description: |
            Created.
            Successful response with the newly created object as entity in the body.
            Location header contains URL of newly created entity.
          schema:
            $ref: '#/definitions/Subscription'
          headers:
            Location:
              description: |
                Location to the newly created subscription.
              type: string
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource. Used by caches, or in conditional request.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        415:
          description: |
            Unsupported media type.
            The entity of the request was in a not supported format.

######################################################
# The "Individual Subscription" resource APIs
######################################################
  '/subscriptions/{subscriptionId}':

#-----------------------------------------------------
# Retrieve a certain subscription
#-----------------------------------------------------
    get:
      x-scope: apim:subscribe
      description: |
        Get subscription details
      parameters:
        - $ref: '#/parameters/subscriptionId'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Subscription (individual)
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Subscription returned
          schema:
            $ref: '#/definitions/Subscription'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: 'Entity Tag of the response resource. Used by caches, or in conditional requests.'
              type: string
            Last-Modified:
              description: 'Date and time the resource has been modifed the last time. Used by caches, or in conditional reuquests.'
              type: string
        '304':
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        '404':
          description: |
            Not Found.
            Requested Subscription does not exist.
          schema:
            $ref: '#/definitions/Error'

#-----------------------------------------------------
# Delete a certain subscription
#-----------------------------------------------------
    delete:
      x-scope: apim:subscribe
      description: |
        Remove subscription
      parameters:
        - $ref: '#/parameters/subscriptionId'
        - $ref: '#/parameters/If-Match'
        - $ref: '#/parameters/If-Unmodified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Subscription (individual)
        - Delete
      responses:
        200:
          description: |
            OK.
            Resource successfully deleted.
        404:
          description: |
            Not Found.
            Resource to be deleted does not exist.
          schema:
            $ref: '#/definitions/Error'
        412:
          description: |
            Precondition Failed.
            The request has not been performed because one of the preconditions is not met.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Tier Collection" resource APIs
######################################################
  /policies/{tierLevel}:

#-----------------------------------------------------
# Retrieve the list of all available policies
#-----------------------------------------------------
    get:
      description: |
        Get available policies
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/tierLevel'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Tier Collection
        - Retrieve
      responses:
        200:
          description: |
            OK.
            List of policies returned.
          schema:
            type: array
            items:
              $ref: '#/definitions/TierList'
          headers:
            Content-Type:
              description: The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Individual Tier" resource APIs
######################################################
  '/policies/{tierLevel}/{tierName}':

#-----------------------------------------------------
# Retrieve a certain policy
#-----------------------------------------------------
    get:
      description: |
        Get policy details
      parameters:
        - $ref: '#/parameters/tierName'
        - $ref: '#/parameters/tierLevel'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Tier (individual)
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Tier returned
          schema:
            $ref: '#/definitions/Tier'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
            Last-Modified:
              description: |
                Date and time the resource has been modifed the last time.
                Used by caches, or in conditional reuquests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found.
            Requested Tier does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable.
            The requested media type is not supported.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Tag Collection" resource API
######################################################
  /tags:

#-----------------------------------------------------
# Retrieve the list of tags qualifying under a search condition
#-----------------------------------------------------
    get:
      description: |
        Get a list of tags that are already added to APIs
      parameters:
        - $ref: '#/parameters/limit'
        - $ref: '#/parameters/offset'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Tag Collection
        - Retrieve
      responses:
        200:
          description: |
            OK.
            Tag list is returned.
          schema:
            $ref: '#/definitions/TagList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests.
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource.
        404:
          description: |
            Not Found. Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'
        406:
          description: |
            Not Acceptable. The requested media type is not supported
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Label Collection" resource API
######################################################
  /label-info:

#-----------------------------------------------------
# Retrieve the label information
#-----------------------------------------------------
    get:
      summary: Get label information based on the label name
      description: |
        This operation can be used to retrieve the information of the labels
      parameters:
        - $ref: '#/parameters/labels-Q'
        - $ref: '#/parameters/Accept'
        - $ref: '#/parameters/If-None-Match'
        - $ref: '#/parameters/If-Modified-Since'
        - $ref: '#/parameters/Minor-Version'
      tags:
        - Label (Collection)
      responses:
        200:
          description: |
            OK.
            Label list is returned.
          schema:
             $ref: '#/definitions/LabelList'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
            ETag:
              description: |
                Entity Tag of the response resource.
                Used by caches, or in conditional requests (Will be supported in future).
              type: string
        304:
          description: |
            Not Modified.
            Empty body because the client has already the latest version of the requested resource (Will be supported in future).
        404:
          description: |
            Not Found.
            Requested API does not exist.
          schema:
            $ref: '#/definitions/Error'

######################################################
# The "Workflow approval" resource API
######################################################
  /workflows/update-workflow-status:

#-------------------------------------------------------------------
# Resume the workflow by approving or rejecting the workflow request
#-------------------------------------------------------------------
    post:
      x-scope: apim:api_workflow
      summary: Update workflow status
      description: |
        This operation can be used to approve or reject a workflow task. .
      parameters:
       - $ref: '#/parameters/workflowReferenceId-Q'
       - in: body
         name: body
         description: |
            Workflow event that need to be updated
         required: true
         schema:
           $ref: '#/definitions/Workflow'
      tags:
        - Workflows (Individual)
      responses:
        200:
          description: |
            OK.
            Workflow request information is returned.
          schema:
            $ref: '#/definitions/Workflow'
          headers:
            Content-Type:
              description: |
                The content type of the body.
              type: string
        400:
          description: |
            Bad Request.
            Invalid request or validation error.
          schema:
            $ref: '#/definitions/Error'
        404:
          description: |
            Not Found.
            Workflow for the given reference in not found.
          schema:
            $ref: '#/definitions/Error'

######################################################
# Parameters - required by some of the APIs above
######################################################
parameters:

# API Identifier
# Specified as part of the path expression
  apiId:
    name: apiId
    in: path
    description: |
      **API ID** consisting of the **UUID** of the API.
      The combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.
      Should be formatted as **provider-name-version**.
    required: true
    type: string

# API Identifier
# Specified as part of the query string
  apiId-Q:
    name: apiId
    in: query
    description: |
      **API ID** consisting of the **UUID** of the API.
      The combination of the provider of the API, name of the API and the version is also accepted as a valid API I.
      Should be formatted as **provider-name-version**.
    required: true
    type: string


# Document Identifier
# Specified as part of the path expression
  documentId:
    name: documentId
    in: path
    description: |
      **Document Identifier**
    required: true
    type: string

# Application Identifier
# Specified as part of the path expression
  applicationId:
    name: applicationId
    in: path
    description: |
      **Application Identifier** consisting of the UUID of the Application.
    required: true
    type: string

# Application Identifier
# Specified as part of the query string
  applicationId-Q:
    name: applicationId
    in: query
    description: |
      **Application Identifier** consisting of the UUID of the Application.
    required: true
    type: string

# Group Identifier of the application
  groupId:
    name: groupId
    in: query
    description: |
      Application Group Id
    required: false
    type: string

# Subscription Identifier
# Specified as part of the path expression
  subscriptionId:
    name: subscriptionId
    in: path
    description: |
      Subscription Id
    required: true
    type: string

# Comment Identifier
# Specified as part of the path expression
  commentId:
    name: commentId
    in: path
    description: |
      Comment Id
    required: true
    type: string

# Subscriber Name
# Specified as part of the path expression
  subscriberName:
    name: subscriberName
    in: path
    description: |
      subscriber Name
    required: true
    type: string

# Tier Name
# Specified as part of the path expression
  tierName:
    name: tierName
    in: path
    description: |
      Tier name
    required: true
    type: string

# Tier Type
# Specified as part of the path expression
  tierLevel:
    name: tierLevel
    in: path
    description: |
      List API or Application type policies.
    type: string
    enum:
      - api
      - application
    required: true
    
# Label name of the gateway
# Specified as part of the query string
  labelName:
    name: labelName
    in: query
    description: |
      Label name 
    required: false
    type: string
    
# Protocol of the gateway access URL
# Specified as part of the query string
  scheme:
    name: scheme
    in: query
    description: |
      Protocol of the gateway access URL.
      Value should be either "http" or "https"
    required: false
    type: string

# Used for pagination:
# The maximum number of resoures to be returned by a GET
  limit:
    name: limit
    in: query
    description: |
      Maximum size of resource array to return.
    default: 25
    type: integer

# Used for pagination:
# The order number of an instance in a qualified set of resoures
# at which to start to return the next batch of qualified resources
  offset:
    name: offset
    in: query
    description: |
      Starting point within the complete list of items qualified.
    default: 0
    type: integer

# The HTTP Accept header
  Accept:
    name: Accept
    in: header
    description: |
      Media types acceptable for the response. Default is JSON.
    default: JSON
    type: string

# The HTTP Content-Type header
  Content-Type:
    name: Content-Type
    in: header
    description: |
      Media type of the entity in the body. Default is JSON.
    default: JSON
    required: true
    type : string

# The HTTP If-None-Match header
# Used to avoid retrieving data that are already cached
  If-None-Match:
    name: If-None-Match
    in: header
    description: |
      Validator for conditional requests; based on the ETag of the formerly retrieved
      variant of the resourec.
    type : string

# The HTTP If-Modified-Since header
# Used to avoid retrieving data that are already cached
  If-Modified-Since:
    name: If-Modified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header of the
      formerly retrieved variant of the resource.
    type: string

# The HTTP If-Match header
# Used to avoid concurrent updates
  If-Match:
    name: If-Match
    in: header
    description: |
      Validator for conditional requests; based on ETag.
    type: string

# The HTTP If-Unmodified-Since header
# Used to avoid concurrent updates
  If-Unmodified-Since:
    name: If-Unmodified-Since
    in: header
    description: |
      Validator for conditional requests; based on Last Modified header.
    type: string

# The HTTP Minor-Version header
# Used to validate the minor version of API
  Minor-Version:
    name: Minor-Version
    in: header
    description: |
      Validator for API Minor Version
    type: string
    default: 1.0

# Workflow reference ID
# Specified as part of the path expression
  workflowReferenceId-Q:
    name: workflowReferenceId
    in: query
    description: |
      Workflow reference id
    required: true
    type: string

# List of labels
# Specified as part of the query string
  labels-Q:
    name: labels
    in: query
    description: |
      Defines comma separated list of labels
    required: true
    type: string

######################################################
# The resources used by some of the APIs above within the message body
######################################################
definitions:

#-----------------------------------------------------
# The API List resource
#-----------------------------------------------------
  APIList:
    title: API List
    properties:
      count:
        type: integer
        description: |
          Number of APIs returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/APIInfo'

#-----------------------------------------------------
# The API Info resource
#-----------------------------------------------------
  APIInfo:
    title: API Info object with basic API details.
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      context:
        type: string
      version:
        type: string
      provider:
        description: |
          If the provider value is not given, the user invoking the API will be used as the provider.
        type: string
      lifeCycleStatus:
        type: string

#-----------------------------------------------------
# The API resource
#-----------------------------------------------------
  API:
    title: API object
    required:
      - name
      - context
      - version
      - provider
      - lifeCycleStatus
      - endpointId
    properties:
      id:
        type: string
        description: |
          UUID of the api registry artifact
      name:
        type: string
      description:
        type: string
      context:
        type: string
      version:
        type: string
      provider:
        description: |
          If the provider value is not given user invoking the api will be used as the provider.
        type: string
      apiDefinition:
        description: |
          Swagger definition of the API which contains details about URI templates and scopes
        type: string
      lifeCycleStatus:
        type: string
      isDefaultVersion:
        type: boolean
      transport:
        type: array
        items:
          description: |
            Supported transports for the API (http and/or https).
          type: string
      tags:
        type: array
        items:
          type: string
      labels:
        type: array
        items:
          type: string
      policies:
        type: array
        items:
          type: string
      businessInformation:
        properties:
          businessOwner:
            type: string
          businessOwnerEmail:
            type: string
          technicalOwner:
            type: string
          technicalOwnerEmail:
            type: string

#-----------------------------------------------------
# The Application List resource
#-----------------------------------------------------
  ApplicationList:
    title: Application List
    properties:
      count:
        type: integer
        description: |
          Number of applications returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/ApplicationInfo'

#-----------------------------------------------------
# The Application resource
#-----------------------------------------------------
  Application:
    title: Application
    required:
      - name
      - throttlingTier
    properties:
      applicationId:
        type: string
      name:
        type: string
      subscriber:
        description: |
          If subscriber is not given user invoking the API will be taken as the subscriber.
        type: string
      throttlingTier:
        type: string
      callbackUrl:
        type: string
      permission:
        type: string
        example: "[{\"groupId\" : 1000, \"permission\" : [\"READ\",\"UPDATE\"]},{\"groupId\" : 1001, \"permission\" : [\"READ\",\"UPDATE\"]}]"
      description:
        type: string
      lifeCycleStatus:
        type: string
      groupId:
        type: string
      keys:
        type: array
        items:
          $ref: '#/definitions/ApplicationKey'

#-----------------------------------------------------
# The Application Info resource
#-----------------------------------------------------
  ApplicationInfo:
    title: Application info object with basic application details
    properties:
      applicationId:
        type: string
      name:
        type: string
      subscriber:
        type: string
      throttlingTier:
        type: string
      description:
        type: string
      lifeCycleStatus:
        type: string
      groupId:
        type: string

#-----------------------------------------------------
# The Document List resource
#-----------------------------------------------------
  DocumentList:
    title: Document List
    properties:
      count:
        type: integer
        description: |
          Number of Documents returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Document'

#-----------------------------------------------------
# The Document resource
#-----------------------------------------------------
  Document:
    title: Document
    required:
      - name
      - type
      - sourceType
    properties:
      documentId:
        type: string
      name:
        type: string
      type:
        type: string
        enum:
          - HOWTO
          - SAMPLES
          - PUBLIC_FORUM
          - SUPPORT_FORUM
          - API_MESSAGE_FORMAT
          - SWAGGER_DOC
          - OTHER
      summary:
        type: string
      sourceType:
        type: string
        enum:
          - INLINE
          - URL
          - FILE
      sourceUrl:
        type: string
      inlineContent:
        type: string
      otherTypeName:
        type: string

#-----------------------------------------------------
# The Tier List resource
#-----------------------------------------------------
  TierList:
    title: Tier List
    properties:
      count:
        type: integer
        description: |
          Number of Tiers returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Tier'

#-----------------------------------------------------
# The Tier resource
#-----------------------------------------------------
  Tier:
    title: Tier
    required:
      - name
      - tierPlan
      - requestCount
      - unitTime
      - stopOnQuotaReach
    properties:
      name:
        type: string
      description:
        type: string
      tierLevel:
        type: string
        enum:
          - api
          - application
          - subscription
      attributes:
        description: |
          Custom attributes added to the policy policy
        type: object
        additionalProperties:
          type: string
      requestCount:
        description: |
          Maximum number of requests which can be sent within a provided unit time
        type: integer
        format: int64
      unitTime:
        type: integer
        format: int64
      tierPlan:
        description: |
          This attribute declares whether this policy is available under commercial or free
        type: string
        enum:
          - FREE
          - COMMERCIAL
      stopOnQuotaReach:
        description: |
          If this attribute is set to false, you are capabale of sending requests
          even if the request count exceeded within a unit time
        type: boolean

#-----------------------------------------------------
# The Subscription List resource
#-----------------------------------------------------
  SubscriptionList:
    title: Subscription List
    properties:
      count:
        type: integer
        description: |
          Number of Subscriptions returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Subscription'

#-----------------------------------------------------
# The Subscription resource
#-----------------------------------------------------
  Subscription:
    title: Subscription
    required:
      - applicationId
      - apiIdentifier
      - policy
      - apiName
      - apiVersion
    properties:
      subscriptionId:
        type: string
      applicationId:
        type: string
      apiIdentifier:
        type: string
      apiName:
        type: string
      apiVersion:
        type: string
      policy:
        type: string
      apiName:
        type: string
      apiVersion:
        type: string
      lifeCycleStatus:
        type: string
        enum:
          - BLOCKED
          - PROD_ONLY_BLOCKED
          - ACTIVE
          - ON_HOLD
          - REJECTED

#-----------------------------------------------------
# The Tag resource
#-----------------------------------------------------
  Tag:
    title: Tag
    required:
      - name
      - weight
    properties:
      name:
        type: string
      weight:
        type: integer

#-----------------------------------------------------
# The Tag List resource
#-----------------------------------------------------
  TagList:
    title: Tag List
    properties:
      count:
        type: integer
        description: |
          Number of Tags returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Tag'

#-----------------------------------------------------
# The Rating resource
#-----------------------------------------------------
  Rating:
    title: Rating
    required:
      - ratingId
      - apiId
      - subscriberName
      - rating
    properties:
      ratingId:
        type: string
      apiId:
        type: string
      subscriberName:
        type: string
        description: |
          If subscriberName is not given user invoking the API will be taken as the subscriberName.
      rating:
        type: integer

#-----------------------------------------------------
# The Rating List resource
#-----------------------------------------------------
  RatingList:
    title: Rating List
    properties:
      avgRating:
        type: string
        description: |
          Average Rating of the API
      userRating:
        type: string
        description: |
          Rating given by the user
      count:
        type: integer
        description: |
           Number of Subscriber Ratings returned.
      next:
        type: string
        description: |
           Link to the next subset of resources qualified.
           Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
           Link to the previous subset of resources qualified.
           Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Rating'

#-----------------------------------------------------
# The Comment resource
#-----------------------------------------------------
  Comment:
    title: Comment
    required:
      - commentId
      - apiId
      - subscriberName
      - commentText
    properties:
      commentId:
        type: string
      apiId:
        type: string
      subscriberName:
        type: string
        description: |
          If subscriberName is not given user invoking the API will be taken as the subscriberName.
      commentText:
        type: string
      createdTime:
        type: string
        example: 2017-02-20T13:57:16.229
      createdBy:
        type: string
      lastUpdatedTime:
        type: string
        example: 2017-02-20T13:57:16.229
      lastUpdatedBy:
        type: string

#-----------------------------------------------------
# The Comments List resource
#-----------------------------------------------------
  CommentList:
    title: Comments List
    properties:
      count:
        type: integer
        description: |
           Number of Comments returned.
      next:
        type: string
        description: |
           Link to the next subset of resources qualified.
           Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
           Link to the previous subset of resources qualified.
           Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Comment'

#-----------------------------------------------------
# The Error resource
#-----------------------------------------------------
  Error:
    title: Error object returned with 4XX HTTP lifeCycleStatus
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
        description: Error message.
      description:
        type: string
        description: |
          A detail description about the error message.
      moreInfo:
        type: string
        description: |
          Preferably an url with more details about the error.
      error:
        type: array
        description: |
          If there are more than one error list them out.
          For example, list out validation errors by each field.
        items:
          $ref: '#/definitions/ErrorListItem'

#-----------------------------------------------------
# The Error List Item resource
#-----------------------------------------------------
  ErrorListItem:
    title: Description of individual errors that may have occurred during a request.
    required:
      - code
      - message
    properties:
      code:
        type: string
      message:
        type: string
        description: |
          Description about individual errors occurred

#-----------------------------------------------------
# The Token resource
#-----------------------------------------------------
  Token :
    title: Token details for invoking APIs
    properties:
      accessToken:
        type: string
        description: Access token
      tokenScopes:
        type: array
        items:
          type: string
        description: Valid scopes for the access token
      validityTime:
        type: integer
        format: int64
        description: Maximum validity time for the access token

#-----------------------------------------------------
# The Application Key resource
#-----------------------------------------------------
  ApplicationKey :
    title: Application key details
    properties:
      consumerKey:
        type: string
        description: Consumer key of the application
      consumerSecret:
        type: string
        description: Consumer secret of the application
      supportedGrantTypes:
        type: array
        items:
          type: string
        description: Supported grant types for the application
      keyState:
        type: string
        description: State of the key generation of the application
      keyType:
        description: Key type
        type: string
        enum:
          - PRODUCTION
          - SANDBOX
      token:
        $ref: '#/definitions/Token'

#-----------------------------------------------------
# The Application Key Generation Request schema
#-----------------------------------------------------
  ApplicationKeyGenerateRequest :
    title: Application key generation request object
    required:
      - keyType
      - validityTime
      - accessAllowDomains
    properties:
      keyType:
        type: string
        enum:
          - PRODUCTION
          - SANDBOX
      validityTime:
        type: string
      callbackUrl:
        type: string
        description: Callback URL
      accessAllowDomains:
        type: array
        items:
          type: string
        description: Allowed domains for the access token
      scopes:
        type: array
        items:
          type: string
        description: Allowed scopes for the access token

#-----------------------------------------------------
# The Label resource
#-----------------------------------------------------
  Label:
    title: Label
    required:
      - name
      - access_urls
    properties:
      labelId:
        type: string
      name:
        type: string
      access_urls:
        type: array
        items:
          type: string

#-----------------------------------------------------
# The Label List resource
#-----------------------------------------------------
  LabelList:
    title: Label List
    properties:
      count:
        type: integer
        description: |
          Number of Labels returned.
      next:
        type: string
        description: |
          Link to the next subset of resources qualified.
          Empty if no more resources are to be returned.
      previous:
        type: string
        description: |
          Link to the previous subset of resources qualified.
          Empty if current subset is the first subset returned.
      list:
        type: array
        items:
          $ref: '#/definitions/Label'

#-----------------------------------------------------
# The workflow response resource
#-----------------------------------------------------
  Workflow:
    title: workflow
    required:
      - status
    properties:
      status:
        description: |
          This attribute declares whether this workflow task is approved or rejected.
        type: string
        enum:
          - APPROVED
          - REJECTED
        example: APPROVED
      attributes:
        description: |
          Custom attributes to complete the workflow task
        type: object
        additionalProperties:
          type: string
        example: {}
      description:
        type: string
        example: "Approve workflow request."
        
#-----------------------------------------------------
# END-OF-FILE
#-----------------------------------------------------
