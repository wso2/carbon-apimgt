        @Plan:name('app_${policy.getPolicyName()}')
        @Plan:description('ExecutionPlan for app_${policy.getPolicyName()}')

        @Import('org.wso2.throttle.processed.request.stream:1.0.0')
        define stream RequestStream (messageID string, appKey string, appTier string, subscriptionKey string, apiKey string, apiTier string, subscriptionTier string, resourceKey string, resourceTier string, userId string, propertiesMap string);

        @Export('org.wso2.throttle.globalThrottle.stream:1.0.0')
        define stream GlobalThrottleStream (throttleKey string, isThrottled bool);

        FROM RequestStream
        SELECT messageID, (appTier == '$policy.getPolicyName()') AS isEligible, appKey AS throttleKey
        INSERT INTO EligibilityStream;

        FROM EligibilityStream[isEligible==true]#window.time($quotaPolicy.getLimit().getUnitTime() $quotaPolicy.getLimit().getTimeUnit())
        select throttleKey, (count(messageID) >= $quotaPolicy.getLimit().getRequestCount()) as isThrottled
        group by throttleKey
        INSERT ALL EVENTS into ResultStream;

        from ResultStream#throttler:emitOnStateChange(throttleKey, isThrottled)
        select *
        insert into GlobalThrottleStream;