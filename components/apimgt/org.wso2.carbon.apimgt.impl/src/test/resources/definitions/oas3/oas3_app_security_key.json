{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "PizzaShackAPI",
    "description" : "This is a RESTFul API for Pizza Shack online pizza delivery store.\n",
    "contact" : {
      "name" : "John Doe",
      "url" : "http://www.pizzashack.com",
      "email" : "architecture@pizzashack.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "security" : [ {
    "default" : [ ]
  } ],
  "paths" : {
    "/order" : {
      "post" : {
        "description" : "Create a new Order",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Order"
        },
        "responses" : {
          "201" : {
            "description" : "Created. Successful response with the newly created object as entity inthe body.Location header contains URL of newly created entity.",
            "headers" : {
              "Location" : {
                "description" : "The URL of the newly created resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "Content-Type" : {
                "description" : "The content type of the body.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "415" : {
            "description" : "Unsupported Media Type. The entity of the request was in a not supported format.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : "Application & Application User",
        "x-throttling-tier" : "Unlimited",
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2", "api_key" ],
          "optional" : false
        }
      }
    },
    "/menu" : {
      "get" : {
        "description" : "Return a list of available menu items",
        "responses" : {
          "200" : {
            "description" : "OK. List of APIs is returned.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MenuItem"
                  }
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable. The requested media type is not supported",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : "Application & Application User",
        "x-throttling-tier" : "Unlimited",
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2", "api_key" ],
          "optional" : false
        }
      }
    },
    "/order/{orderId}" : {
      "get" : {
        "description" : "Get details of an Order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK Requested Order will be returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. Requested API does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "406" : {
            "description" : "Not Acceptable. The requested media type is not supported",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : "Application & Application User",
        "x-throttling-tier" : "Unlimited",
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2", "api_key" ],
          "optional" : false
        }
      },
      "put" : {
        "description" : "Update an existing Order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "requestBody" : {
          "$ref" : "#/components/requestBodies/Order"
        },
        "responses" : {
          "200" : {
            "description" : "OK. Successful response with updated Order",
            "headers" : {
              "Location" : {
                "description" : "The URL of the newly created resource.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              },
              "Content-Type" : {
                "description" : "The content type of the body.",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Order"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found. The resource to be updated does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : "Application & Application User",
        "x-throttling-tier" : "Unlimited",
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2", "api_key" ],
          "optional" : false
        }
      },
      "delete" : {
        "description" : "Delete an existing Order",
        "parameters" : [ {
          "name" : "orderId",
          "in" : "path",
          "description" : "Order Id",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "format" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Resource successfully deleted."
          },
          "404" : {
            "description" : "Not Found. Resource to be deleted does not exist.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security" : [ {
          "default" : [ ]
        } ],
        "x-auth-type" : "Application & Application User",
        "x-throttling-tier" : "Unlimited",
        "x-wso2-application-security" : {
          "security-types" : [ "oauth2", "api_key" ],
          "optional" : false
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorListItem" : {
        "title" : "Description of individual errors that may have occurred during a request.",
        "required" : [ "code", "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Description about individual errors occurred"
          },
          "code" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "MenuItem" : {
        "title" : "Pizza menu Item",
        "required" : [ "name" ],
        "properties" : {
          "price" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          }
        }
      },
      "Order" : {
        "title" : "Pizza Order",
        "required" : [ "orderId" ],
        "properties" : {
          "customerName" : {
            "type" : "string"
          },
          "delivered" : {
            "type" : "boolean"
          },
          "address" : {
            "type" : "string"
          },
          "pizzaType" : {
            "type" : "string"
          },
          "creditCardNumber" : {
            "type" : "string"
          },
          "quantity" : {
            "type" : "number"
          },
          "orderId" : {
            "type" : "string"
          }
        }
      },
      "Error" : {
        "title" : "Error object returned with 4XX HTTP status",
        "required" : [ "code", "message" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Error message."
          },
          "error" : {
            "type" : "array",
            "description" : "If there are more than one error list them out. Ex. list out validation errors by each field.",
            "items" : {
              "$ref" : "#/components/schemas/ErrorListItem"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "A detail description about the error message."
          },
          "code" : {
            "type" : "integer",
            "format" : "int64"
          },
          "moreInfo" : {
            "type" : "string",
            "description" : "Preferably an url with more details about the error."
          }
        }
      }
    },
    "requestBodies" : {
      "Order" : {
        "description" : "Order object that needs to be added",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Order"
            }
          }
        },
        "required" : true
      }
    },
    "securitySchemes" : {
      "default" : {
        "type" : "oauth2",
        "flows" : {
          "implicit" : {
            "authorizationUrl" : "https://test.com",
            "scopes" : { }
          }
        }
      }
    }
  },
  "x-wso2-cors" : null,
  "x-wso2-basePath" : null,
  "x-wso2-application-security" : {
    "security-types" : [ "oauth2", "api_key" ],
    "optional" : false
  },
  "x-wso2-response-cache" : {
    "enabled" : false,
    "cacheTimeoutInSeconds" : 0
  }
}