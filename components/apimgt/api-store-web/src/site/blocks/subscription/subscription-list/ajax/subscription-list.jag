<%
include("/jagg/jagg.jag");
(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, result, username,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),
            user = jagg.getUser();
    if (action == "getAllSubscriptions") {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }
        username = user.username;

        // if we have a query parameter from GET request we will use it.
        if(request.getParameter('selectedApp')!=null){
            selectedApp = request.getParameter('selectedApp');
        }
        //else if we have selected app in session we will use it.
        else if(session.get('selectedApp')!=null){
            selectedApp = session.get('selectedApp');
        }
        //if not pass blank string because host object is waiting for string args..
        else{
            selectedApp= "";
        }

        mod = jagg.module("subscription");
        result = mod.getAllSubscriptions(username,selectedApp);

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                subscriptions:result.applications
            }
        }
        print(obj);
     }else if (action == "getSubscriptionByApplication") {
	var appname = request.getParameter("app");
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }
        username = user.username;

        mod = jagg.module("subscription");
        result = mod.getAPISubscriptionsForApplication(username,appname);

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                apis:result.subscriptions
            }
        }
        print(obj);
     }else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
