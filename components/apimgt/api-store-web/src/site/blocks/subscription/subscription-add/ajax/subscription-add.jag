<%
include("/jagg/jagg.jag");
(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, name, version, provider, tier, application, applicationId, applicationName, context, result, username, accessAllowDomains,
            user = jagg.getUser(),
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action");
    if (action == "addSubscription" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        name = request.getParameter("name");
        version = request.getParameter("version");
        provider = request.getParameter("provider");
        tier = request.getParameter("tier");
        applicationId = parseInt(request.getParameter("applicationId"), 10);
        username = user.username;

        mod = jagg.module("subscription");
        result = mod.addSubscription({
            name:name,
            version:version,
            provider:provider
        }, tier, applicationId, username);

        if (result.error) {
        	var message = result.message;
        	if (message != null) {
        		message = message.split(":")[1];
        	} else {
        		message = msg.error.authError(action, username);
        	}
            obj = {
                error:true,
                message:message
            };
        } else {
            obj = {
                error:false,
                status:result.status
            }
        }
        print(obj);
    }else if (action == "addAPISubscription" && request.getMethod() == 'POST') {
        if (!user) {
           if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        name = request.getParameter("name");
        version = request.getParameter("version");
        provider = request.getParameter("provider");
        tier = request.getParameter("tier");
        applicationName = request.getParameter("applicationName");
        username = user.username;

        mod = jagg.module("subscription");
        result = mod.addAPISubscription({
            name:name,
            version:version,
            provider:provider
        }, tier, applicationName, username);

        if (result.error) {
            obj = {
                error:result.error,
                message:result.message
            };
        } else {
            obj = {
                error:false
            }
        }
        print(obj);
    }else if (action == "generateAPIKey" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        name = request.getParameter("name");
        version = request.getParameter("version");
        provider = request.getParameter("provider");
        context = request.getParameter("context");
        application = request.getParameter("application");
        keyType = request.getParameter("keytype");
        callbackUrl = request.getParameter("callbackUrl");
        username = user.username;

        mod = jagg.module("subscription");
        result = mod.generateAPIKey({
            name:name,
            version:version,
            provider:provider
        }, context, application, username,keyType,callbackUrl);

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                data:{
                    key:result.key
                }
            }
        }
        print(obj);
    } else if (action == "generateApplicationKey" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }
        application = request.getParameter("application");
        keyType = request.getParameter("keytype");
        callbackUrl = request.getParameter("callbackUrl");
        username = user.username;
        accessAllowDomains = request.getParameter("authorizedDomains");       
        var accessAllowDomainsArr = accessAllowDomains.split(",");
        validityTime = request.getParameter("validityTime");
		var retryAfterFailure = request.getParameter("retryAfterFailure");
	
		if(retryAfterFailure == null){
			retryAfterFailure = false;
		}

        mod = jagg.module("subscription");
        result = mod.generateApplicationKey(application, username, keyType, callbackUrl, accessAllowDomainsArr, validityTime,retryAfterFailure);

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                data:{
                    key:result.key
                }
            }
        }
        print(obj);
     } else if (action == "updateAccessAllowDomains" && request.getMethod() == 'POST') {
        if (!user) {
           if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        oldAccessToken = request.getParameter("oldAccessToken");
        accessAllowDomains = request.getParameter("authorizedDomains");
        accessAllowDomainsArr = accessAllowDomains.split(",");
        mod = jagg.module("subscription");
        result = mod.updateAccessAllowDomains(oldAccessToken,accessAllowDomainsArr);

        if (result.error==true) {
            obj = {
                error:true,
                message:result.message
            };
        } else {
            obj = {
                error:false,
                message:result.message
            }
        }
        print(obj);
     } else if (action == "refreshToken" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }
        application = request.getParameter("application");
        keyType = request.getParameter("keytype");
        username = user.username;
        oldAccessToken = request.getParameter("oldAccessToken");
        accessAllowDomains = request.getParameter("authorizedDomains");
        accessAllowDomainsArr = accessAllowDomains.split(",");
        clientId = request.getParameter("clientId");
        clientSecret = request.getParameter("clientSecret");
        validityTime = request.getParameter("validityTime");
        mod = jagg.module("subscription");
        result = mod.refreshToken(username,application,keyType,oldAccessToken,accessAllowDomainsArr,clientId, clientSecret,validityTime);

        if (result.error) {
            obj = {
                error:result.error,
                message:result.message
            };
        } else {
            obj = {
                error:false,
                data:{
                    key:result.key
                }
            }
        }
        print(obj);
     }else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
