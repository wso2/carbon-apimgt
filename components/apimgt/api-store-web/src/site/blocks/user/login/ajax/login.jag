<%
include("/jagg/jagg.jag");

(function () {
    response.contentType = "application/json; charset=UTF-8";
    response.addHeader('Pragma', 'No-cache');
    response.addHeader('Cache-control', 'no-cache');

    var mod, obj, result, username,
            action = request.getParameter("action"),
            site = require("/site/conf/site.json"),
            msg = require("/site/conf/ui-messages.jag");
    if (action === "login" && request.getMethod() == 'POST') {
        mod = jagg.module("user");
        username = request.getParameter("username");
        var MultitenantConstants = Packages.org.wso2.carbon.utils.multitenancy.MultitenantConstants;
		var MultitenantUtils = Packages.org.wso2.carbon.utils.multitenancy.MultitenantUtils;
    	var user= MultitenantUtils.getTenantAwareUsername(username);
		var domain= MultitenantUtils.getTenantDomain(username);
		if (MultitenantConstants.SUPER_TENANT_DOMAIN_NAME === domain) {
			username = user;
		} else {
			username = user + "@" + domain;
		}
        username = String(username);
        var tenant = request.getParameter("tenant");
        result = mod.login(username, request.getParameter("password"),tenant);
        if (result.error) {
            obj = {
                error:result.error,
                message:result.message
            };
        } else {
            obj = {
                error:false
            }
        jagg.setUser({username:result.username, isSuperTenant:result.isSuperTenant, cookie:result.cookie, hasPublisherAccess:result.hasPublisherAccess});
        session.put("showLogin", "false");
        }
        print(obj);
    } else if (action === "logout") {
        jagg.setUser(null);
	    session.remove("selectedApp");
        print({
            error:false
        });
    } else if (action === "getAPIPublisherURL") {
             mod = jagg.module("manager");
             var resultVal=mod.getAPIPublisherURL();
             if (resultVal.error) {
                obj = {
                      error:true,
                      message:resultVal.message
                      };
             } else {
                      obj = {
                      error:false,
                      url:resultVal.url
                      }
                      }
    print(obj);
    }else if (action === "loginWithSAMLToken") {
             var log = new Log();

             mod = jagg.module("user");
             var samlToken = request.getParameter("samlToken");
                 result = mod.loginWithSAMLToken(samlToken);

             if (result.error) {
                 obj = {
                     error:result.error,
                     message:result.message
                 };
             } else {
                 obj = {
                     error:false
                 }
             }

             jagg.setUser({username:result.username, cookie:result.cookie});
             session.put("showLogin", "false");

             print(obj);
    } else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
