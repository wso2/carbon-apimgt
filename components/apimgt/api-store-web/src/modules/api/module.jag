<%
jagg.module("api", {

    getAPIDescription:function () {
        return jagg.require(jagg.getModulesDir() + "api/api.jag").getAPIDescription.apply(this, arguments);
    },

    getAllPublishedAPIs:function () {
        return jagg.require(jagg.getModulesDir() + "api/published.jag").getAllPublishedAPIs.apply(this, arguments);
    },
    getAllPaginatedPublishedAPIs:function () {
        return jagg.require(jagg.getModulesDir() + "api/published.jag").getAllPaginatedPublishedAPIs.apply(this, arguments);
    },
    getPublishedAPIsByProvider:function () {
        return jagg.require(jagg.getModulesDir() + "api/published-by-provider.jag").getPublishedAPIsByProvider.apply(this, arguments);
    },

    getRecentlyAddedAPIs:function () {
        return jagg.require(jagg.getModulesDir() + "api/recently-added.jag").getRecentlyAddedAPIs.apply(this, arguments);
    },

    getAPIsByTag:function () {
        return jagg.require(jagg.getModulesDir() + "api/tagged.jag").getAPIsByTag.apply(this, arguments);
    },
    getPaginatedAPIsByTag:function () {
        return jagg.require(jagg.getModulesDir() + "api/tagged.jag").getPaginatedAPIsByTag.apply(this, arguments);
    },

    getTopRatedAPIs:function () {
        return jagg.require(jagg.getModulesDir() + "api/top-rated.jag").getTopRatedAPIs.apply(this, arguments);
    },
    getTiers:function () {
        return jagg.require(jagg.getModulesDir() + "api/api.jag").getTiers.apply(this, arguments);
    },
    hasUserPermissions:function () {
        return jagg.require(jagg.getModulesDir() + "api/permissions.jag").hasUserPermissions.apply(this, arguments);
    },
    hasPublisherAccess:function () {
        return jagg.require(jagg.getModulesDir() + "api/permissions.jag").hasPublisherAccess.apply(this, arguments);
    },
    getAllPaginatedPrototypedAPIs:function () {
        return jagg.require(jagg.getModulesDir() + "api/prototyped.jag").getAllPaginatedPrototypedAPIs.apply(this, arguments);
    },
    updatePermissionCache:function () {
     return jagg.require(jagg.getModulesDir() + "api/permissions.jag").updatePermissionCache.apply(this, arguments);
    }
});
%>