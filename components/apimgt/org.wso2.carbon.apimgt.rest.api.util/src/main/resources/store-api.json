{
  "swagger": "2.0",
  "info": {
    "version": "v1.0",
    "title": "WSO2 API Manager - Store",
    "description": "This document specifies a **RESTful API** for WSO2 **API Manager** - Store.\n\nIt is written with [swagger 2](http://swagger.io/).\n",
    "contact": {
      "name": "WSO2",
      "url": "http://wso2.com/products/api-manager/",
      "email": "architecture@wso2.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "https",
    "http"
  ],
  "host": "apis.wso2.com",
  "basePath": "/api/am/store/v1.0",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-wso2-security": {
    "apim": {
      "x-wso2-scopes": [
        {
          "description": "",
          "roles": "Internal/username",
          "name": "apim:subscribe",
          "key": "apim:subscribe"
        }
      ]
    }
  },
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "https://localhost:9443/token",
      "scopes": {
        "apim:subscribe": "Subscribe API",
        "apim:self-signup": "Self Sign-up",
        "apim:dedicated_gateway": "Updating dedicated Gateway"
      }
    }
  },
  "paths": {
    "/apis": {
      "get": {
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "summary": "Retrieve/Search APIs\n",
        "description": "Get a list of available APIs qualifying under a given search condition.\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/labels"
          },
          {
            "name": "query",
            "in": "query",
            "description": "**Search condition**.\n\nYou can search in attributes by using an **\"attribute:\"** modifier.\n\nEg.\n\"provider:wso2\" will match an API if the provider of the API is exactly \"wso2\".\n\nAdditionally you can use wildcards.\n\nEg.\n\"provider:wso2*\" will match an API if the provider of the API starts with \"wso2\".\n\nSupported attribute modifiers are [**version, context, lifeCycleStatus,\ndescription, subcontext, doc, provider, tag **]\n\nIf no advanced attribute modifier has been specified, search will match the\ngiven query string against API Name.\n",
            "type": "string"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "API (Collection)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nList of qualifying APIs is returned.\n",
            "schema": {
              "$ref": "#/definitions/APIList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}": {
      "get": {
        "summary": "Get details of an API",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get details of an API\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRequested API is returned\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/API"
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/swagger": {
      "get": {
        "summary": "Get API swagger definition",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get the swagger of an API\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRequested swagger document of the API is returned\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/sdks/{language}": {
      "get": {
        "produces": [
          "application/zip"
        ],
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -X GET -k -H \"Authorization:Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9292/api/am/store/v1.0/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/sdks/java > Swagger Petstore_java_1.0.0.zip",
        "x-wso2-request": "GET https://localhost:9292/api/am/store/v1.0/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/sdks/java\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-disposition : attachment; filename=\"Swagger Petstore_java_1.0.0.zip\"\nContent-type : application/zip",
        "summary": "Generate a SDK for an API\n",
        "description": "This operation can be used to generate SDKs (System Development Kits), for the APIs available in the API Store, for a requested development language.\n",
        "parameters": [
          {
            "in": "path",
            "name": "apiId",
            "type": "string",
            "required": true,
            "description": "ID of the specific API for which the SDK is required.\n"
          },
          {
            "in": "path",
            "name": "language",
            "type": "string",
            "required": true,
            "description": "Programming language of the SDK that is required.\n"
          }
        ],
        "tags": [
          "API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSDK generated successfully.\n"
          },
          "400": {
            "description": "Bad Request.\nRequested SDK Language is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error.\nError while generating SDK.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/wsdl": {
      "get": {
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "produces": [
          "application/octet-stream"
        ],
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://127.0.0.1:9292/api/am/publisher/v1.0/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/wsdl",
        "x-wso2-request": "GET https://127.0.0.1:9292/api/am/publisher/v1.0/apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/wsdl\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 329\n\n{\n   \"paths\": {\"/*\": {\"get\":    {\n      \"x-auth-type\": \"Application\",\n      \"x-throttling-policy\": \"Unlimited\",\n      \"responses\": {\"200\": {\"description\": \"OK\"}}\n   }}},\n   \"x-wso2-security\": {\"apim\": {\"x-wso2-scopes\": []}},\n   \"swagger\": \"2.0\",\n   \"info\":    {\n      \"title\": \"PhoneVerification\",\n      \"description\": \"Verify a phone number\",\n      \"contact\":       {\n         \"email\": \"xx@ee.com\",\n         \"name\": \"xx\"\n      },\n      \"version\": \"1.0.0\"\n   }\n}",
        "summary": "Get API WSDL definition",
        "description": "This operation can be used to retrieve the swagger definition of an API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/label-Q"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRequested WSDL document of the API is returned\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/documents": {
      "get": {
        "summary": "Get a list of API documents",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get a list of documents belonging to an API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "Document (Collection)",
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nDocument list is returned.\n",
            "schema": {
              "$ref": "#/definitions/DocumentList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/documents/{documentId}": {
      "get": {
        "summary": "Get a document of an API",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get a particular document associated with an API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/documentId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Document (Individual)",
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nDocument returned.\n",
            "schema": {
              "$ref": "#/definitions/Document"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Document does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/documents/{documentId}/content": {
      "get": {
        "summary": "Get the content of an API document",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Downloads a FILE type document/get the inline content or source url of a certain document.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/documentId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Document (Individual)",
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nFile or inline content returned.\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "303": {
            "description": "See Other.\nSource can be retrived from the URL specified at the Location header.\n",
            "headers": {
              "Location": {
                "description": "The Source URL of the document.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Document does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/ratings": {
      "get": {
        "summary": "Get API ratings",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get the rating of an API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "tags": [
          "Rating (Collection)",
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRating returned.\n",
            "schema": {
              "$ref": "#/definitions/RatingList"
            }
          },
          "404": {
            "description": "Not Found.\nRequested rating does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/ratings/{ratingId}": {
      "get": {
        "summary": "Get a single API rating",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get a specific rating of an API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/ratingId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Rating (Individual)",
          "API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRating returned.\n",
            "schema": {
              "$ref": "#/definitions/Rating"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested rating does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/user-rating": {
      "put": {
        "summary": "Add or update logged in user's rating for an API",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Adds or updates a rating\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Rating object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Rating"
            }
          }
        ],
        "tags": [
          "Rating (Individual)",
          "API (Individual)",
          "Create"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/Rating"
            },
            "headers": {
              "Location": {
                "description": "Location to the newly created Rating.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/comments": {
      "get": {
        "summary": "Retrieve API comments",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get a list of Comments that are already added to APIs\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          }
        ],
        "tags": [
          "Comment (Collection)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nComments list is returned.\n",
            "schema": {
              "$ref": "#/definitions/CommentList"
            }
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Add an API comment",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Comment object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "tags": [
          "Comment (Individual)",
          "API (Individual)",
          "Create"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "headers": {
              "Location": {
                "description": "Location to the newly created Comment.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/apis/{apiId}/comments/{commentId}": {
      "get": {
        "summary": "Get details of an API comment",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get the individual comment given by a username for a certain API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/commentId"
          },
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Comment (Individual)",
          "API (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nComment returned.\n",
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested comment does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an API comment",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Remove a Comment\n",
        "parameters": [
          {
            "$ref": "#/parameters/commentId"
          },
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Comment (Individual)",
          "API (Individual)",
          "Delete"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update an API comment",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Update a certain Comment\n",
        "parameters": [
          {
            "$ref": "#/parameters/commentId"
          },
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Comment object that needs to be updated\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Comment (Individual)",
          "API (Individual)",
          "Update"
        ],
        "responses": {
          "200": {
            "description": "OK.\nComment updated.\n",
            "schema": {
              "$ref": "#/definitions/Comment"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/composite-apis": {
      "get": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://127.0.0.1:9090/api/am/store/v1/composite-apis",
        "x-wso2-request": "GET https://127.0.0.1:9090/api/am/store/v1/composite-apis\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"previous\": \"\",\n   \"list\":    [\n            {\n         \"provider\": \"admin\",\n         \"version\": \"1.0.0\",\n         \"description\": \"This sample API provides Account Status Validation\",\n         \"name\": \"AccountVal\",\n         \"context\": \"/account\",\n         \"id\": \"2e81f147-c8a8-4f68-b4f0-69e0e7510b01\",\n         \"lifeCycleStatus\": \"PUBLISHED\"\n      },\n            {\n         \"provider\": \"admin\",\n         \"version\": \"1.0.0\",\n         \"description\": null,\n         \"name\": \"api1\",\n         \"context\": \"/api1\",\n         \"id\": \"3e22d2fb-277a-4e9e-8c7e-1c0f7f73960e\",\n         \"lifeCycleStatus\": \"PUBLISHED\"\n      }\n   ],\n   \"next\": \"\",\n   \"count\": 2\n}",
        "summary": "Retrieve/Search Composite APIs\n",
        "description": "This operation provides you a list of available Composite APIs qualifying under a given search condition.\n\nEach retrieved Composite API is represented with a minimal amount of attributes. If you want to get complete details of a Composite API, you need to use **Get details of a Composite API** operation.\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "name": "query",
            "in": "query",
            "description": "**Search condition**.\n\nYou can search in attributes by using an **\"<attribute>:\"** modifier.\n\nEg.\n\"provider:wso2\" will match a Composite API if the provider of the Composite API is exactly \"wso2\".\n\nAdditionally you can use wildcards.\n\nEg.\n\"provider:wso2*\" will match a Composite API if the provider of the Composite API starts with \"wso2\".\n\nSupported attribute modifiers are [**version, context, lifeCycleStatus,\ndescription, subcontext, doc, provider**]\n\nIf no advanced attribute modifier has been specified, search will match the\ngiven query string against Composite API Name.\n",
            "type": "string"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "Composite API (Collection)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nList of qualifying Composite APIs is returned.\n",
            "schema": {
              "$ref": "#/definitions/CompositeAPIList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -H \"Content-Type: application/json\" -X POST -d @data.json https://127.0.0.1:9090/api/am/store/v1/composite-apis",
        "x-wso2-request": "POST https://127.0.0.1:9090/api/am/store/v1/composite-apis\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n\n{\r\n   \"name\": \"PizzaShackAPI\",\r\n   \"description\": \"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\r\\n\",\r\n   \"context\": \"/pizzashack\",\r\n   \"version\": \"1.0.0\",\r\n   \"provider\": \"admin\",\r\n   \"wsdlUri\": null,\r\n   \"lifeCycleStatus\": \"PUBLISHED\",\r\n   \"responseCaching\": \"Disabled\",\r\n   \"cacheTimeout\": 300,\r\n   \"destinationStatsEnabled\": false,\r\n   \"isDefaultVersion\": false,\r\n   \"transport\":    [\r\n      \"http\",\r\n      \"https\"\r\n   ],\r\n   \"tags\": [\"pizza\"],\r\n   \"policies\": [\"Unlimited\"],\r\n   \"maxTps\":    {\r\n      \"sandbox\": 5000,\r\n      \"production\": 1000\r\n   },\r\n   \"visibility\": \"PUBLIC\",\r\n   \"visibleRoles\": [],\r\n   \"visibleTenants\": [],\r\n   \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"sandbox_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"endpoint_type\\\":\\\"http\\\"}\",\r\n   \"endpointSecurity\":    {\r\n      \"username\": \"user\",\r\n      \"type\": \"basic\",\r\n      \"password\": \"pass\"\r\n   },\r\n   \"gatewayEnvironments\": \"Production and Sandbox\",\r\n   \"sequences\": [],\r\n   \"subscriptionAvailability\": null,\r\n   \"subscriptionAvailableTenants\": [],\r\n   \"businessInformation\":    {\r\n      \"businessOwnerEmail\": \"marketing@pizzashack.com\",\r\n      \"technicalOwnerEmail\": \"architecture@pizzashack.com\",\r\n      \"technicalOwner\": \"John Doe\",\r\n      \"businessOwner\": \"Jane Roe\"\r\n   },\r\n   \"corsConfiguration\":    {\r\n      \"accessControlAllowOrigins\": [\"*\"],\r\n      \"accessControlAllowHeaders\":       [\r\n         \"authorization\",\r\n         \"Access-Control-Allow-Origin\",\r\n         \"Content-Type\",\r\n         \"SOAPAction\"\r\n      ],\r\n      \"accessControlAllowMethods\":       [\r\n         \"GET\",\r\n         \"PUT\",\r\n         \"POST\",\r\n         \"DELETE\",\r\n         \"PATCH\",\r\n         \"OPTIONS\"\r\n      ],\r\n      \"accessControlAllowCredentials\": false,\r\n      \"corsConfigurationEnabled\": false\r\n   }\r\n}",
        "x-wso2-response": "HTTP/1.1 201 Created\nLocation: https://127.0.0.1:9090/api/am/publisher/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f\nContent-Type: application/json\n\n{\r\n   \"id\": \"7a2298c4-c905-403f-8fac-38c73301631f\",\r\n   \"name\": \"PizzaShackAPI\",\r\n   \"description\": \"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\r\\n\",\r\n   \"context\": \"/pizzashack\",\r\n   \"version\": \"1.0.0\",\r\n   \"provider\": \"admin\",\r\n   \"wsdlUri\": null,\r\n   \"lifeCycleStatus\": \"CREATED\",\r\n   \"responseCaching\": \"Disabled\",\r\n   \"cacheTimeout\": 300,\r\n   \"destinationStatsEnabled\": null,\r\n   \"isDefaultVersion\": false,\r\n   \"transport\":    [\r\n      \"http\",\r\n      \"https\"\r\n   ],\r\n   \"tags\": [\"pizza\"],\r\n   \"policies\": [\"Unlimited\"],\r\n   \"maxTps\":    {\r\n      \"sandbox\": 5000,\r\n      \"production\": 1000\r\n   },\r\n   \"visibility\": \"PUBLIC\",\r\n   \"visibleRoles\": [],\r\n   \"visibleTenants\": [],\r\n   \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"sandbox_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"endpoint_type\\\":\\\"http\\\"}\",\r\n   \"endpointSecurity\":    {\r\n      \"username\": \"user\",\r\n      \"type\": \"basic\",\r\n      \"password\": \"pass\"\r\n   },\r\n   \"gatewayEnvironments\": \"Production and Sandbox\",\r\n   \"sequences\": [],\r\n   \"subscriptionAvailability\": null,\r\n   \"subscriptionAvailableTenants\": [],\r\n   \"businessInformation\":    {\r\n      \"businessOwnerEmail\": \"marketing@pizzashack.com\",\r\n      \"technicalOwnerEmail\": \"architecture@pizzashack.com\",\r\n      \"technicalOwner\": \"John Doe\",\r\n      \"businessOwner\": \"Jane Roe\"\r\n   },\r\n   \"corsConfiguration\":    {\r\n      \"accessControlAllowOrigins\": [\"*\"],\r\n      \"accessControlAllowHeaders\":       [\r\n         \"authorization\",\r\n         \"Access-Control-Allow-Origin\",\r\n         \"Content-Type\",\r\n         \"SOAPAction\"\r\n      ],\r\n      \"accessControlAllowMethods\":       [\r\n         \"GET\",\r\n         \"PUT\",\r\n         \"POST\",\r\n         \"DELETE\",\r\n         \"PATCH\",\r\n         \"OPTIONS\"\r\n      ],\r\n      \"accessControlAllowCredentials\": false,\r\n      \"corsConfigurationEnabled\": false\r\n   }\r\n}",
        "summary": "Create a new API",
        "description": "This operation can be used to create a new API specifying the details of the API in the payload. The new API will be in `CREATED` state.\n\nThere is a special capability for a user who has `APIM Admin` permission such that he can create APIs on behalf of other users. For that he can to specify `\"provider\" : \"some_other_user\"` in the payload so that the API's creator will be shown as `some_other_user` in the UI.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "API object that needs to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompositeAPI"
            }
          }
        ],
        "tags": [
          "Composite API (Collection)"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/CompositeAPI"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported Media Type.\nThe entity of the request was in a not supported format.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/composite-apis/{apiId}": {
      "get": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://127.0.0.1:9090/api/am/store/v1/composite-apis/7a2298c4-c905-403f-8fac-38c73301631f",
        "x-wso2-request": "GET https://127.0.0.1:9090/api/am/store/v1/composite-apis/7a2298c4-c905-403f-8fac-38c73301631f\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\r\n   \"id\": \"7a2298c4-c905-403f-8fac-38c73301631f\",\r\n   \"name\": \"PizzaShackAPI\",\r\n   \"description\": \"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\r\\n\",\r\n   \"context\": \"/pizzashack\",\r\n   \"version\": \"1.0.0\",\r\n   \"provider\": \"admin\",\r\n   \"endpointId\": \"{\\\"paths\\\":{\\\"/order\\\":{\\\"post\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"description\\\":\\\"Create a new Order\\\",\\\"parameters\\\":[{\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"},\\\"description\\\":\\\"Order object that needs to be added\\\",\\\"name\\\":\\\"body\\\",\\\"required\\\":true,\\\"in\\\":\\\"body\\\"}],\\\"responses\\\":{\\\"201\\\":{\\\"headers\\\":{\\\"Location\\\":{\\\"description\\\":\\\"The URL of the newly created resource.\\\",\\\"type\\\":\\\"string\\\"}},\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"},\\\"description\\\":\\\"Created.\\\"}}}},\\\"/menu\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"description\\\":\\\"Return a list of available menu items\\\",\\\"parameters\\\":[],\\\"responses\\\":{\\\"200\\\":{\\\"headers\\\":{},\\\"schema\\\":{\\\"title\\\":\\\"Menu\\\",\\\"properties\\\":{\\\"list\\\":{\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/MenuItem\\\"},\\\"type\\\":\\\"array\\\"}},\\\"type\\\":\\\"object\\\"},\\\"description\\\":\\\"OK.\\\"}}}}},\\\"schemes\\\":[\\\"https\\\"],\\\"produces\\\":[\\\"application/json\\\"],\\\"swagger\\\":\\\"2.0\\\",\\\"definitions\\\":{\\\"MenuItem\\\":{\\\"title\\\":\\\"Pizza menu Item\\\",\\\"properties\\\":{\\\"price\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"image\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\"]},\\\"Order\\\":{\\\"title\\\":\\\"Pizza Order\\\",\\\"properties\\\":{\\\"customerName\\\":{\\\"type\\\":\\\"string\\\"},\\\"delivered\\\":{\\\"type\\\":\\\"boolean\\\"},\\\"address\\\":{\\\"type\\\":\\\"string\\\"},\\\"pizzaType\\\":{\\\"type\\\":\\\"string\\\"},\\\"creditCardNumber\\\":{\\\"type\\\":\\\"string\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"number\\\"},\\\"orderId\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"orderId\\\"]}},\\\"consumes\\\":[\\\"application/json\\\"],\\\"info\\\":{\\\"title\\\":\\\"PizzaShackAPI\\\",\\\"description\\\":\\\"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\\\n\\\",\\\"license\\\":{\\\"name\\\":\\\"Apache 2.0\\\",\\\"url\\\":\\\"http://www.apache.org/licenses/LICENSE-2.0.html\\\"},\\\"contact\\\":{\\\"email\\\":\\\"architecture@pizzashack.com\\\",\\\"name\\\":\\\"John Doe\\\",\\\"url\\\":\\\"http://www.pizzashack.com\\\"},\\\"version\\\":\\\"1.0.0\\\"}}\",\r\n   \"wsdlUri\": null,\r\n   \"lifeCycleStatus\": \"CREATED\",\r\n   \"responseCaching\": \"Disabled\",\r\n   \"cacheTimeout\": 300,\r\n   \"destinationStatsEnabled\": null,\r\n   \"isDefaultVersion\": false,\r\n   \"transport\":    [\r\n      \"http\",\r\n      \"https\"\r\n   ],\r\n   \"tags\": [\"pizza\"],\r\n   \"policies\": [\"Unlimited\"],\r\n   \"maxTps\":    {\r\n      \"sandbox\": 5000,\r\n      \"production\": 1000\r\n   },\r\n   \"visibility\": \"PUBLIC\",\r\n   \"visibleRoles\": [],\r\n   \"visibleTenants\": [],\r\n   \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"sandbox_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"endpoint_type\\\":\\\"http\\\"}\",\r\n   \"endpointSecurity\":    {\r\n      \"username\": \"user\",\r\n      \"type\": \"basic\",\r\n      \"password\": \"pass\"\r\n   },\r\n   \"gatewayEnvironments\": \"Production and Sandbox\",\r\n   \"sequences\": [],\r\n   \"subscriptionAvailability\": null,\r\n   \"subscriptionAvailableTenants\": [],\r\n   \"businessInformation\":    {\r\n      \"businessOwnerEmail\": \"marketing@pizzashack.com\",\r\n      \"technicalOwnerEmail\": \"architecture@pizzashack.com\",\r\n      \"technicalOwner\": \"John Doe\",\r\n      \"businessOwner\": \"Jane Roe\"\r\n   },\r\n   \"corsConfiguration\":    {\r\n      \"accessControlAllowOrigins\": [\"*\"],\r\n      \"accessControlAllowHeaders\":       [\r\n         \"authorization\",\r\n         \"Access-Control-Allow-Origin\",\r\n         \"Content-Type\",\r\n         \"SOAPAction\"\r\n      ],\r\n      \"accessControlAllowMethods\":       [\r\n         \"GET\",\r\n         \"PUT\",\r\n         \"POST\",\r\n         \"DELETE\",\r\n         \"PATCH\",\r\n         \"OPTIONS\"\r\n      ],\r\n      \"accessControlAllowCredentials\": false,\r\n      \"corsConfigurationEnabled\": false\r\n   }\r\n}",
        "summary": "Get details of a Composite API",
        "description": "Using this operation, you can retrieve complete details of a single Composite API. You need to provide the Id of the Composite API to retrive it.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRequested Compoiste API is returned\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CompositeAPI"
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -H \"Content-Type: application/json\" -X PUT -d @data.json https://127.0.0.1:9090/api/am/store/v1/composite-apis/7a2298c4-c905-403f-8fac-38c73301631f",
        "x-wso2-request": "PUT https://127.0.0.1:9090/api/am/store/v1/composite-apis/7a2298c4-c905-403f-8fac-38c73301631f\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\nContent-Type: application/json\n\n{\r\n   \"id\": \"7a2298c4-c905-403f-8fac-38c73301631f\",\r\n   \"name\": \"PizzaShackAPI\",\r\n   \"description\": \"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\r\\n\",\r\n   \"context\": \"/pizzashack\",\r\n   \"version\": \"1.0.0\",\r\n   \"provider\": \"admin\",\r\n   \"endpointId\": \"{\\\"paths\\\":{\\\"/order\\\":{\\\"post\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"description\\\":\\\"Create a new Order\\\",\\\"parameters\\\":[{\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"},\\\"description\\\":\\\"Order object that needs to be added\\\",\\\"name\\\":\\\"body\\\",\\\"required\\\":true,\\\"in\\\":\\\"body\\\"}],\\\"responses\\\":{\\\"201\\\":{\\\"headers\\\":{\\\"Location\\\":{\\\"description\\\":\\\"The URL of the newly created resource.\\\",\\\"type\\\":\\\"string\\\"}},\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"},\\\"description\\\":\\\"Created.\\\"}}}},\\\"/menu\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"description\\\":\\\"Return a list of available menu items\\\",\\\"parameters\\\":[],\\\"responses\\\":{\\\"200\\\":{\\\"headers\\\":{},\\\"schema\\\":{\\\"title\\\":\\\"Menu\\\",\\\"properties\\\":{\\\"list\\\":{\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/MenuItem\\\"},\\\"type\\\":\\\"array\\\"}},\\\"type\\\":\\\"object\\\"},\\\"description\\\":\\\"OK.\\\"}}}}},\\\"schemes\\\":[\\\"https\\\"],\\\"produces\\\":[\\\"application/json\\\"],\\\"swagger\\\":\\\"2.0\\\",\\\"definitions\\\":{\\\"MenuItem\\\":{\\\"title\\\":\\\"Pizza menu Item\\\",\\\"properties\\\":{\\\"price\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"image\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\"]},\\\"Order\\\":{\\\"title\\\":\\\"Pizza Order\\\",\\\"properties\\\":{\\\"customerName\\\":{\\\"type\\\":\\\"string\\\"},\\\"delivered\\\":{\\\"type\\\":\\\"boolean\\\"},\\\"address\\\":{\\\"type\\\":\\\"string\\\"},\\\"pizzaType\\\":{\\\"type\\\":\\\"string\\\"},\\\"creditCardNumber\\\":{\\\"type\\\":\\\"string\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"number\\\"},\\\"orderId\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"orderId\\\"]}},\\\"consumes\\\":[\\\"application/json\\\"],\\\"info\\\":{\\\"title\\\":\\\"PizzaShackAPI\\\",\\\"description\\\":\\\"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\\\n\\\",\\\"license\\\":{\\\"name\\\":\\\"Apache 2.0\\\",\\\"url\\\":\\\"http://www.apache.org/licenses/LICENSE-2.0.html\\\"},\\\"contact\\\":{\\\"email\\\":\\\"architecture@pizzashack.com\\\",\\\"name\\\":\\\"John Doe\\\",\\\"url\\\":\\\"http://www.pizzashack.com\\\"},\\\"version\\\":\\\"1.0.0\\\"}}\",\r\n   \"wsdlUri\": null,\r\n   \"lifeCycleStatus\": \"CREATED\",\r\n   \"responseCaching\": \"Disabled\",\r\n   \"cacheTimeout\": 300,\r\n   \"destinationStatsEnabled\": null,\r\n   \"isDefaultVersion\": false,\r\n   \"transport\":    [\r\n      \"https\"\r\n   ],\r\n   \"tags\": [\"pizza\",\"chicken\"],\r\n   \"policies\": [\"Unlimited\"],\r\n   \"maxTps\":    {\r\n      \"sandbox\": 500,\r\n      \"production\": 100\r\n   },\r\n   \"visibility\": \"PUBLIC\",\r\n   \"visibleRoles\": [],\r\n   \"visibleTenants\": [],\r\n   \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"sandbox_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"endpoint_type\\\":\\\"http\\\"}\",\r\n   \"endpointSecurity\":    {\r\n      \"username\": \"user\",\r\n      \"type\": \"basic\",\r\n      \"password\": \"pass\"\r\n   },\r\n   \"gatewayEnvironments\": \"Production and Sandbox\",\r\n   \"sequences\": [],\r\n   \"subscriptionAvailability\": null,\r\n   \"subscriptionAvailableTenants\": [],\r\n   \"businessInformation\":    {\r\n      \"businessOwnerEmail\": \"marketing@pizzashack.com\",\r\n      \"technicalOwnerEmail\": \"architecture@pizzashack.com\",\r\n      \"technicalOwner\": \"John Doe\",\r\n      \"businessOwner\": \"Jane Roe\"\r\n   },\r\n   \"corsConfiguration\":    {\r\n      \"accessControlAllowOrigins\": [\"*\"],\r\n      \"accessControlAllowHeaders\":       [\r\n         \"authorization\",\r\n         \"Access-Control-Allow-Origin\",\r\n         \"Content-Type\",\r\n         \"SOAPAction\"\r\n      ],\r\n      \"accessControlAllowMethods\":       [\r\n         \"GET\",\r\n         \"PUT\",\r\n         \"POST\",\r\n         \"DELETE\",\r\n         \"PATCH\",\r\n         \"OPTIONS\"\r\n      ],\r\n      \"accessControlAllowCredentials\": false,\r\n      \"corsConfigurationEnabled\": false\r\n   }\r\n}",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\r\n   \"id\": \"7a2298c4-c905-403f-8fac-38c73301631f\",\r\n   \"name\": \"PizzaShackAPI\",\r\n   \"description\": \"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\r\\n\",\r\n   \"context\": \"/pizzashack\",\r\n   \"version\": \"1.0.0\",\r\n   \"provider\": \"admin\",\r\n   \"endpointId\": \"{\\\"paths\\\":{\\\"/order\\\":{\\\"post\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"description\\\":\\\"Create a new Order\\\",\\\"parameters\\\":[{\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"},\\\"description\\\":\\\"Order object that needs to be added\\\",\\\"name\\\":\\\"body\\\",\\\"required\\\":true,\\\"in\\\":\\\"body\\\"}],\\\"responses\\\":{\\\"201\\\":{\\\"headers\\\":{\\\"Location\\\":{\\\"description\\\":\\\"The URL of the newly created resource.\\\",\\\"type\\\":\\\"string\\\"}},\\\"schema\\\":{\\\"$ref\\\":\\\"#/definitions/Order\\\"},\\\"description\\\":\\\"Created.\\\"}}}},\\\"/menu\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application & Application User\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"description\\\":\\\"Return a list of available menu items\\\",\\\"parameters\\\":[],\\\"responses\\\":{\\\"200\\\":{\\\"headers\\\":{},\\\"schema\\\":{\\\"title\\\":\\\"Menu\\\",\\\"properties\\\":{\\\"list\\\":{\\\"items\\\":{\\\"$ref\\\":\\\"#/definitions/MenuItem\\\"},\\\"type\\\":\\\"array\\\"}},\\\"type\\\":\\\"object\\\"},\\\"description\\\":\\\"OK.\\\"}}}}},\\\"schemes\\\":[\\\"https\\\"],\\\"produces\\\":[\\\"application/json\\\"],\\\"swagger\\\":\\\"2.0\\\",\\\"definitions\\\":{\\\"MenuItem\\\":{\\\"title\\\":\\\"Pizza menu Item\\\",\\\"properties\\\":{\\\"price\\\":{\\\"type\\\":\\\"string\\\"},\\\"description\\\":{\\\"type\\\":\\\"string\\\"},\\\"name\\\":{\\\"type\\\":\\\"string\\\"},\\\"image\\\":{\\\"type\\\":\\\"string\\\"}},\\\"required\\\":[\\\"name\\\"]},\\\"Order\\\":{\\\"title\\\":\\\"Pizza Order\\\",\\\"properties\\\":{\\\"customerName\\\":{\\\"type\\\":\\\"string\\\"},\\\"delivered\\\":{\\\"type\\\":\\\"boolean\\\"},\\\"address\\\":{\\\"type\\\":\\\"string\\\"},\\\"pizzaType\\\":{\\\"type\\\":\\\"string\\\"},\\\"creditCardNumber\\\":{\\\"type\\\":\\\"string\\\"},\\\"quantity\\\":{\\\"type\\\":\\\"number\\\"},\\\"orderId\\\":{\\\"type\\\":\\\"integer\\\"}},\\\"required\\\":[\\\"orderId\\\"]}},\\\"consumes\\\":[\\\"application/json\\\"],\\\"info\\\":{\\\"title\\\":\\\"PizzaShackAPI\\\",\\\"description\\\":\\\"This document describe a RESTFul API for Pizza Shack online pizza delivery store.\\\\n\\\",\\\"license\\\":{\\\"name\\\":\\\"Apache 2.0\\\",\\\"url\\\":\\\"http://www.apache.org/licenses/LICENSE-2.0.html\\\"},\\\"contact\\\":{\\\"email\\\":\\\"architecture@pizzashack.com\\\",\\\"name\\\":\\\"John Doe\\\",\\\"url\\\":\\\"http://www.pizzashack.com\\\"},\\\"version\\\":\\\"1.0.0\\\"}}\",\r\n   \"wsdlUri\": null,\r\n   \"lifeCycleStatus\": \"CREATED\",\r\n   \"responseCaching\": \"Disabled\",\r\n   \"cacheTimeout\": 300,\r\n   \"destinationStatsEnabled\": null,\r\n   \"isDefaultVersion\": false,\r\n   \"transport\": [\"https\"],\r\n   \"tags\":    [\r\n      \"chicken\",\r\n      \"pizza\"\r\n   ],\r\n   \"policies\": [\"Unlimited\"],\r\n   \"maxTps\":    {\r\n      \"sandbox\": 500,\r\n      \"production\": 100\r\n   },\r\n   \"visibility\": \"PUBLIC\",\r\n   \"visibleRoles\": [],\r\n   \"visibleTenants\": [],\r\n   \"endpointConfig\": \"{\\\"production_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"sandbox_endpoints\\\":{\\\"url\\\":\\\"https://localhost:9090/am/sample/pizzashack/v1/api/\\\",\\\"config\\\":null},\\\"endpoint_type\\\":\\\"http\\\"}\",\r\n   \"endpointSecurity\":    {\r\n      \"username\": \"user\",\r\n      \"type\": \"basic\",\r\n      \"password\": \"pass\"\r\n   },\r\n   \"gatewayEnvironments\": \"Production and Sandbox\",\r\n   \"sequences\": [],\r\n   \"subscriptionAvailability\": null,\r\n   \"subscriptionAvailableTenants\": [],\r\n   \"businessInformation\":    {\r\n      \"businessOwnerEmail\": \"marketing@pizzashack.com\",\r\n      \"technicalOwnerEmail\": \"architecture@pizzashack.com\",\r\n      \"technicalOwner\": \"John Doe\",\r\n      \"businessOwner\": \"Jane Roe\"\r\n   },\r\n   \"corsConfiguration\":    {\r\n      \"accessControlAllowOrigins\": [\"*\"],\r\n      \"accessControlAllowHeaders\":       [\r\n         \"authorization\",\r\n         \"Access-Control-Allow-Origin\",\r\n         \"Content-Type\",\r\n         \"SOAPAction\"\r\n      ],\r\n      \"accessControlAllowMethods\":       [\r\n         \"GET\",\r\n         \"PUT\",\r\n         \"POST\",\r\n         \"DELETE\",\r\n         \"PATCH\",\r\n         \"OPTIONS\"\r\n      ],\r\n      \"accessControlAllowCredentials\": false,\r\n      \"corsConfigurationEnabled\": false\r\n   }\r\n}",
        "summary": "Update a Composite API",
        "description": "This operation can be used to update an existing Composite API.\nBut the properties `name`, `version`, `context`, `provider`, `state` will not be changed by this operation.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "API object that needs to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CompositeAPI"
            }
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSuccessful response with updated Composite API object\n",
            "schema": {
              "$ref": "#/definitions/CompositeAPI"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" -X DELETE https://127.0.0.1:9090/api/am/store/v1/composite-apis/6fb74674-4ab8-4b52-9886-f9a376985060",
        "x-wso2-request": "DELETE https://127.0.0.1:9090/api/am/store/v1/composite-apis/6fb74674-4ab8-4b52-9886-f9a376985060\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK",
        "summary": "Delete a Composite API",
        "description": "This operation can be used to delete an existing Composite API proving the Id of the Composite API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "403": {
            "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/composite-apis/{apiId}/dedicated-gateway": {
      "get": {
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://127.0.0.1:9090/api/am/store/v1/composite-apis/am/publisher/v1.0/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/dedicated-gateway",
        "x-wso2-request": "GET https://127.0.0.1:9292/api/am/store/v1/composite-apis/96077508-fd01-4fae-bc64-5de0e2baf43c/dedicated-gateway\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n\"isEnabled\":true\n}",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "summary": "Get details of dedicated-gateway",
        "description": "This operation can be used to retrieve whether the dedicated gateway is enabled in a certain Composite API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "DedicatedGateway (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nisEnabled of dedicated Gateway returned\n",
            "schema": {
              "$ref": "#/definitions/DedicatedGateway"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "404": {
            "description": "Not Found.\nRequested Dedicated Gateway does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "x-wso2-curl": "curl -k -H \"Authorization:Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d data.json \"https://127.0.0.1:9443/api/am/publisher/v1.0/apis/96077508-fd01-4fae-bc64-5de0e2baf43c/dedicated-gateway",
        "x-wso2-request": "PUT https://127.0.0.1:9292/api/am/store/v1/composite-apis/96077508-fd01-4fae-bc64-5de0e2baf43c/dedicated-gateway\nAuthorization:Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\nContent-Type: application/json\n\n{\n   \"isEnabled\": \"true\"\n}",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"enabled\": \"true\"\n}",
        "security": [
          {
            "OAuth2Security": [
              "apim:dedicated_gateway"
            ]
          }
        ],
        "x-scope": "apim:dedicated_gateway",
        "summary": "Update enabling of dedicated Gateway of Composite API",
        "description": "This operation can be used to update metadata of an API's dedicated-gateway.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "dedicated Gateway object that needs to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DedicatedGateway"
            }
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "dedicated-gateway (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nDedicated Gateway of Composite API updated\n",
            "schema": {
              "$ref": "#/definitions/DedicatedGateway"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/composite-apis/{apiId}/swagger": {
      "get": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://127.0.0.1:9090/api/am/store/v1/composite-apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/swagger",
        "x-wso2-request": "GET https://127.0.0.1:9090/api/am/store/v1/composite-apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/swagger\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 329\n\n{\n   \"paths\": {\"/*\": {\"get\":    {\n      \"x-auth-type\": \"Application\",\n      \"x-throttling-policy\": \"Unlimited\",\n      \"responses\": {\"200\": {\"description\": \"OK\"}}\n   }}},\n   \"x-wso2-security\": {\"apim\": {\"x-wso2-scopes\": []}},\n   \"swagger\": \"2.0\",\n   \"info\":    {\n      \"title\": \"PhoneVerification\",\n      \"description\": \"Verify a phone number\",\n      \"contact\":       {\n         \"email\": \"xx@ee.com\",\n         \"name\": \"xx\"\n      },\n      \"version\": \"1.0.0\"\n   }\n}",
        "summary": "Get swagger definition",
        "description": "This operation can be used to retrieve the swagger definition of a Composite API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRequested swagger document of the Composite API is returned\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization:Bearer 5311eca3-8ac8-354e-ab36-7e2fdd6a4013\" -F endpointId=\"{\\\"paths\\\":{\\\"\\/*\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\"}}}}},\\\"x-wso2-security\\\":{\\\"apim\\\":{\\\"x-wso2-scopes\\\":[]}},\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"title\\\":\\\"PhoneVerification\\\",\\\"description\\\":\\\"Verify a phone number\\\",\\\"contact\\\":{\\\"email\\\":\\\"xx@ee.com\\\",\\\"name\\\":\\\"xx\\\"},\\\"version\\\":\\\"1.0.0\\\"}}\" -X PUT \"https://127.0.0.1:9090/api/am/store/v1/composite-apis/8848faaa-7fd1-478a-baa2-48a4ebb92c98/swagger\"",
        "x-wso2-request": "PUT https://127.0.0.1:9090/api/am/store/v1/composite-apis/8848faaa-7fd1-478a-baa2-48a4ebb92c98/swagger\nAuthorization:Bearer 5311eca3-8ac8-354e-ab36-7e2fdd6a4013\nContent-Length: 477\nContent-Type: multipart/form-data; boundary=------------------------4f51e636c0003d99\n\n--------------------------4f51e636c0003d99\nContent-Disposition: form-data; name=\"apiDefinition\"\n\n{\"paths\":{\"\\/*\":{\"get\":{\"x-auth-type\":\"Application\",\"x-throttling-policy\":\"Unlimited\",\"responses\":{\"200\":{\"description\":\"OK\"}}}}},\"x-wso2-security\":{\"apim\":{\"x-wso2-scopes\":[]}},\"swagger\":\"2.0\",\"info\":{\"title\":\"PhoneVerification\",\"description\":\"Verify a phone number\",\"contact\":{\"email\":\"xx@ee.com\",\"name\":\"xx\"},\"version\":\"1.0.0\"}}\n--------------------------4f51e636c0003d99--\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"paths\": {\"/*\": {\"get\":    {\n      \"x-auth-type\": \"Application\",\n      \"x-throttling-policy\": \"Unlimited\",\n      \"responses\": {\"200\": {\"description\": \"OK\"}}\n   }}},\n   \"x-wso2-security\": {\"apim\": {\"x-wso2-scopes\": []}},\n   \"swagger\": \"2.0\",\n   \"info\":    {\n      \"title\": \"PhoneVerification\",\n      \"description\": \"Verify a phone number\",\n      \"contact\":       {\n         \"email\": \"xx@ee.com\",\n         \"name\": \"xx\"\n      },\n      \"version\": \"1.0.0\"\n   }\n}",
        "summary": "Update swagger definition",
        "description": "This operation can be used to update the swagger definition of an existing Composite API. Swagger definition to be updated is passed as a form data parameter `apiDefinition`.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "formData",
            "name": "apiDefinition",
            "description": "Swagger definition of the Composite API",
            "type": "string",
            "required": true
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSuccessful response with updated Swagger definition\n",
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/composite-apis/{apiId}/implementation": {
      "get": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://127.0.0.1:9090/api/am/store/v1/composite-apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/implementation",
        "x-wso2-request": "GET https://127.0.0.1:9090/api/am/store/v1/composite-apis/890a4f4d-09eb-4877-a323-57f6ce2ed79b/implementation\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 329\n\n{\n   \"paths\": {\"/*\": {\"get\":    {\n      \"x-auth-type\": \"Application\",\n      \"x-throttling-policy\": \"Unlimited\",\n      \"responses\": {\"200\": {\"description\": \"OK\"}}\n   }}},\n   \"x-wso2-security\": {\"apim\": {\"x-wso2-scopes\": []}},\n   \"swagger\": \"2.0\",\n   \"info\":    {\n      \"title\": \"PhoneVerification\",\n      \"description\": \"Verify a phone number\",\n      \"contact\":       {\n         \"email\": \"xx@ee.com\",\n         \"name\": \"xx\"\n      },\n      \"version\": \"1.0.0\"\n   }\n}",
        "summary": "Get Composite API implementation",
        "description": "This operation can be used to retrieve the Ballerina implementation of a Composite API.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nRequested Ballerina implementation of the Composite API is returned\n",
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -k -H \"Authorization:Bearer 5311eca3-8ac8-354e-ab36-7e2fdd6a4013\" -F endpointId=\"{\\\"paths\\\":{\\\"\\/*\\\":{\\\"get\\\":{\\\"x-auth-type\\\":\\\"Application\\\",\\\"x-throttling-policy\\\":\\\"Unlimited\\\",\\\"responses\\\":{\\\"200\\\":{\\\"description\\\":\\\"OK\\\"}}}}},\\\"x-wso2-security\\\":{\\\"apim\\\":{\\\"x-wso2-scopes\\\":[]}},\\\"swagger\\\":\\\"2.0\\\",\\\"info\\\":{\\\"title\\\":\\\"PhoneVerification\\\",\\\"description\\\":\\\"Verify a phone number\\\",\\\"contact\\\":{\\\"email\\\":\\\"xx@ee.com\\\",\\\"name\\\":\\\"xx\\\"},\\\"version\\\":\\\"1.0.0\\\"}}\" -X PUT \"https://127.0.0.1:9090/api/am/store/v1/composite-apis/8848faaa-7fd1-478a-baa2-48a4ebb92c98/implementation\"",
        "x-wso2-request": "PUT https://127.0.0.1:9090/api/am/store/v1/composite-apis/8848faaa-7fd1-478a-baa2-48a4ebb92c98/implementation\nAuthorization:Bearer 5311eca3-8ac8-354e-ab36-7e2fdd6a4013\nContent-Length: 477\nContent-Type: multipart/form-data; boundary=------------------------4f51e636c0003d99\n\n--------------------------4f51e636c0003d99\nContent-Disposition: form-data; name=\"apiImplementation\"\n\n{\"paths\":{\"\\/*\":{\"get\":{\"x-auth-type\":\"Application\",\"x-throttling-policy\":\"Unlimited\",\"responses\":{\"200\":{\"description\":\"OK\"}}}}},\"x-wso2-security\":{\"apim\":{\"x-wso2-scopes\":[]}},\"swagger\":\"2.0\",\"info\":{\"title\":\"PhoneVerification\",\"description\":\"Verify a phone number\",\"contact\":{\"email\":\"xx@ee.com\",\"name\":\"xx\"},\"version\":\"1.0.0\"}}\n--------------------------4f51e636c0003d99--\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"paths\": {\"/*\": {\"get\":    {\n      \"x-auth-type\": \"Application\",\n      \"x-throttling-policy\": \"Unlimited\",\n      \"responses\": {\"200\": {\"description\": \"OK\"}}\n   }}},\n   \"x-wso2-security\": {\"apim\": {\"x-wso2-scopes\": []}},\n   \"swagger\": \"2.0\",\n   \"info\":    {\n      \"title\": \"PhoneVerification\",\n      \"description\": \"Verify a phone number\",\n      \"contact\":       {\n         \"email\": \"xx@ee.com\",\n         \"name\": \"xx\"\n      },\n      \"version\": \"1.0.0\"\n   }\n}",
        "summary": "Update Composite API implementation",
        "description": "This operation can be used to update the Ballerina implementation of a Composite API. Ballerina implementation to be updated is passed as a form data parameter `apiImplementation`.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId"
          },
          {
            "in": "formData",
            "name": "apiImplementation",
            "description": "Ballerina implementation of the Composite API",
            "type": "file",
            "required": true
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Composite API (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSuccessful response with updated Ballerina implementation\n",
            "schema": {
              "$ref": "#/definitions/FileInfo"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications": {
      "get": {
        "summary": "Get all applications",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Get a list of applications\n",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "**Search condition**.\n\nYou can search for an application by specifying the name as \"query\" attribute.\n\nEg.\n\"app1\" will match an application if the name is exactly \"app1\".\n\nCurrently this does not support wildcards. Given name must exactly match the application name.\n",
            "type": "string"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "Application (Collection)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nApplication list returned.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a new application",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Create a new application.\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Application object that is to be created.\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          }
        ],
        "tags": [
          "Application (Individual)",
          "Create"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created Application.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional request\n",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Accepted.\nThe request has been accepted.\n",
            "schema": {
              "$ref": "#/definitions/WorkflowResponse"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created Application.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict.\nApplication already exists.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications/{applicationId}": {
      "get": {
        "summary": "Get details of an application",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Get application details\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Application (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nApplication returned.\n",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested application does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update an application",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Update application details\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Application object that needs to be updated\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Application (Individual)",
          "Update"
        ],
        "responses": {
          "200": {
            "description": "OK.\nApplication updated.\n",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "headers": {
              "Location": {
                "description": "The URL of the newly created resource.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an application",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Delete an application\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Application (Individual)",
          "Delete"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "202": {
            "description": "Accepted.\nThe request has been accepted.\n",
            "schema": {
              "$ref": "#/definitions/WorkflowResponse"
            },
            "headers": {
              "Location": {
                "description": "Location of the existing Application.\n",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications/{applicationId}/generate-keys": {
      "post": {
        "summary": "Generate application keys",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Generate keys (Consumer key/secret) for application\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Application key generation request object\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationKeyGenerateRequest"
            }
          }
        ],
        "tags": [
          "Application Key (Individual)",
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nKeys are generated.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationKeys"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications/{applicationId}/map-keys": {
      "post": {
        "summary": "Map application keys",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Map keys (Consumer key/secret) to an application\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Application key mapping request object\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationKeyMappingRequest"
            }
          }
        ],
        "tags": [
          "Application Key (Individual)",
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nKeys are mapped.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationKeys"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications/{applicationId}/keys": {
      "get": {
        "summary": "Retrieve all application keys",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Retrieve keys (Consumer key/secret) of application\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          }
        ],
        "tags": [
          "Application Key (Collection)",
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nKeys are returned.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationKeysList"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications/{applicationId}/keys/{keyType}": {
      "get": {
        "summary": "Retrieve application keys for a provided type",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Retrieve keys (Consumer key/secret) of application by a given type\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "$ref": "#/parameters/keyType"
          }
        ],
        "tags": [
          "Application Key (Collection)",
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nKeys of given type are returned.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationKeys"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "Update an application key",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Update grant types and callback url (Consumer Key and Consumer Secret are ignored)\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "$ref": "#/parameters/keyType"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Grant types/Callback URL update request object\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationKeys"
            }
          }
        ],
        "tags": [
          "Application Key (Individual)",
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "Ok.\nGrant types or/and callback url is/are updated.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationKeys"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/applications/{applicationId}/generate-token": {
      "post": {
        "summary": "Generate application token",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Generate an access token for application by client_credentials grant type\n",
        "parameters": [
          {
            "$ref": "#/parameters/applicationId"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Application token generation request object\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationTokenGenerateRequest"
            }
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Application Token (Individual)",
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nToken is generated.\n",
            "schema": {
              "$ref": "#/definitions/ApplicationToken"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found.\nThe resource to be updated does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/export/applications": {
      "get": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "produces": [
          "application/zip"
        ],
        "x-wso2-curl": "curl -k -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9292/api/am/store/v1.0/export/applications?appId=xxx > exported-application.zip",
        "x-wso2-request": "GET https://127.0.0.1:9292/api/am/store/v1.0/export/applications?appId=xxx\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\n Connection: keep-alive\n  Content-Disposition: attachment; filename=\"exported-applications.zip\"\n  Content-Type: application/zip",
        "summary": "Export details related to an Application.",
        "description": "This operation can be used to export details related to a perticular application.\n",
        "parameters": [
          {
            "name": "appId",
            "in": "query",
            "description": "Application Search Query\n",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nExport Configuration returned.\n",
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              }
            },
            "schema": {
              "type": "file"
            }
          },
          "404": {
            "description": "Not Found.\nRequested Application does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/import/applications": {
      "put": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "x-wso2-curl": "curl -k -F \"file=@exported.zip\" -X PUT -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9292/api/am/store/v1.0/import/applications",
        "x-wso2-request": "PUT https://127.0.0.1:9292/api/am/store/v1.0/import/applications\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type:application/json\n\n{\"applicationUUID\":\"645b8e32-3643-48e5-ab42-aed853a8cd77\",\"workflowResponse\":{\"workflowStatus\":\"APPROVED\"}}",
        "summary": "Imports an Updates an Application.",
        "description": "This operation can be used to import an existing Application.\n",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Zip archive consisting on exported application configuration\n",
            "required": true,
            "type": "file"
          }
        ],
        "tags": [
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSuccessful response with the updated object as entity in the body.\n",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "x-wso2-curl": "curl -k -F \"file=@exported.zip\" -X POST -H \"Authorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9292/api/am/store/v1.0/import/applications",
        "x-wso2-request": "POST https://127.0.0.1:9292/api/am/store/v1.0/import/applications\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\"name\":\"sampleApp2\",\"uuid\":\"5e3ac21a-cc14-4404-95f1-659900c165c4\",\"description\":\"sample app 2\",\"policy\":{\"uuid\":\"5b74ec82-264e-4104-91ef-fdd41b981798\",\"policyName\":\"50PerMin\",\"isDeployed\":false},\"status\":\"APPROVED\",\"createdUser\":\"admin\",\"createdTime\":{\"date\":{\"year\":2017,\"month\":11,\"day\":8},\"time\":{\"hour\":4,\"minute\":10,\"second\":4,\"nano\":434000000}}}",
        "summary": "Imports an Application.",
        "description": "This operation can be used to import an existing Application.\n",
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "Zip archive consisting on exported application configuration\n",
            "required": true,
            "type": "file"
          }
        ],
        "tags": [
          "Application (Individual)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSuccessful response with the updated object as entity in the body.\n",
            "schema": {
              "$ref": "#/definitions/Application"
            },
            "headers": {
              "Content-Type": {
                "description": "The content type of the body.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "summary": "Get all subscriptions",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Get subscription list.\nThe API Identifier or Application Identifier\nthe subscriptions of which are to be returned are passed as parameters.\n",
        "parameters": [
          {
            "$ref": "#/parameters/apiId-Q"
          },
          {
            "$ref": "#/parameters/applicationId-Q"
          },
          {
            "$ref": "#/parameters/apiType"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "Subscription (Collection)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSubscription list returned.\n",
            "schema": {
              "$ref": "#/definitions/SubscriptionList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Add a new subscription",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Add a new subscription\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Subscription object that should to be added\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "tags": [
          "Subscription (Individual)",
          "Create"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/Subscription"
            },
            "headers": {
              "Location": {
                "description": "Location to the newly created subscription.\n",
                "type": "string"
              },
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional request.\n",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Accepted.\nThe request has been accepted.\n",
            "schema": {
              "$ref": "#/definitions/WorkflowResponse"
            },
            "headers": {
              "Location": {
                "description": "Location of the newly created subscription.\n",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "415": {
            "description": "Unsupported media type.\nThe entity of the request was in a not supported format.\n"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}": {
      "get": {
        "summary": "Get details of a subscription",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Get subscription details\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Subscription (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nSubscription returned\n",
            "schema": {
              "$ref": "#/definitions/Subscription"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource. Used by caches, or in conditional requests.",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time. Used by caches, or in conditional reuquests.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Subscription does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "Remove a subscription",
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "description": "Remove subscription\n",
        "parameters": [
          {
            "$ref": "#/parameters/subscriptionId"
          },
          {
            "$ref": "#/parameters/If-Match"
          },
          {
            "$ref": "#/parameters/If-Unmodified-Since"
          }
        ],
        "tags": [
          "Subscription (Individual)",
          "Delete"
        ],
        "responses": {
          "200": {
            "description": "OK.\nResource successfully deleted.\n"
          },
          "202": {
            "description": "Accepted.\nThe request has been accepted.\n",
            "schema": {
              "$ref": "#/definitions/WorkflowResponse"
            },
            "headers": {
              "Location": {
                "description": "Location of the existing subscription.\n",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found.\nResource to be deleted does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "412": {
            "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/policies/{tierLevel}": {
      "get": {
        "summary": "Get all available policies",
        "security": [
          {
            "OAuth2Security": null
          }
        ],
        "description": "Get available policies\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/tierLevel"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "Tier (Collection)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nList of policies returned.\n",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TierList"
              }
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/policies/{tierLevel}/{tierName}": {
      "get": {
        "summary": "Get a single policy details",
        "description": "Get policy details\n",
        "parameters": [
          {
            "$ref": "#/parameters/tierName"
          },
          {
            "$ref": "#/parameters/tierLevel"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Tier (Individual)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nTier returned\n",
            "schema": {
              "$ref": "#/definitions/Tier"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              },
              "Last-Modified": {
                "description": "Date and time the resource has been modifed the last time.\nUsed by caches, or in conditional reuquests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found.\nRequested Tier does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable.\nThe requested media type is not supported.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "Get all tags",
        "description": "Get a list of tags that are already added to APIs\n",
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          }
        ],
        "tags": [
          "Tag (Collection)",
          "Retrieve"
        ],
        "responses": {
          "200": {
            "description": "OK.\nTag list is returned.\n",
            "schema": {
              "$ref": "#/definitions/TagList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource.\n"
          },
          "404": {
            "description": "Not Found. Requested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "406": {
            "description": "Not Acceptable. The requested media type is not supported\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/labels": {
      "get": {
        "summary": "Get label information based on the label name",
        "description": "This operation can be used to retrieve the information of the labels\n",
        "parameters": [
          {
            "name": "labelType",
            "description": "type of the label.\n",
            "in": "query",
            "type": "string"
          },
          {
            "$ref": "#/parameters/If-None-Match"
          },
          {
            "$ref": "#/parameters/If-Modified-Since"
          }
        ],
        "tags": [
          "Label (Collection)"
        ],
        "responses": {
          "200": {
            "description": "OK.\nLabel list is returned.\n",
            "schema": {
              "$ref": "#/definitions/LabelList"
            },
            "headers": {
              "ETag": {
                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests (Will be supported in future).\n",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified.\nEmpty body because the client has already the latest version of the requested resource (Will be supported in future).\n"
          },
          "404": {
            "description": "Not Found.\nRequested API does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/self-signup": {
      "post": {
        "summary": "Register a new user",
        "security": [
          {
            "OAuth2Security": [
              "apim:self-signup"
            ]
          }
        ],
        "x-scope": "apim:self-signup",
        "description": "User self signup API\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object to represent the new user\n",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "tags": [
          "Sign Up"
        ],
        "responses": {
          "201": {
            "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains URL of newly created entity.\n",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "202": {
            "description": "Accepted.\nThe request has been accepted.\n",
            "schema": {
              "$ref": "#/definitions/WorkflowResponse"
            }
          },
          "400": {
            "description": "Bad Request.\nInvalid request or validation error.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sdk-gen/languages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "OAuth2Security": [
              "apim:subscribe"
            ]
          }
        ],
        "x-scope": "apim:subscribe",
        "x-wso2-curl": "curl -X GET -k -H \"Authorization:Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\" https://localhost:9292/api/am/store/v1.0/sdk-gen/languages",
        "x-wso2-request": "GET https://localhost:9292/api/am/store/v1.0/sdk-gen/languages\nAuthorization: Bearer ae4eae22-3f65-387b-a171-d37eaa366fa8\n",
        "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type : application/json",
        "summary": "Get a list of supported SDK languages\n",
        "description": "This operation will provide a list of programming languages that are supported by the swagger codegen library for generating System Development Kits (SDKs) for APIs available in the API Manager Store\n",
        "tags": [
          "SDK Languages"
        ],
        "responses": {
          "200": {
            "description": "OK.\nList of supported languages for generating SDKs.\n"
          },
          "404": {
            "description": "Not Found.\nThe list of languages is not found.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error.\nError while retrieving the list.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/settings": {
      "get": {
        "summary": "Retreive store settings",
        "security": [
          {
            "OAuth2Security": [
              "apim:store_setting"
            ]
          }
        ],
        "x-scope": "apim:store_setting",
        "description": "Retreive store settings\n",
        "responses": {
          "200": {
            "description": "OK.\nSettings returned\n",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "404": {
            "description": "Not Found.\nRequested Settings does not exist.\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "apiId": {
      "name": "apiId",
      "in": "path",
      "description": "**API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API ID.\nShould be formatted as **provider-name-version**.\n",
      "required": true,
      "type": "string"
    },
    "apiId-Q": {
      "name": "apiId",
      "in": "query",
      "description": "**API ID** consisting of the **UUID** of the API.\nThe combination of the provider of the API, name of the API and the version is also accepted as a valid API I.\nShould be formatted as **provider-name-version**.\n",
      "required": true,
      "type": "string"
    },
    "documentId": {
      "name": "documentId",
      "in": "path",
      "description": "**Document Identifier**\n",
      "required": true,
      "type": "string"
    },
    "applicationId": {
      "name": "applicationId",
      "in": "path",
      "description": "**Application Identifier** consisting of the UUID of the Application.\n",
      "required": true,
      "type": "string"
    },
    "applicationId-Q": {
      "name": "applicationId",
      "in": "query",
      "description": "**Application Identifier** consisting of the UUID of the Application.\n",
      "required": true,
      "type": "string"
    },
    "keyType": {
      "name": "keyType",
      "in": "path",
      "description": "**Application Key Type** standing for the type of the keys (i.e. Production or Sandbox).\n",
      "required": true,
      "type": "string",
      "enum": [
        "PRODUCTION",
        "SANDBOX"
      ]
    },
    "apiType": {
      "name": "apiType",
      "in": "query",
      "description": "**API Type** filters information pertaining to a specific type of API\n",
      "required": false,
      "type": "string",
      "enum": [
        "STANDARD",
        "COMPOSITE"
      ]
    },
    "subscriptionId": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Subscription Id\n",
      "required": true,
      "type": "string"
    },
    "commentId": {
      "name": "commentId",
      "in": "path",
      "description": "Comment Id\n",
      "required": true,
      "type": "string"
    },
    "ratingId": {
      "name": "ratingId",
      "in": "path",
      "description": "Rating Id\n",
      "required": true,
      "type": "string"
    },
    "subscriberName": {
      "name": "subscriberName",
      "in": "path",
      "description": "subscriber Name\n",
      "required": true,
      "type": "string"
    },
    "tierName": {
      "name": "tierName",
      "in": "path",
      "description": "Tier name\n",
      "required": true,
      "type": "string"
    },
    "tierLevel": {
      "name": "tierLevel",
      "in": "path",
      "description": "List API or Application type policies.\n",
      "type": "string",
      "enum": [
        "api",
        "application"
      ],
      "required": true
    },
    "limit": {
      "name": "limit",
      "in": "query",
      "description": "Maximum size of resource array to return.\n",
      "default": 25,
      "type": "integer"
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "description": "Starting point within the complete list of items qualified.\n",
      "default": 0,
      "type": "integer"
    },
    "If-None-Match": {
      "name": "If-None-Match",
      "in": "header",
      "description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resourec.\n",
      "type": "string"
    },
    "If-Modified-Since": {
      "name": "If-Modified-Since",
      "in": "header",
      "description": "Validator for conditional requests; based on Last Modified header of the\nformerly retrieved variant of the resource.\n",
      "type": "string"
    },
    "If-Match": {
      "name": "If-Match",
      "in": "header",
      "description": "Validator for conditional requests; based on ETag.\n",
      "type": "string"
    },
    "If-Unmodified-Since": {
      "name": "If-Unmodified-Since",
      "in": "header",
      "description": "Validator for conditional requests; based on Last Modified header.\n",
      "type": "string"
    },
    "label-Q": {
      "name": "label",
      "in": "query",
      "description": "Gateway Label\n",
      "required": false,
      "type": "string"
    },
    "label": {
      "name": "label",
      "in": "query",
      "description": "store label\n",
      "required": true,
      "type": "string"
    },
    "labels": {
      "name": "labels",
      "in": "query",
      "description": "Comma seperated store labels\n",
      "required": false,
      "type": "string"
    }
  },
  "definitions": {
    "APIList": {
      "title": "API List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of APIs returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/APIInfo"
          }
        }
      }
    },
    "CompositeAPIList": {
      "title": "Composite API List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Composite APIs returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompositeAPIInfo"
          }
        }
      }
    },
    "BaseAPIInfo": {
      "discriminator": "type",
      "title": "Base API info object with basic API details",
      "required": [
        "name",
        "context",
        "version",
        "provider",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "hasOwnGateway": {
          "type": "boolean"
        },
        "provider": {
          "description": "If the provider value is not given, the user invoking the API will be used as the provider.\n",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "APIInfo",
            "CompositeAPIInfo"
          ]
        }
      }
    },
    "APIInfo": {
      "title": "Standard API Info object with basic API details.",
      "required": [
        "lifeCycleStatus"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseAPIInfo"
        },
        {
          "properties": {
            "lifeCycleStatus": {
              "type": "string"
            }
          }
        }
      ]
    },
    "CompositeAPIInfo": {
      "title": "Composite API Info object with basic API details.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAPIInfo"
        },
        {
          "properties": {
            "applicationId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "BaseAPI": {
      "discriminator": "type",
      "title": "Base API object",
      "required": [
        "name",
        "context",
        "version",
        "provider",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "UUID of the api registry artifact\n"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "provider": {
          "description": "If the provider value is not given user invoking the api will be used as the provider.\n",
          "type": "string"
        },
        "apiDefinition": {
          "description": "Swagger definition of the API which contains details about URI templates and scopes\n",
          "type": "string"
        },
        "transport": {
          "type": "array",
          "items": {
            "description": "Supported transports for the API (http and/or https).\n",
            "type": "string"
          }
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hasOwnGateway": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "API",
            "CompositeAPI"
          ]
        }
      }
    },
    "API": {
      "title": "Standard API object",
      "required": [
        "lifeCycleStatus"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BaseAPI"
        },
        {
          "properties": {
            "lifeCycleStatus": {
              "type": "string"
            },
            "isDefaultVersion": {
              "type": "boolean"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "wsdlUri": {
              "type": "string"
            },
            "businessInformation": {
              "properties": {
                "businessOwner": {
                  "type": "string"
                },
                "businessOwnerEmail": {
                  "type": "string"
                },
                "technicalOwner": {
                  "type": "string"
                },
                "technicalOwnerEmail": {
                  "type": "string"
                }
              }
            }
          }
        }
      ]
    },
    "CompositeAPI": {
      "title": "Composite API object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAPI"
        },
        {
          "properties": {
            "applicationId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "ApplicationList": {
      "title": "Application List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of applications returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationInfo"
          }
        }
      }
    },
    "Application": {
      "title": "Application",
      "required": [
        "name",
        "throttlingTier"
      ],
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subscriber": {
          "description": "If subscriber is not given user invoking the API will be taken as the subscriber.\n",
          "type": "string"
        },
        "throttlingTier": {
          "type": "string"
        },
        "permission": {
          "type": "string",
          "example": "[{\"groupId\" : 1000, \"permission\" : [\"READ\",\"UPDATE\"]},{\"groupId\" : 1001, \"permission\" : [\"READ\",\"UPDATE\"]}]"
        },
        "description": {
          "type": "string"
        },
        "lifeCycleStatus": {
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/ApplicationToken"
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationKeys"
          }
        }
      }
    },
    "ApplicationInfo": {
      "title": "Application info object with basic application details",
      "properties": {
        "applicationId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "subscriber": {
          "type": "string"
        },
        "throttlingTier": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lifeCycleStatus": {
          "type": "string"
        }
      }
    },
    "DocumentList": {
      "title": "Document List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Documents returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        }
      }
    },
    "Document": {
      "title": "Document",
      "required": [
        "name",
        "type",
        "sourceType"
      ],
      "properties": {
        "documentId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "HOWTO",
            "SAMPLES",
            "PUBLIC_FORUM",
            "SUPPORT_FORUM",
            "API_MESSAGE_FORMAT",
            "SWAGGER_DOC",
            "OTHER"
          ]
        },
        "summary": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "INLINE",
            "URL",
            "FILE"
          ]
        },
        "sourceUrl": {
          "type": "string"
        },
        "inlineContent": {
          "type": "string"
        },
        "otherTypeName": {
          "type": "string"
        }
      }
    },
    "TierList": {
      "title": "Tier List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Tiers returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tier"
          }
        }
      }
    },
    "Tier": {
      "title": "Tier",
      "required": [
        "name",
        "tierPlan",
        "requestCount",
        "unitTime",
        "stopOnQuotaReach"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tierLevel": {
          "type": "string",
          "enum": [
            "api",
            "application",
            "subscription"
          ]
        },
        "attributes": {
          "description": "Custom attributes added to the policy policy\n",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestCount": {
          "description": "Maximum number of requests which can be sent within a provided unit time\n",
          "type": "integer",
          "format": "int64"
        },
        "unitTime": {
          "type": "integer",
          "format": "int64"
        },
        "tierPlan": {
          "description": "This attribute declares whether this policy is available under commercial or free\n",
          "type": "string",
          "enum": [
            "FREE",
            "COMMERCIAL"
          ]
        },
        "stopOnQuotaReach": {
          "description": "If this attribute is set to false, you are capabale of sending requests\neven if the request count exceeded within a unit time\n",
          "type": "boolean"
        }
      }
    },
    "FileInfo": {
      "title": "File Information including meta data",
      "properties": {
        "relativePath": {
          "type": "string",
          "description": "relative location of the file (excluding the base context and host of the Publisher API)",
          "example": "apis/01234567-0123-0123-0123-012345678901/thumbnail"
        },
        "mediaType": {
          "type": "string",
          "description": "media-type of the file",
          "example": "image/jpeg"
        }
      }
    },
    "SubscriptionList": {
      "title": "Subscription List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Subscriptions returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          }
        }
      }
    },
    "Subscription": {
      "title": "Subscription",
      "required": [
        "applicationId",
        "apiIdentifier",
        "policy",
        "apiName",
        "apiVersion"
      ],
      "properties": {
        "subscriptionId": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "apiIdentifier": {
          "type": "string"
        },
        "apiName": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "lifeCycleStatus": {
          "type": "string",
          "enum": [
            "BLOCKED",
            "PROD_ONLY_BLOCKED",
            "ACTIVE",
            "ON_HOLD",
            "REJECTED"
          ]
        }
      }
    },
    "Tag": {
      "title": "Tag",
      "required": [
        "name",
        "weight"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "weight": {
          "type": "integer"
        }
      }
    },
    "TagList": {
      "title": "Tag List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Tags returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        }
      }
    },
    "Rating": {
      "title": "Rating",
      "required": [
        "ratingId",
        "apiId",
        "username",
        "rating"
      ],
      "properties": {
        "ratingId": {
          "type": "string"
        },
        "apiId": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "If username is not given user invoking the API will be taken as the username.\n"
        },
        "rating": {
          "type": "integer"
        }
      }
    },
    "RatingList": {
      "title": "Rating List",
      "properties": {
        "avgRating": {
          "type": "string",
          "description": "Average Rating of the API\n"
        },
        "userRating": {
          "type": "string",
          "description": "Rating given by the user\n"
        },
        "count": {
          "type": "integer",
          "description": "Number of Subscriber Ratings returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rating"
          }
        }
      }
    },
    "Comment": {
      "title": "Comment",
      "required": [
        "commentId",
        "apiId",
        "username",
        "commentText"
      ],
      "properties": {
        "commentId": {
          "type": "string"
        },
        "apiId": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "If username is not given user invoking the API will be taken as the username.\n"
        },
        "commentText": {
          "type": "string"
        },
        "createdTime": {
          "type": "string",
          "example": "2017-02-20T13:57:16.229Z"
        },
        "createdBy": {
          "type": "string"
        },
        "lastUpdatedTime": {
          "type": "string",
          "example": "2017-02-20T13:57:16.229Z"
        },
        "lastUpdatedBy": {
          "type": "string"
        }
      }
    },
    "CommentList": {
      "title": "Comments List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Comments returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Comment"
          }
        }
      }
    },
    "Error": {
      "title": "Error object returned with 4XX HTTP lifeCycleStatus",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "description": {
          "type": "string",
          "description": "A detail description about the error message.\n"
        },
        "moreInfo": {
          "type": "string",
          "description": "Preferably an url with more details about the error.\n"
        },
        "error": {
          "type": "array",
          "description": "If there are more than one error list them out.\nFor example, list out validation errors by each field.\n",
          "items": {
            "$ref": "#/definitions/ErrorListItem"
          }
        }
      }
    },
    "ErrorListItem": {
      "title": "Description of individual errors that may have occurred during a request.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Description about individual errors occurred\n"
        }
      }
    },
    "ApplicationToken": {
      "title": "Application token details to invoke APIs",
      "properties": {
        "accessToken": {
          "type": "string",
          "description": "Access token"
        },
        "tokenScopes": {
          "type": "string",
          "description": "Valid scopes for the access token"
        },
        "validityTime": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum validity time for the access token"
        }
      }
    },
    "ApplicationKeys": {
      "title": "Application key details",
      "properties": {
        "consumerKey": {
          "type": "string",
          "description": "Consumer key of the application"
        },
        "consumerSecret": {
          "type": "string",
          "description": "Consumer secret of the application"
        },
        "supportedGrantTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported grant types for the application"
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL"
        },
        "keyType": {
          "description": "Key type",
          "type": "string",
          "enum": [
            "PRODUCTION",
            "SANDBOX"
          ]
        }
      }
    },
    "ApplicationKeysList": {
      "title": "Application Keys List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of applications keys returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationKeys"
          }
        }
      }
    },
    "ApplicationKeyGenerateRequest": {
      "title": "Application key generation request object",
      "required": [
        "keyType",
        "grantTypesToBeSupported"
      ],
      "properties": {
        "keyType": {
          "type": "string",
          "enum": [
            "PRODUCTION",
            "SANDBOX"
          ]
        },
        "grantTypesToBeSupported": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Grant types that should be supported by the application"
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL"
        }
      }
    },
    "ApplicationKeyMappingRequest": {
      "title": "Application key provision request object",
      "required": [
        "consumerKey",
        "consumerSecret"
      ],
      "properties": {
        "consumerKey": {
          "type": "string",
          "description": "Consumer key of the application"
        },
        "consumerSecret": {
          "type": "string",
          "description": "Consumer secret of the application"
        },
        "keyType": {
          "type": "string",
          "enum": [
            "PRODUCTION",
            "SANDBOX"
          ]
        }
      }
    },
    "ApplicationTokenGenerateRequest": {
      "title": "Application access token generation request object",
      "required": [
        "consumerKey",
        "consumerSecret"
      ],
      "properties": {
        "consumerKey": {
          "type": "string",
          "description": "Consumer key of the application"
        },
        "consumerSecret": {
          "type": "string",
          "description": "Consumer secret of the application"
        },
        "validityPeriod": {
          "type": "integer",
          "description": "Token validity period"
        },
        "scopes": {
          "type": "string",
          "description": "Allowed scopes (space seperated) for the access token"
        },
        "revokeToken": {
          "type": "string",
          "description": "Token to be revoked, if any."
        }
      }
    },
    "Label": {
      "title": "Label",
      "required": [
        "labelId",
        "name",
        "access_urls"
      ],
      "properties": {
        "labelId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "access_urls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LabelList": {
      "title": "Label List",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Number of Labels returned.\n"
        },
        "next": {
          "type": "string",
          "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n"
        },
        "previous": {
          "type": "string",
          "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n"
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Label"
          }
        }
      }
    },
    "WorkflowResponse": {
      "title": "workflow Response",
      "required": [
        "workflowStatus"
      ],
      "properties": {
        "workflowStatus": {
          "description": "This attribute declares whether this workflow task is approved or rejected.\n",
          "type": "string",
          "enum": [
            "CREATED",
            "APPROVED",
            "REJECTED",
            "REGISTERED"
          ],
          "example": "APPROVED"
        },
        "jsonPayload": {
          "description": "Attributes that returned after the workflow execution\n",
          "type": "string"
        }
      }
    },
    "User": {
      "title": "User",
      "required": [
        "username",
        "password",
        "firstName",
        "lastName",
        "email"
      ],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "DedicatedGateway": {
      "title": "Dedicated Gateway for the Composite API",
      "required": [
        "isEnabled"
      ],
      "properties": {
        "isEnabled": {
          "description": "This attribute declares whether an API should have a dedicated Gateway or not.\n",
          "type": "boolean",
          "example": true
        }
      }
    },
    "Settings": {
      "title": "Settings",
      "properties": {
        "serverUrl": {
          "type": "string"
        },
        "apiStoreUrl": {
          "type": "string"
        }
      }
    }
  }
}