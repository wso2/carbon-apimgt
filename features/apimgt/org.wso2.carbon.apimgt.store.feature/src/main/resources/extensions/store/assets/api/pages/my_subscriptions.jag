<%
/*
 *  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
var caramel;
require('/modules/store.js').exec(function (ctx) {
    caramel = require('caramel');
    var log = new Log();
    var ui = require('rxt').ui;
    var asset = require('rxt').asset;
    var uriMatcher = new URIMatcher(ctx.request.getRequestURI());
    var options = uriMatcher.match('/{context}/asts/{type}/{pageName}');
    var type = options.type;
    var am = asset.createUserAssetManager(ctx.session, type);
    var page = ui.buildPage(ctx.session, ctx.request);
    // var appList = am.list();
    // var output = am.renderBasic(appList,page)._custom();
    var output = am.renderBasic(page)._custom();
    var server = require('store').server;
    var user = server.current(ctx.session);
    var options2 = request.getAllParameters('UTF-8');
    var apistore = require('apistore').apistore.instance(user.username);

// room to add session management.
    if (options2.subscription_selection == null) {
        // getAllSubscriptions(userName, appName, startSubIndex, endSubIndex)
        var subscribedAPIsResult = apistore.getAllSubscriptions(user.username, '', 0, 100);
        var subscribedAPIs = [];
        subscribedAPIs = JSON.parse(subscribedAPIsResult);
        if (subscribedAPIs.applications != null && subscribedAPIs.applications.subscriptions != null) {
            output.appsWithSubs = subscribedAPIs.applications;
        }
    }

    caramel.render(output);
}, request, response, session);
%>