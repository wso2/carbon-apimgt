<%
include("/jagg/jagg.jag");
var i18n = require("i18n");
var localeResourcesBasePath="/site/conf/locales/jaggery/";
i18n.init(request,localeResourcesBasePath);
var log = new Log();

(function () {
    response.contentType = "application/json; charset=UTF-8";
    response.addHeader('Pragma', 'No-cache');
    response.addHeader('Cache-control', 'no-cache');
    var mod, obj, password, allFieldsValues, result, username,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),showWorkflowTip,
            user = jagg.getUser();

    var validation = {
        "action": { type: "safetext"},
    };

    var validation_errors = jagg.validateInputs(validation);

    if(validation_errors != true){
            print({
                error:true,
                message: msg.error.invalidInputs(validation_errors)
            });        
    }else if( request.getMethod() == 'POST' && !jagg.isCSRFTokenValid()){
        print({
            error:true,
            message: msg.error.csrfError
        });
    }            
    else if (action == "changePassword" && request.getMethod() == 'POST') {
        if (!user) {
            obj = {
                error: true,
                message: msg.error.loginRequired(action)
            };
            print(obj);
            return;
        }
        username = request.getParameter("username");
        currentPassword = request.getParameter("currentPassword");
		newPassword = request.getParameter("newPassword");
        
        mod = jagg.module("user");
        result = mod.changePassword(username, currentPassword, newPassword);      

        if (result.error) {
            obj = {
                error:true,
                message:result.message
            };
        } 
        else {
            obj = {
                error:false,
            };
        }
        print(obj);
    }
     else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
