<%
include("/jagg/jagg.jag");

(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, application, result, username,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),
            user = jagg.getUser();

    var validation = {
        "action": { type: "safetext"},
        "applicationOld": { type: "name"},
        "applicationNew": { type: "name"},        
        "callbackUrlNew": { type: "url"},        
    };

    var validation_errors = jagg.validateInputs(validation);

    if(validation_errors != true){
            print({
                error:true,
                message: msg.error.invalidInputs(validation_errors)
            });        
    }else if( request.getMethod() == 'POST' && !jagg.isCSRFTokenValid()){
        print({
            error:true,
            message: msg.error.csrfError
        });
    }            
    else if (action == "updateApplication" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        applicationOld = request.getParameter("applicationOld");
        applicationNew = request.getParameter("applicationNew");
        callbackUrlNew = request.getParameter("callbackUrlNew");
        groupIdNew = request.getParameter("groupIdNew");
        groupIdOld = request.getParameter("groupIdOld");
        if(null == request.getParameter("callbackUrlNew")){
            callbackUrlNew = "";
        }else{
            callbackUrlNew = request.getParameter("callbackUrlNew");
        }        
        descriptionNew = request.getParameter("descriptionNew");
        if (request.getParameter("applicationAttributeNew") == null) {
            applicationAttributeNew = "";
        } else {
            applicationAttributeNew = request.getParameter("applicationAttributeNew");
        }
        tier = request.getParameter("tier");
        username = user.username;

        mod = jagg.module("application");
        tokenType = request.getParameter("tokenType");

        if (tokenType == null) {
            tokenType = "DEFAULT";
        }
        result = mod.updateApplication(applicationNew, applicationOld, username, tier, callbackUrlNew, descriptionNew, groupIdOld, groupIdNew, tokenType, applicationAttributeNew);

        //If name of the selected application is edited,add the new name  to   session
        var selectedApp = session.get("selectedApp");
        if (applicationOld != applicationNew && applicationOld == selectedApp) {
            session.put("selectedApp", applicationNew);
        }

        if (result.error) {
            obj = {
                error:true,
                message:result.error
            };
        } else {
            obj = {
                error:false
            }
        }
        print(obj);
    } else if (action == "updateApplicationById" && request.getMethod() == 'POST') {
	if (!user) {
            if (!ssoEnabled) {
		print({
		    error:true,
                  message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        applicationOld = request.getParameter("applicationOld");
        applicationNew = request.getParameter("applicationNew");
        callbackUrlNew = request.getParameter("callbackUrlNew");
        groupIdNew = request.getParameter("groupIdNew");
        groupIdOld = request.getParameter("groupIdOld");
        var applicationId = request.getParameter("appId");
        username = user.username;
        var consumer = jagg.module("manager").getAPIConsumerObj();
        var application = consumer.getApplicationById(applicationId);
        var subscriber = application.getSubscriber().getName();

        if (null == request.getParameter("callbackUrlNew")) {
           callbackUrlNew = "";
        } else {
           callbackUrlNew = request.getParameter("callbackUrlNew");
        }
        descriptionNew = request.getParameter("descriptionNew");
        if (request.getParameter("applicationAttributeNew") == null) {
           applicationAttributeNew = "";
        } else {
           applicationAttributeNew = request.getParameter("applicationAttributeNew");
        }
        tier = request.getParameter("tier");

        tokenType = request.getParameter("tokenType");

        if (tokenType == null) {
            tokenType = "DEFAULT";
        }
        mod = jagg.module("application");
        result = mod.updateApplicationById(applicationNew, applicationOld, username, tier, callbackUrlNew,
                            descriptionNew, groupIdOld, groupIdNew, tokenType, applicationAttributeNew, applicationId);

        //If name of the selected application is edited,add the new name  to   session
        var selectedApp = session.get("selectedApp");
        if (applicationOld != applicationNew && applicationOld == selectedApp) {
            session.put("selectedApp", applicationNew);
        }

        if (result.error) {
            obj = {
                error:true,
                message:result.error
            };
        } else {
            obj = {
                error:false
            }
        }
        print(obj);
    }
    else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
