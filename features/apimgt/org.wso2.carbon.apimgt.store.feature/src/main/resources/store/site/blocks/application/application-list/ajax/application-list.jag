<%
include("/jagg/jagg.jag");

(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj,  result, username,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),
            user = jagg.getUser();

    var validation = {
        "action": { type: "safetext"},
        "applicationName": { type: "name"},
    };

    var validation_errors = jagg.validateInputs(validation);

    if(validation_errors != true){
            print({
                error:true,
                message: msg.error.invalidInputs(validation_errors)
            });        
    }else if (action == "getApplications") {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        username = user.username;
        mod = jagg.module("application");
        result = mod.getApplications(username);

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                applications:result.applications
            }
        }
        print(obj);
    }else if (action == "getApplicationsWithPagination") {


        if (!user) {
            if(!ssoEnabled){
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }
        var dir = "asc";
        var search = request.getParameter("search[value]");
        var start = request.getParameter("start");
        var draw = request.getParameter("draw");
        var offset = request.getParameter("length");
        var columnId = request.getParameter("order[0][column]");
        var sortOrder = request.getParameter("order[0][dir]");
        if (sortOrder.toLowerCase() != "asc" && sortOrder.toLowerCase() != "desc" ) {
            print({
                error:true,
                message:msg.error.forbidAction(action)
            });
            return;
        }

        var sortColumn = null;
        if(columnId == 0){
            sortColumn = "NAME";
        }else if(columnId == 1){
            sortColumn = "APPLICATION_TIER";
        }else if(columnId == 2){
            sortColumn = "APPLICATION_TIER";
        }else if(columnId == 3){
            sortColumn = "APPLICATION_STATUS";
        }else{
            sortColumn = "NAME";
        }

        if (sortOrder.equals("desc")) {
            sortOrder = "desc";
        } else {
            sortOrder = "asc";
        }

        username = user.username;
        mod = jagg.module("application");
        result = mod.getApplicationsWithPagination(username, start ,offset ,search ,sortColumn ,sortOrder);


        var totalRecordsCount = 0;

        if(result.applications.length > 0){

            totalRecordsCount = result.applications[0].totalCount;
        }

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                applications:result.applications,
                draw:draw,
                iTotalRecords:totalRecordsCount,
                iTotalDisplayRecords:totalRecordsCount
            }
        }
        print(obj);
    } else if(action == "getApplicationByName"){
        if (!user) {
            if(!ssoEnabled){
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }

        username = user.username;
        var applicationName = request.getParameter("applicationName");
        var groupId = session.get("groupId");

        mod = jagg.module("application");
        result = mod.getApplicationByName(username,applicationName,groupId);

        if (result.error) {
            obj = {
                error:result.error,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false,
                application:result.application
            }
        }
        print(obj);
    }
    else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
