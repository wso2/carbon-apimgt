<%
include("/jagg/jagg.jag");

(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, application, result, username,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),
            user = jagg.getUser();
            
    var validation = {
        "action": { type: "safetext"},
        "application": { type: "name"},        
    };

    var validation_errors = jagg.validateInputs(validation);

    if(validation_errors != true){
            print({
                error:true,
                message: msg.error.invalidInputs(validation_errors)
            });        
    }else if( request.getMethod() == 'POST' && !jagg.isCSRFTokenValid()){
        print({
            error:true,
            message: msg.error.csrfError
        });
    }            
    else if (action == "removeApplication" && request.getMethod() == 'POST') {
        if (!user) {
            if(!ssoEnabled){
		print({
		    error:true,
                    message:msg.error.loginRequired(action)
            	});
	    }
	    return;
        }

        application = request.getParameter("application", "UTF-8");
        username = user.username;

        mod = jagg.module("application");
        result = mod.removeApplication(application,username);
        session.remove("selectedApp");

        if (result.error) {
            obj = {
                error:true,
                message:msg.error.authError(action, username)
            };
        } else {
            obj = {
                error:false
            }
        }
        print(obj);
    } else if (action == "removeApplicationById" && request.getMethod() == 'POST') {
        if (!user) {
            if (!ssoEnabled) {
                print({
                    error: true,
                    message: msg.error.loginRequired(action)
                });
            }
            return;
        }
        applicationId = request.getParameter("appId", "UTF-8");
        username = user.username;
        var consumer = jagg.module("manager").getAPIConsumerObj();
        var application = consumer.getApplicationById(applicationId);
        var subscriber = application.getSubscriber().getName();
        result = consumer.removeApplication(application, username);
        session.remove("selectedApp");
        if (result) {
            obj = {
                error: true,
                message: msg.error.authError(action, username)
            };
        } else {
            obj = {
                error: false
            }
        }
        print(obj);
    } else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
