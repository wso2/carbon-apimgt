<% jagg.template("api/swagger", function(inputs, outputs, jagg) {
var log = new Log();
var site = require("/site/conf/site.json");
var host = site.hostname;

var subscriptions = outputs.subscriptions;

var protocol = "http";

function getLocation(href) {
    var match = href.match(/^(https?\:)\/\/(([^:\/?#]*)(?:\:([0-9]+))?)(\/[^?#]*)(\?[^#]*|)(#.*|)$/);
    return match && {
        protocol: match[1],
        host: match[2],
        hostname: match[3],
        port: match[4],
        pathname: match[5],
        search: match[6],
        hash: match[7]
    }
}

var url = request.getRequestURL();
var host = getLocation(url).host;

var port = request.getLocalPort();
var secure = request.isSecure()
if(secure){
    protocol = "https";
}

var apiName = outputs.api.name;
var providerValUe = outputs.api.provider;
var version = outputs.api.version;
var APIUtil = Packages.org.wso2.carbon.apimgt.impl.utils.APIUtil;
providerValUe = APIUtil.replaceEmailDomain(providerValUe);

    if(providerValUe.indexOf("@") > -1){
        providerValUe = providerValUe.replace("@","%40");
    }
	  if(providerValUe.indexOf("/") > -1){
        providerValUe = providerValUe.replace("/","-DOM-");
    }

//Calling the jaggery API

var swaggerAPI ;
if(providerValUe.contains("/")){
swaggerAPI = jagg.url("/api-docs"+"?provider="+encodeURIComponent(providerValUe)+"&name="+encodeURIComponent(apiName)+"&version="+encodeURIComponent(version));
  }else{
swaggerAPI = jagg.url("/api-docs"+"/"+providerValUe+"/"+apiName+"/"+version);
  }

var api = outputs.api;%>
  <script type="text/javascript">
    $(function () {
      window.swaggerUi = new SwaggerUi({
      url:  "<%=swaggerAPI%>",
      dom_id: "swagger-ui-container",
      supportedSubmitMethods: ['get', 'post', 'put', 'delete', 'patch', 'head'],
      onComplete: function(swaggerApi, swaggerUi){
        console.log("Loaded SwaggerUI");
      },
      onFailure: function(data) {
        console.log("Unable to Load SwaggerUI");
      },
      docExpansion: "list",
      validatorUrl: null
    });

    window.swaggerUi.load();
  });

  </script>

<% if(api.status != "PROTOTYPED"){ %>

<script language="javascript">
$(document).ready(function(){

	$('.env_name').selectpicker();
  var change_token = function(){
    $(".notoken").hide();
    var option = $("#sub_app_list option:selected");
    var type = $("#key_type").val();
    var key = option.attr("data-"+type);
    if(key == "null"){
      $(".notoken").show("slow");
      $("#access_token").val("");
    }else{
      $("#access_token").val(key);
    }     
    $("#access_token").trigger("change");
  };

var show_environments = function(){
    var type = $(".keytype").val();
    $("#environment_name").children('option').hide();
    $("#environment_name").children("option[class='" + type + "']").show();
    $("#environment_name").children("option[class='hybrid']").show();
    var options = $("#environment_name").children("option[class='hybrid'], option[class='" + type + "']");
      if (options.length < 2) {
        $(".env_name").hide();
        $(".OnEnvironment").hide();
      }
    if(options.length > 1){
     options[0].selected = true;
     $(".OnEnvironment").show();
     $(".btn-group.env_name").show();
    } else if ($("#environment_name").children("option[class='hybrid']").length > 0) {
        $("#environment_name").children("option[class='hybrid']")[0].selected = true;
    } else if($("#environment_name").children("option[class='" + type + "']").length > 0) {
      $("#environment_name").children("option[class='" + type + "']")[0].selected = true;
    }else{
      $(".env_name").hide();
      $(".OnEnvironment").hide();
    }
    $(".env_name").selectpicker("refresh");
    select_environment();
  };

var select_environment = function(){
    var selectedEnvironment = $("#environment_name");
    var name =selectedEnvironment.val();
    if (window.swaggerUi.api.url.indexOf("?")!=-1) {
      if (window.swaggerUi.api.url.indexOf("envName")!=-1) {
            window.swaggerUi.updateSwaggerUi({ "url" : swaggerUi.api.url.split("envName")[0] + "envName="+name});    
      }else{
    window.swaggerUi.updateSwaggerUi({ "url" : swaggerUi.api.url + "&envName="+name});            
      }
    }else{
    window.swaggerUi.updateSwaggerUi({ "url" : swaggerUi.api.url + "?envName="+name});
    }
    change_token();
  };

  $("#access_token").change(function(){
    var key = $(this).val();
    if(key && key.trim() != "") {
      swaggerUi.api.clientAuthorizations.add("key", new SwaggerClient.ApiKeyAuthorization("Authorization", "Bearer "+ key, "header"));
    }
  });

  $(".subapp").change(change_token);
  $(".keytype").change(show_environments);
  $(".env_name").change(select_environment);
  show_environments();
});

function checkOnKeyPress(e) {
    if (e.which == 13 ||e.keyCode == 13) {
        return false;
    }
}
</script>
<div id="authorizations" class="col-sm-12">
    <form class="form-horizontal">
<% if(subscriptions != null && subscriptions.length > 0) { %>
      <div class="form-group">
        <div class="col-sm-12">
		        <div class="input-group input-wrap res-wrap">
		        		<div class="input-group-btn">	
				         	 <label class="control-label">Try</label>
				         </div>
		        		<select id="sub_app_list" class="form-control subapp">
				          <% for(var i = 0 ;subscriptions.length > i;i++){ %>
				            <option value="" data-sandbox="<%= subscriptions[i].SANDBOX_KEY %>" data-production="<%= subscriptions[i].PRODUCTION_KEY %>">
				                 <%= encode.forHtml(subscriptions[i].application)%>
				            </option>
				          <% } %>
				         </select>
				         <div class="input-group-btn">	
				         	 <label class="control-label">Using</label>
				         </div>

				        <select id="key_type" class="form-control keytype">
					            <option value="production">Production</option>
					            <option value="sandbox">Sandbox</option>
					    </select>

				         <div class="input-group-btn">	
				         	 <label class="control-label">Key</label>
				         </div>
				         <div class="input-group-btn">	
				         	 <label class="control-label OnEnvironment">On Environment</label>
				         </div>
                         <select id="environment_name" class="env_name">
                              <%
                              var envir = JSON.parse(api.serverURL);
                              for(var types in envir){
                                var endpointType=envir[types];
                                for(var endpoint in endpointType){
                                    if(endpointType[endpoint]["showInConsole"]){
                                    %>
                                       <option value="<%=endpoint%>" class="<%=types%>"><%=endpoint%></option>
                                    <% }
                                }
                              }
                              %>
                        </select>
		        </div>

        </div>
      </div>
<!--

<div class="form-group">
  <label class="col-sm-2 control-label"><label for="">Try</label></label>
  <div class="col-sm-10">      
    <select id="sub_app_list" class="inline">
    <% for(var i = 0 ;subscriptions.length > i;i++){ %>
      <option value="" data-sandbox="<%= subscriptions[i].SANDBOX_KEY %>" data-production="<%= subscriptions[i].PRODUCTION_KEY %>"><%= encode.forHtml(subscriptions[i].application)%></option>
    <% } %>
    </select>
    <label> On </label>
    <select id="key_type">
      <option value="production">Production</option>
      <option value="sandbox">Sandbox</option>        
    </select> 
    <label> Environment. </label>    
  </div>
</div>

-->
<% }else if(jagg.getUser() != null){ %>
    <div class="alert alert-info" style="margin-bottom:10px">
        <i class="fa fa-info"></i> &nbsp;&nbsp; <%=i18n.localize("subscribeToGetAccessToken")%> &nbsp;
        <%=i18n.localize("provideAccessToken")%>
    </div>
<% }else{ %>
    <div class="alert alert-info" style="margin-bottom:10px">
        <i class="fa fa-info"></i> &nbsp;&nbsp; <%=i18n.localize("requireAccessToken")%> &nbsp;
        <%=i18n.localize("provideAccessToken")%>
    </div>     
<% } %>
    <div class="alert hide notoken">
    <button type="button" class="close" data-dismiss="alert">&times;</button>
    <strong>Warning!</strong> Selected application do not have an access token for selected environment. Please go to subscription page and generate an access token first.
    </div>




      <div class="form-group">
        <label class="col-sm-3 control-label">Set Request Header</label>
        <div class=" col-sm-9">
        <div class="input-group">
          <span class="input-group-addon" id="sizing-addon1">Authorization : Bearer</span>
          <input type="text" id="access_token" name="access_token" title="access_token" placeholder="Access Token" class="form-control" onkeypress="return checkOnKeyPress(event)">
        </div>
        </div>
      </div>
    </form>
</div>

<% } %>

<div class="swagger-section">
<div id="message-bar" class="swagger-ui-wrap">&nbsp;</div>
<div id="Download" style="float:right;font-size:14px"><a title="swagger" href='<%=swaggerAPI%>' target="_blank" style="font-size:14px"><i class="icon-share-alt" ></i> Swagger ( /swagger.json )</a></div>
<div id="swagger-ui-container" class="swagger-ui-wrap"></div>
</div>
<%  }); %>
