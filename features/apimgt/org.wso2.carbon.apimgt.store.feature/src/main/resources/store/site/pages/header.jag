<%
// This is a generic header file that can be included in all the pages.
var encode = require('encode');
encode = new encode.Encode();
var i18n = require("i18n");
var localeResourcesBasePath = "/site/conf/locales/jaggery/";
i18n.init(request, localeResourcesBasePath);
var site = require("/site/conf/site.json");

jagg.setCSRFToken();

//commented below if condition because anonymous user
//should be able to view the available apis without
//seeing IS login page.SSO will work when click the login link.
var ssoEnabled = site.ssoConfiguration.enabled;
var passive = site.ssoConfiguration.passive;
var idpInit = site.ssoConfiguration.idpInit;
if (ssoEnabled === 'true' && passive === 'false' && idpInit === 'false') {
    jagg.includeBlock("sso/filter", {});
}

var getRedirectPathForNonAuthenticatedUser = function () {
   var requestedPage = request.getRequestURI();
    var tenantParam="";
    if (request.getQueryString() != null) {
        requestedPage = requestedPage + '?' + encodeURIComponent(request.getQueryString());
       var tenantDomain=jagg.getTenantDomain();
       if(tenantDomain!=null){
       tenantParam="&tenant="+tenantDomain;
       }
    }
    var redirectPath = jagg.getAbsoluteUrl("/?requestedPage=" + requestedPage+tenantParam);
    return redirectPath;
};

    // 1  Filter out tenant parameter
    var request_tenant = jagg.getTenantDomain();
    var illegalChars = /([~!@#;%^*+={}\|\\<>\"\',])/;
    var illegalCharsInput = /(\<[a-zA-Z0-9\s\/]*>)/;
    if (illegalChars.test(request_tenant) || illegalCharsInput.test(request_tenant)) {
          response.sendRedirect(jagg.url("/site/pages/error-pages/404.html"));              
    }

%>
