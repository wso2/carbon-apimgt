<%
include("/jagg/jagg.jag");
(function () {
    var site = require("/site/conf/site.json");
    var ssoEnabled = site.ssoConfiguration.enabled;
    response.contentType = "application/json; charset=UTF-8";
    var mod, obj, result, username, selectedApp , page, apiName, apiVersion, provider,
            msg = require("/site/conf/ui-messages.jag"),
            action = request.getParameter("action"),
            user = jagg.getUser();

    var validation = {
        "action": { type: "safetext"},
        "page":{ type:"number"},
        "start":{ type:"number"},
        "end":{type:"number"},
        "selectedApp":{type:"name"},
        "app":{type:"name"}
    };

    var validation_errors = jagg.validateInputs(validation);

    if(validation_errors != true){
        print({
            error:true,
            message: msg.error.invalidInputs(validation_errors)
        });
    } else if (action == "getAllSubscriptions") {
        /*
         This will be called when the user calls listAllSubscription via the Rest API.
         */
        if (!user) {
            if(!ssoEnabled){
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }
        username = user.username;

        // if we have a query parameter from GET request we will use it.
        if(request.getParameter('selectedApp')!=null){
            selectedApp = request.getParameter('selectedApp');
        }
        //else if we have selected app in session we will use it.
        // ** Should not use session to get selected value
        /*else if(session.get('selectedApp')!=null){
         selectedApp = session.get('selectedApp');
         }*/
        //if not pass blank string because host object is waiting for string args..
        else{
            selectedApp= "";
        }

        page = request.getParameter("page");
        if (page == null) {
            page = 1;
        }

        mod = jagg.module("subscription");
        var groupId = session.get("groupId");

        var startIndex = request.getParameter("start");
        var endIndex = request.getParameter("end");

        if (startIndex==null && endIndex==null) {
            //If startIndex and endIndex of the subscriptions are not specified by the user, give first 100.
            startIndex = 1;
            endIndex = 100;
        }
        else if (startIndex==null && endIndex!=null) {
            startIndex = 1;
        }
        else  if (startIndex!=null && endIndex==null) {
            endIndex = 100;
        }
        startIndex--;

        result = mod.getAllSubscriptions(username,selectedApp,startIndex,endIndex);

        if (result.error) {
            if (result.error.javaException instanceof org.wso2.carbon.apimgt.api.ApplicationNotFoundException) {
                obj = {
                    "subscriptionCallbackResponse" : {
                        "error" : "true",
                        "message" : result.error.javaException.message
                    }
                };
                response.status = 404;
                response.contentType = "application/json";
            } else {
                obj = {
                    error: true,
                    message:msg.error.authError(action, username)
                };
            }
        } else {
            obj = {
                error:false,
                subscriptions:result.result
            }
        }
        print(obj);
    } else if (action == "getAllSubscriptionsOfApplication") {
        /*
         This will be called when the user calls listAllSubscription via the Rest API.
         */
        if (!user) {
            if(!ssoEnabled){
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }
        username = user.username;

        // if we have a query parameter from GET request we will use it.
        if(request.getParameter('selectedApp')!=null){
            selectedApp = request.getParameter('selectedApp');
        }
        //else if we have selected app in session we will use it.
        // ** Should not use session to get selected value
        /*else if(session.get('selectedApp')!=null){
         selectedApp = session.get('selectedApp');
         }*/
        //if not pass blank string because host object is waiting for string args..
        else{
            selectedApp= "";
        }

        page = request.getParameter("page");
        if (page == null) {
            page = 1;
        }

        mod = jagg.module("subscription");
        var groupId = session.get("groupId");

        var startIndex = request.getParameter("start");
        var endIndex = request.getParameter("end");

        if (startIndex==null && endIndex==null) {
            //If startIndex and endIndex of the subscriptions are not specified by the user, give first 100.
            startIndex = 1;
            endIndex = 100;
        }
        else if (startIndex==null && endIndex!=null) {
            startIndex = 1;
        }
        else  if (startIndex!=null && endIndex==null) {
            endIndex = 100;
        }
        startIndex--;

        result = mod.getAllSubscriptionsOfApplication(username,selectedApp,startIndex,endIndex);

        if (result.error) {
            if (result.error.javaException instanceof org.wso2.carbon.apimgt.api.ApplicationNotFoundException) {
                obj = {
                    "subscriptionCallbackResponse" : {
                        "error" : "true",
                        "message" : result.error.javaException.message
                    }
                };
                response.status = 404;
                response.contentType = "application/json";
            } else {
                obj = {
                    error: true,
                    message:msg.error.authError(action, username)
                };
            }
        } else {
            obj = {
                error:false,
                subscriptions:result.result
            }
        }
        print(obj);
    }else if (action == "getSubscriptionByApplication") {
        var appname = request.getParameter("app");
        var appId = request.getParameter("appId");
        if (!user) {
            if(!ssoEnabled){
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }
        username = user.username;

        mod = jagg.module("subscription");

        var groupId = session.get("groupId");
        if (jagg.isMultiGroupEnabled()) {
            groupId = request.getParameter("groupId");
            if (!groupId) {
                groupId = "";
            }
        }

        result = mod.getAPISubscriptionsForApplication(username, appname, groupId);

        if (result.error) {
            if (result.error.javaException instanceof org.wso2.carbon.apimgt.api.ApplicationNotFoundException) {
                obj = {
                    "subscriptionCallbackResponse" : {
                        "error" : "true",
                        "message" : result.error.javaException.message
                    }
                };
                response.status = 404;
                response.contentType = "application/json";
            } else {
                obj = {
                    error: true,
                    message:result.message
                };
            }
        } else {
            obj = {
                error:false,
                apis:result.subscriptions
            }
        }
        print(obj);
    } else if (action == "getSubscriptionForApplicationById") {
        var appname = request.getParameter("app");
        var appId = request.getParameter("appId");
        if (!user) {
            if (!ssoEnabled) {
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }
        username = user.username;

        mod = jagg.module("subscription");

        var groupId = session.get("groupId");
        if (jagg.isMultiGroupEnabled()) {
            groupId = request.getParameter("groupId");
        }

        result = mod.getAPISubscriptionsForApplicationById(username, appname, groupId, appId);

        if (result.error) {
            if (result.error.javaException instanceof org.wso2.carbon.apimgt.api.ApplicationNotFoundException) {
                obj = {
                    "subscriptionCallbackResponse" : {
                    "error" : "true",
                    "message" : result.error.javaException.message
                    }
                };
                response.status = 404;
                response.contentType = "application/json";
            } else {
                obj = {
                    error: true,
                    message:result.message
                };
            }
        } else {
            obj = {
                error:false,
                apis:result.subscriptions
            }
        }
        print(obj);
    } else if (action == "getSubscriptionByAPI") {

        var appname = request.getParameter("app");

        if (!user) {
            if (!ssoEnabled) {
                print({
                    error:true,
                    message:msg.error.loginRequired(action)
                });
            }
            return;
        }
        username = user.username;

        apiName = request.getParameter('apiName');
        apiVersion = request.getParameter('apiVersion');
        provider = request.getParameter('provider');

        if ((apiName != null) && (apiVersion != null) && (provider != null) ) {

            var api = {};
            api.name = apiName;
            api.version = apiVersion;
            api.provider = provider;

            mod = jagg.module("subscription");
            result = mod.getAPISubscriptions(api, username);

            if (result.error) {
                obj = {
                    error: true,
                    message:msg.error.authError(action, username)
                };
            } else {
                obj = {
                    error:false,
                    applications:result.subscriptions
                }
            }
        } else {
            obj = {
                error: true,
                message:msg.error.invalidInput(action, username)
            };
        }
        print(obj);

    } else if(action == "getApplicationKeysByAppId") {
          if (!user) {
              if(!ssoEnabled){
                  print({
                      error:true,
                      message:msg.error.loginRequired(action)
                  });
              }
              return;
          }

          var applicationId = request.getParameter("applicationId");
          mod = jagg.module("subscription");
          if (applicationId != null) {
              result = mod.getApplicationKeysOfApplication(applicationId);
              if (result.error) {
                  obj = {
                      error: true,
                      message:result.message
                  };
              } else {
                  obj = {
                      error:false,
                      apikeys:result.apikeys
                  }
              }
          }
          print(obj);
    }
    else {
        print({
            error:true,
            message:msg.error.invalidAction(action)
        });
    }
}());
%>
