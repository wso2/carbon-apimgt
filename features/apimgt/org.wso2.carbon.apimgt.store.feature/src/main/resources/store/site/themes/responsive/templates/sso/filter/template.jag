<% jagg.template("sso/filter", function(inputs, outputs, jagg) { %>
<%
    var site = require("/site/conf/site.json");
    var security =require("sso");

	var ssoRelyingParty = new security.SSORelyingParty(site.ssoConfiguration.issuer);
	var sessionId = session.getId();
	var isAuthenticated = ssoRelyingParty.isSessionAuthenticated(sessionId);

	var requestURI;

    var isPassiveAuthRequired = false;
    var samlAuthRequest;

	var requestedPage = request.getParameter("requestedPage");
    var passiveAuthRequired = request.getParameter("passiveAuthRequired");
    if(requestedPage!=null) {
        requestURI = requestedPage;
    } else {
	  requestURI = request.getRequestURI();
	  if(request.getQueryString()!=null){
	    requestURI =requestURI+'?'+request.getQueryString();
	  }
	}
	var checkSSO = true;

	if(requestURI.indexOf("register.jag") != -1) {
		checkSSO = false;
	}else if(requestURI.indexOf("confirmemail.jag") != -1) {
		checkSSO = false;
    }else if (passiveAuthRequired != null && 'false' == passiveAuthRequired) {
        isPassiveAuthRequired = false;
    } else if ((requestURI == site.context+'/') || requestURI.indexOf(site.context+'/?tenant=') != -1 || requestURI.indexOf("list-apis.jag") != -1 || requestURI.indexOf("apis/info") != -1 || requestURI.indexOf("apis/list") != -1) {
        isPassiveAuthRequired = true;
    }

	if (checkSSO && !Boolean(isAuthenticated)) {

	    var keyStorePassword = site.ssoConfiguration.keyStorePassword;
        var acsURL = site.ssoConfiguration.acsURL;
            var keyStoreAlias = site.ssoConfiguration.identityAlias;
            var keyStoreLocation = site.ssoConfiguration.keyStoreName;
            var signRequests = site.ssoConfiguration.signRequests;
            var CarbonUtils = Packages.org.wso2.carbon.utils.CarbonUtils;
            if(site.ssoConfiguration.keyStorePassword == null || site.ssoConfiguration.keyStorePassword == ""){
                site.ssoConfiguration.keyStorePassword = CarbonUtils.getServerConfiguration().getFirstProperty("Security.KeyStore.Password");
                }
            if(site.ssoConfiguration.identityAlias == null || site.ssoConfiguration.identityAlias == ""){
                site.ssoConfiguration.identityAlias = CarbonUtils.getServerConfiguration().getFirstProperty("Security.KeyStore.KeyAlias");
                }
            if(site.ssoConfiguration.keyStoreName == null || site.ssoConfiguration.keyStoreName == ""){
                site.ssoConfiguration.keyStoreName = CarbonUtils.getServerConfiguration().getFirstProperty("Security.KeyStore.Location");
                }
            if(site.ssoConfiguration.signRequests == null || site.ssoConfiguration.signRequests == ""){
                site.ssoConfiguration.signRequests = "false";
            }
            if(site.ssoConfiguration.nameIdPolicy == null){
                site.ssoConfiguration.nameIdPolicy = "";
            }

            ssoRelyingParty.setProperty("identityProviderURL", site.ssoConfiguration.identityProviderURL);
            ssoRelyingParty.setProperty("keyStorePassword", String(site.ssoConfiguration.keyStorePassword));
            ssoRelyingParty.setProperty("identityAlias", String(site.ssoConfiguration.identityAlias));
            ssoRelyingParty.setProperty("keyStoreName", String(site.ssoConfiguration.keyStoreName));
            ssoRelyingParty.setProperty("signRequests", String(site.ssoConfiguration.signRequests));
            ssoRelyingParty.setProperty("nameIdPolicy", site.ssoConfiguration.nameIdPolicy);

        var consumerUrl = "";
        //if acsURL is provided in site.json, consumerUrl will be taken from that. Otherwise generated from the app.
        if (acsURL) {
            consumerUrl = acsURL;
        } else {
            consumerUrl = jagg.getAbsoluteUrl("/jagg/jaggery_acs.jag");
        }
        if(site.ssoConfiguration.passive == "true")    {
            samlAuthRequest = ssoRelyingParty.getSAMLAuthRequest(consumerUrl, isPassiveAuthRequired);
        } else {
            if(site.ssoConfiguration.signRequests == "true" && (site.reverseProxy.enabled == "auto")){
                samlAuthRequest = ssoRelyingParty.getSAMLAuthRequest(consumerUrl);
            }else{
                samlAuthRequest = ssoRelyingParty.getSAMLAuthRequest();
            }
        }

	    var encodedRequest = ssoRelyingParty.encode(samlAuthRequest);
	    var relayState = ssoRelyingParty.getUUID();
	    ssoRelyingParty.setRelayStateProperty(relayState, requestURI);
	    var idpURL = ssoRelyingParty.getProperty("identityProviderURL");
%>
<div>

	        <p>You are now redirected to Identity. If the

	        redirection fails, please click the post button.</p>

	        <form method="post" action="<%=idpURL%>">

	            <p>

	                <input type="hidden" name="SAMLRequest"

	                value="<%= encodedRequest %>"/>

	                <input type="hidden" name="RelayState" value="<%= relayState %>"/>

	                <input type="hidden" name="SSOAuthSessionID" value="<%= sessionId %>"/>

	                <button type="submit">POST</button>

	            </p>

	        </form>

	    </div>

	    <script type = "text/javascript" >

	           document.forms[0].submit();

	    </script>

<%  }  %>
<% }); %>


