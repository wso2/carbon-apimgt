<%
user = jagg.getUser();

var getTiers = function () {
    var tiers, log = new Log(),
    store = jagg.module("manager").getAPIStoreObj();

    try {
        tiers = store.getTiers();
        if (log.isDebugEnabled()) {
            log.debug("getTiers : " + stringify(tiers));
        }
        return {
            error:false,
            tiers:tiers
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            tiers:null
        };
    }
};

var getApplicationTiers = function () {
    var tiers, log = new Log();
    var tier;
    var tierArray = [];
    var store;
    var i;
    var username = user.username;

    try {
        if (username != null) {
            store = org.wso2.carbon.apimgt.impl.APIManagerFactory.getInstance().getAPIConsumer(username);
        } else {
            store = org.wso2.carbon.apimgt.impl.APIManagerFactory.getInstance().getAPIConsumer();
        }

        var tiers = store.getTiers(org.wso2.carbon.apimgt.impl.APIConstants.TIER_APPLICATION_TYPE, username);
        var tierList = org.wso2.carbon.apimgt.impl.utils.APIUtil.sortTiers(tiers);

        for(i = 0; i < tierList.size(); i++) {
            tier = {};
            tier.tierName = tierList.get(i).getName();
            tier.tierDisplayName = tierList.get(i).getDisplayName();
            tier.tierDescription = tierList.get(i).getDescription() != null ? tierList.get(i).getDescription() : "";
            tier.defaultTier = (i == 0);
            tierArray[i] = tier;
        }

        if (log.isDebugEnabled()) {
            log.debug("getTiers : " + stringify(tierArray));
        }
        return {
            error:false,
            tiers:tierArray
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            tiers:null
        };
    }
};

var getDeniedTiers = function () {
    var tiers,
            log = new Log(),
            store = jagg.module("manager").getAPIStoreObj();

    try {
        tiers = store.getDeniedTiers();
        if (log.isDebugEnabled()) {
            log.debug("getDeniedTiers : " + stringify(tiers));
        }
        return {
            error:false,
            tiers:tiers
        };
    } catch (e) {
        log.error(e.message);
        return {
            error:e,
            tiers:null
        };
    }
};

var isGlobalCEPThrottlingEnabled = function() {
     var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;
        return APIUtil.isAdvanceThrottlingEnabled();
};
var isUnlimitedTierEnabled = function() {
     var APIUtil = org.wso2.carbon.apimgt.impl.utils.APIUtil;
        return APIUtil.isEnabledUnlimitedTier();
};
%>

