<?xml version="1.0" encoding="utf-8"?>
<!--
 ~ Copyright (c) 2010-2011, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ Licensed under the Apache License, Version 2.0 (the "License");
 ~ you may not use this file except in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~      http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing, software
 ~ distributed under the License is distributed on an "AS IS" BASIS,
 ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 ~ See the License for the specific language governing permissions and
 ~ limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.wso2.carbon.apimgt</groupId>
        <artifactId>apimgt-feature</artifactId>
        <version>7.0.41-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>org.wso2.carbon.apimgt.store.feature</artifactId>
    <packaging>pom</packaging>
    <name>WSO2 Carbon - API Store Feature</name>
    <url>http://wso2.org</url>
    <description>This feature contains the core bundles required for API management back end
    </description>

    <dependencies>
        <!--<dependency>-->
            <!--<groupId>org.wso2.carbon.apimgt</groupId>-->
            <!--<artifactId>org.wso2.carbon.apimgt.publisher.feature</artifactId>-->
            <!--<type>zip</type>-->
        <!--</dependency>-->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.wso2.maven</groupId>
                <artifactId>carbon-p2-plugin</artifactId>
                <version>${carbon.p2.plugin.version}</version>
                <executions>
                    <execution>
                        <id>4-p2-feature-generation</id>
                        <phase>package</phase>
                        <goals>
                            <goal>p2-feature-gen</goal>
                        </goals>
                        <configuration>
                            <id>org.wso2.carbon.apimgt.store</id>
                            <propertiesFile>../../etc/feature.properties</propertiesFile>
                            <adviceFile>
                                <properties>
                                    <propertyDef>org.wso2.carbon.p2.category.type:server
                                    </propertyDef>
                                    <propertyDef>org.eclipse.equinox.p2.type.group:false
                                    </propertyDef>
                                </properties>
                            </adviceFile>
                            <bundles>

                            </bundles>
                            <importFeatures>

                            </importFeatures>
                            <importBundles>

                            </importBundles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <executions>
                    <execution>
                        <id>npm install (initialize)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <workingDirectory>${basedir}/src/main/resources/store_new</workingDirectory>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>install</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- 'npm run clean' which is run in clean lifecycle needs 'rimraf' node module.
                     Make sure it is installed  -->
                    <!--<execution>
                        <id>npm install rimraf (clean)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>pre-clean</phase>
                        <configuration>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>install</argument>
                                <argument>rimraf</argument>
                            </arguments>
                        </configuration>
                    </execution>-->
                    <!--<execution>
                        <id>npm run clean (clean)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>clean</phase>
                        <configuration>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>clean</argument>
                            </arguments>
                        </configuration>
                    </execution>-->
                    <execution>
                        <id>npm run build (compile)</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <phase>compile</phase>
                        <configuration>
                            <workingDirectory>${basedir}/src/main/resources/store_new</workingDirectory>
                            <executable>${npm.executable}</executable>
                            <arguments>
                                <argument>run</argument>
                                <argument>${npm.build.command}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!--<execution>-->
                        <!--<id>npm run test (test)</id>-->
                        <!--<goals>-->
                            <!--<goal>exec</goal>-->
                        <!--</goals>-->
                        <!--<phase>test</phase>-->
                        <!--<configuration>-->
                            <!--<workingDirectory>${basedir}/src/main/resources/publisher</workingDirectory>-->
                            <!--<skip>${maven.test.skip}</skip>-->
                            <!--<executable>${npm.executable}</executable>-->
                            <!--<arguments>-->
                                <!--<argument>test</argument>-->
                            <!--</arguments>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                </executions>
                <configuration>
                    <workingDirectory>${npm.working.dir}</workingDirectory>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>platform-windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <!-- Override the executable names for Windows -->
                <npm.executable>npm.cmd</npm.executable>
            </properties>
        </profile>
    </profiles>
    <properties>
        <maven.test.skip>false</maven.test.skip>
        <npm.executable>npm</npm.executable>
        <npm.build.command>build_prod</npm.build.command>
        <npm.working.dir>./src/main/</npm.working.dir>
    </properties>
</project>
