<%
/*
 * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
    include("/services/constants.jag");
    var appUtils = require("/services/utils.js");

    var log = new Log();
    log.debug("Jaggery service for token introspection");
    var utils = Packages.org.wso2.carbon.apimgt.impl.utils.APIUtil;

    var userInfoEndpoint = appUtils.getLoopbackOrigin() + "/oauth2/userinfo";
    var introspectEndpoint = appUtils.getLoopbackOrigin() + "/oauth2/introspect";
    var tokenP1 = request.getCookie("WSO2_AM_TOKEN_1_Default")? request.getCookie("WSO2_AM_TOKEN_1_Default").value : null;
    var tokenP2 = request.getCookie("AM_ACC_TOKEN_DEFAULT_P2")? request.getCookie("AM_ACC_TOKEN_DEFAULT_P2").value : null;
    var token = tokenP1 + tokenP2;
    var userData = {};
    var userResult = get(userInfoEndpoint, userData , {
        "Authorization": "Bearer " + token
    });

    var data = {token: token }
    var introspectResult = post(introspectEndpoint, data , {
        "Authorization": "Basic " + utils.getBase64EncodedAdminCredentials(),
        "Content-Type": "application/x-www-form-urlencoded"
    }, "json");
    log.debug("Introspection result json: " + introspectResult);
    // For more info about response.xhr object refer http://jaggeryjs.org/documentation.jag?api=xhr
    if (introspectResult.xhr.status === 200) {
        response.contentType = "application/json";
        print(introspectResult.data);
    } else {
        log.warn("Something went wrong while introspecting the token " + tokenP1 + tokenP2 );
        log.error(introspectResult);
        response.status = 500;
        response.contentType = "text/plain";
        response.content = "Something went wrong while introspecting the token!!";
    }

%>
