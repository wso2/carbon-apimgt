{
  "Admin.KeyManager.form.type": "Key Manager Type",
  "Admin.KeyManager.label.ConsumerKey.Claim": "Consumer Key Claim URI",
  "Admin.KeyManager.label.DisplayName": "Display Name",
  "Admin.KeyManager.label.Enable.EnableOAithAppCreation": "Oauth App Creation",
  "Admin.KeyManager.label.Enable.OutOfBandProvisioning": "Out Of Band Provisioning",
  "Admin.KeyManager.label.Enable.TokenGen": "Token Generation",
  "Admin.KeyManager.label.Scopes.Claim": "Scopes Claim URI",
  "Admin.Throttling.Advanced.Throttling.policy.table.header.name": "Name",
  "Admin.Throttling.Advanced.Throttling.policy.table.header.quota": "Quota",
  "Admin.Throttling.Advanced.Throttling.policy.table.header.quota.policy": "Quota Policy",
  "Admin.Throttling.Advanced.Throttling.policy.table.header.unit.time": "Unit Time",
  "Admin.Throttling.Application.Throttling.Policy.add.data.amount.helper.text": "Bandwidth allowed",
  "Admin.Throttling.Application.Throttling.Policy.add.description.helper.text": "Description of the throttle policy",
  "Admin.Throttling.Application.Throttling.Policy.add.general.details": "General Details",
  "Admin.Throttling.Application.Throttling.Policy.add.name.helper.text": "Name of the throttle policy",
  "Admin.Throttling.Application.Throttling.Policy.add.quota.limits.details": "Quota Limits",
  "Admin.Throttling.Application.Throttling.Policy.add.request.count.helper.text": "Number of requests allowed",
  "Admin.Throttling.Application.Throttling.Policy.add.time.helper.text": "Time configuration",
  "Admin.Throttling.Application.Throttling.policy.table.header.name": "Name",
  "Admin.Throttling.Application.Throttling.policy.table.header.quota": "Quota",
  "Admin.Throttling.Application.Throttling.policy.table.header.unit.time": "Unit Time",
  "Admin.Throttling.Blacklist.Throttling.Policy.add.condition.type": "Condition Type",
  "Admin.Throttling.Blacklist.Throttling.policy.table.header.condition.status": "Condition Status",
  "Admin.Throttling.Blacklist.Throttling.policy.table.header.condition.type": "Condition Type",
  "Admin.Throttling.Blacklist.Throttling.policy.table.header.conditional.value": "Conditional Value",
  "Admin.Throttling.Blacklist.policy.add.invert.condition": "Invert Condition:",
  "Admin.Throttling.Blacklist.policy.enable.condition": "Enable Condition",
  "Admin.Throttling.Custom.Throttling.policy.table.header.description": "Description",
  "Admin.Throttling.Custom.Throttling.policy.table.header.key.template": "Key Template",
  "Admin.Throttling.Custom.Throttling.policy.table.header.name": "Name",
  "Admin.Throttling.Custom.policy.add.policy.description": "Description of the throttle policy",
  "Admin.Throttling.Custom.policy.add.policy.name": "Name of the throttle policy",
  "Admin.Throttling.Custom.policy.add.siddhi.query": "Siddhi Query:",
  "Admin.Throttling.Custom.policy.add.siddhi.query.description": "The following sample query will allow 5 requests per minute for an Admin user.",
  "Admin.Throttling.Custom.policy.add.siddhi.query.key.template": "Key Template : $userId",
  "Admin.Throttling.Subscription.Throttling.policy.table.header.name": "Name",
  "Admin.Throttling.Subscription.Throttling.policy.table.header.quota": "Quota",
  "Admin.Throttling.Subscription.Throttling.policy.table.header.quota.policy": "Quota Policy",
  "Admin.Throttling.Subscription.Throttling.policy.table.header.rate.limit": "Rate Limit",
  "Admin.Throttling.Subscription.Throttling.policy.table.header.time.unit": "Time Unit",
  "Admin.Throttling.Subscription.Throttling.policy.table.header.unit.time": "Unit Time",
  "AdminPages.Addons.InlineProgress.message": "Loading...",
  "AdminPages.Addons.InputListBase.textfield.remove.label": "Remove",
  "AdminPages.Addons.ListBase.nodata.message": "No items yet",
  "AdminPages.Addons.ListBase.reload": "Reload",
  "AdminPages.ApiCategories.AddEdit.form.add.successful": "API Category added successfully",
  "AdminPages.ApiCategories.AddEdit.form.edit.successful": "API Category edited successfully",
  "AdminPages.ApiCategories.AddEdit.form.name": "Name",
  "AdminPages.ApiCategories.Delete.form.delete.successful": "API Category deleted successfully",
  "AdminPages.ApiCategories.List.addButtonProps.title": "Add API Category",
  "AdminPages.ApiCategories.List.addButtonProps.triggerButtonText": "Add API Category",
  "AdminPages.ApiCategories.List.empty.content.apicategories": "You can use API categories to group APIs. In previous versions of WSO2 API Manager, the process of grouping APIs was carried out by using tag-wise groups. Unlike tag-wise grouping, API categories do not use a naming convention. Therefore, the admin does not need to take into consideration any naming conventions when using API category-based grouping.",
  "AdminPages.ApiCategories.List.empty.title.apicategories": "API Categories",
  "AdminPages.ApiCategories.List.help.link.one": "API Category based Grouping",
  "AdminPages.ApiCategories.List.search.default": "Search by API Category name",
  "AdminPages.ApiCategories.List.title.apicategories": "API Categories",
  "AdminPages.ApiCategories.table.header.category.description": "Description",
  "AdminPages.ApiCategories.table.header.category.name": "Category Name",
  "AdminPages.ApiCategories.table.header.category.number.of.apis": "Number of APIs",
  "AdminPages.ApplicationSettings.Edit.form.edit.successful": "Application owner changed successfully",
  "AdminPages.ApplicationSettings.Edit.form.helperText": "Enter a new Owner. Make sure the new owner has logged into the Developer Portal at least once",
  "AdminPages.ApplicationSettings.Edit.form.name": "Application Name",
  "AdminPages.ApplicationSettings.List.empty.content.application.settings": "If required, you can transfer the ownership of your application to another user in your organization. When transferring ownership, the new owner will have the required permission to delete or edit the respective application.{breakingLine}{breakingLine}Create an application with the Devportal to change ownership.",
  "AdminPages.ApplicationSettings.List.empty.title.change.application.ownership": "Application Ownership Change",
  "AdminPages.ApplicationSettings.List.help.link.one": "Changing the Owner of an Application",
  "AdminPages.ApplicationSettings.List.search.default": "Search by Application Name or Owner",
  "AdminPages.ApplicationSettings.List.title.application.settings": "Application Settings",
  "AdminPages.ApplicationSettings.table.header.application.name": "Application Name",
  "AdminPages.ApplicationSettings.table.header.application.owner": "Owner",
  "AdminPages.BotDetection.Add.form.add.successful": "Email added successfully",
  "AdminPages.BotDetection.Add.form.email": "Email",
  "AdminPages.BotDetection.Add.form.info": "Provide a valid email to receive notifications when a bot attack is detected",
  "AdminPages.BotDetection.Email.Delete.form.delete.successful": "Email removed successfully",
  "AdminPages.BotDetection.Email.List.addButtonProps.title": "Add Email",
  "AdminPages.BotDetection.Email.List.addButtonProps.triggerButtonText": "Add Email",
  "AdminPages.BotDetection.Email.List.analytics.disabled.empty.content": "If you enable WSO2 API Manager Analytics with WSO2 API Manager, you can enable email notifications for all unauthorized API calls that you receive and also view the bot detection data easily via the Admin Portal.{breakingLine}{breakingLine}Follow documentations on help to enable Analytics and get started.",
  "AdminPages.BotDetection.Email.List.analytics.disabled.empty.title": "Analytics disabled!",
  "AdminPages.BotDetection.Email.List.empty.content": "After a Publisher publishes APIs in the API Developer Portal, hackers can invoke the APIs without an access token by scanning the open ports of a system. Therefore, WSO2 API Manager has a bot detection mechanism in place to prevent such attacks by identifying who tried to enter and invoke resources without proper authorization. WSO2 API Manager's bot detection mechanism traces and logs details of such unauthorized API calls and sends notifications in this regard via emails. Thereby this helps Publishers to protect their data from bot attackers and improve the security of their data.{breakingLine}{breakingLine}You can add, delete and see the list of registered emails here.",
  "AdminPages.BotDetection.Email.List.empty.title": "Notification receiving Emails",
  "AdminPages.BotDetection.Email.List.help.link.one": "Enabling email notifications for bot detection",
  "AdminPages.BotDetection.Email.List.help.link.two": "Viewing bot detection data via the Admin Portal",
  "AdminPages.BotDetection.Email.List.search.default": "Search by Email",
  "AdminPages.BotDetection.Email.List.table.header.email": "Email",
  "AdminPages.BotDetection.Email.List.title": "Emails",
  "AdminPages.BotDetection.detected.data.List.analytics.disabled.empty.content": "If you enable WSO2 API Manager Analytics with WSO2 API Manager, you can enable email notifications for all unauthorized API calls that you receive and also view the bot detection data easily via the Admin Portal.{breakingLine}{breakingLine}Follow documentations on help to enable Analytics and get started.",
  "AdminPages.BotDetection.detected.data.List.analytics.disabled.empty.title": "Analytics disabled!",
  "AdminPages.BotDetection.detected.data.List.empty.content.microgateways": "Bot detection is enabled. There is no detected bot data. When a bot attack is detected, you will be informed via email. Set the email to be informed with, {breakingLine}{breakingLine}Bot Detection Data > Configure Emails {breakingLine}{breakingLine}on the left side menu.",
  "AdminPages.BotDetection.detected.data.List.empty.title": "No Bots detected!",
  "AdminPages.BotDetection.detected.data.List.help.link.one": "Enabling email notifications for bot detection",
  "AdminPages.BotDetection.detected.data.List.help.link.two": "Viewing bot detection data via the Admin Portal",
  "AdminPages.BotDetection.detected.data.List.search.default": "Search Bot data",
  "AdminPages.BotDetection.detected.data.List.title": "Detected Data",
  "AdminPages.BotDetection.detected.data.table.header.label.api.method": "API method",
  "AdminPages.BotDetection.detected.data.table.header.label.client.ip": "Client IP",
  "AdminPages.BotDetection.detected.data.table.header.label.headers.set": "Headers Set",
  "AdminPages.BotDetection.detected.data.table.header.label.message.body": "Message Body",
  "AdminPages.BotDetection.detected.data.table.header.label.message.id": "Message ID",
  "AdminPages.BotDetection.detected.data.table.header.label.record.time": "Record Time",
  "AdminPages.BotDetection.detected.data.table.row.empty.message.body.default.message": "Empty Message Body",
  "AdminPages.Gateways.AddEdit.form.info.add.successful": "Gateway Label added successfully",
  "AdminPages.Gateways.AddEdit.form.info.edit.successful": "Gateway Label edited successfully",
  "AdminPages.Gateways.AddEdit.form.name": "Name",
  "AdminPages.Gateways.AddEdit.form.save.button.label": "Save",
  "AdminPages.Gateways.Delete.form.delete.confirmation.message": "Are you sure you want to delete this Gateway Label?",
  "AdminPages.Gateways.Delete.form.delete.successful": "Gateway Label deleted successfully",
  "AdminPages.Gateways.List.addButtonProps.title": "Add Gateway Label",
  "AdminPages.Gateways.List.addButtonProps.triggerButtonText": "Add Gateway Label",
  "AdminPages.Gateways.List.empty.content.Gateways": "It is possible to create a Gateway distribution for a group of APIs. In order to group APIs, a label needs to be created and attached to the APIs that need to be in a single group.",
  "AdminPages.Gateways.List.empty.title": "Gateway Labels",
  "AdminPages.Gateways.List.help.link.one": "Create a Gateway label",
  "AdminPages.Gateways.List.help.link.three": "View the Gateway labels",
  "AdminPages.Gateways.List.help.link.two": "Assign the Gateway label to an API",
  "AdminPages.Gateways.List.search.default": "Search Gateway by Name, Description or Host",
  "AdminPages.Gateways.List.title": "Gateway Labels",
  "AdminPages.Gateways.table.header.hosts": "Gateway Host(s)",
  "AdminPages.Gateways.table.header.label.description": "Description",
  "AdminPages.Gateways.table.header.label.name": "Label",
  "AdminPages.KeyManager.Delete.form.delete.confirmation.message": "Are you sure you want to delete this KeyManager ?",
  "AdminPages.KeyManagers.Delete.form.delete.successful": "KeyManager deleted successfully",
  "AdminPages.KeyManagers.List.empty.content.keymanagers": "It is possible to register an OAuth Provider.",
  "Apis.Shared.AdminRootErrorBoundary.refresh": "Refresh",
  "Apis.Shared.AdminRootErrorBoundary.refresh.or.try.again.message": "You may refresh the page now or try again later",
  "Apis.Shared.AdminRootErrorBoundary.something.went.wrong.while.rendering.button": "Something went wrong while rendering the",
  "Apis.Shared.AdminRootErrorBoundary.something.went.wrong.while.rendering.heading": "Something went wrong while rendering the",
  "Apis.Shared.AppErrorBoundary.something.went.wrong": "Something went wrong",
  "Apis.Shared.ConfirmDialog.are.you.sure": "Are you sure?",
  "Apis.Shared.ConfirmDialog.cancel": "Cancel",
  "Apis.Shared.ConfirmDialog.ok": "OK",
  "Apis.Shared.ConfirmDialog.please.confirm": "Please Confirm",
  "Apis.Shared.RedirectToLogin.you.will.be.redirected.to": "You will be redirected to {page}",
  "Base.Errors.ResourceNotFound.api.list": "API List",
  "Base.Errors.ResourceNotFound.api.product.list": "API Product List",
  "Base.Errors.ResourceNotFound.more.links": "You may check the links below",
  "Base.Errors.ResourceNotfound.default_body": "The page you are looking for is not available",
  "Base.Errors.ResourceNotfound.default_tittle": "Page Not Found",
  "Base.Footer.Footer.product_details": "WSO2 API-M v3.2.0 | © 2020 WSO2 Inc",
  "Base.Header.avatar.Avatar.logout": "Logout",
  "Base.RouteMenuMapping.advanced.throttling.policies": "Advanced Policies",
  "Base.RouteMenuMapping.advanced.throttling.policies.Adding": "Add Advanced Policy",
  "Base.RouteMenuMapping.advanced.throttling.policies.Editing": "Edit Advanced Policy",
  "Base.RouteMenuMapping.api.categories": "API Categories",
  "Base.RouteMenuMapping.application.creation": "Application Creation",
  "Base.RouteMenuMapping.application.throttling.policies": "Application Policies",
  "Base.RouteMenuMapping.applications": "Applications",
  "Base.RouteMenuMapping.blacklisted.items": "Deny Policies",
  "Base.RouteMenuMapping.bot.detection": "Bot Detection",
  "Base.RouteMenuMapping.bot.detection.data": "Bot Detection Data",
  "Base.RouteMenuMapping.configure.emails": "Configure Emails",
  "Base.RouteMenuMapping.custom.throttling.policies": "Custom Policies",
  "Base.RouteMenuMapping.custom.throttling.policies.items.Adding": "Add Custom Policy",
  "Base.RouteMenuMapping.custom.throttling.policies.items.Editing": "Edit Custom Policy",
  "Base.RouteMenuMapping.dashboard": "Dashboard",
  "Base.RouteMenuMapping.gateways": "Gateways",
  "Base.RouteMenuMapping.keymanagers": "Key Managers",
  "Base.RouteMenuMapping.keymanagers.items.Adding": "Add KeyManager",
  "Base.RouteMenuMapping.keymanagers.items.Editing": "Edit KeyManager",
  "Base.RouteMenuMapping.manage.alerts": "Manage Alerts",
  "Base.RouteMenuMapping.role.permissions": "Role Permissions",
  "Base.RouteMenuMapping.settings": "Settings",
  "Base.RouteMenuMapping.subscription.creation": "Subscription Creation",
  "Base.RouteMenuMapping.subscription.throttling.policies": "Subscription Policies",
  "Base.RouteMenuMapping.subscription.throttling.policies.Adding": "Add Subscription Policy",
  "Base.RouteMenuMapping.subscription.throttling.policies.Editing": "Edit Subscription Policy",
  "Base.RouteMenuMapping.subscription.update": "Subscription Update",
  "Base.RouteMenuMapping.tasks": "Tasks",
  "Base.RouteMenuMapping.tenant.theme": "Tenant Theme",
  "Base.RouteMenuMapping.throttling.policies": "Rate Limiting Policies",
  "Base.RouteMenuMapping.user.creation": "User Creation",
  "Claim.Mapping.already.exists": "Claim Mapping already exists.",
  "Dashboard.apiCategories.apiCategoriesListing.card.title": "API Categories",
  "Dashboard.apiCategories.apiCategoriesListing.card.view.all.link.text": "View All",
  "Dashboard.apiCategories.apiCategoriesListing.no.description": "No description available",
  "Dashboard.apiCategories.noApiCategories.card.add.new.link.text": "Add new Category",
  "Dashboard.apiCategories.noApiCategories.card.description": "API categories allow API providers to categorize APIs\n                        that have similar attributes. When a categorized API\n                        gets published to the Developer Portal, its categories\n                        appear as clickable links to the API consumers.\n                        The API consumers can use the available API categories\n                        to quickly jump to a category of interest. {learnMoreLink}",
  "Dashboard.apiCategories.noApiCategories.card.title": "API Category based grouping",
  "Dashboard.rateLimiting.card.advancedPolicies.description": "Control access per API or API resource using advanced rules",
  "Dashboard.rateLimiting.card.advancedPolicies.name": "Advanced Policies",
  "Dashboard.rateLimiting.card.applicationPolicies.description": "Applicable per access token generated for an application",
  "Dashboard.rateLimiting.card.applicationPolicies.name": "Application Policies",
  "Dashboard.rateLimiting.card.customPolicies.description": "Allows system administrators to define dynamic rules for specific use cases, which are applied globally across all tenants.",
  "Dashboard.rateLimiting.card.customPolicies.name": "Custom Policies",
  "Dashboard.rateLimiting.card.subscriptionPolicies.description": "Control access per Subscription",
  "Dashboard.rateLimiting.card.subscriptionPolicies.name": "Subscription Policies",
  "Dashboard.rateLimiting.card.title": "Rate Limiting",
  "Dashboard.tasksWorkflow.card.task.update.failed": "Task status updated failed",
  "Dashboard.tasksWorkflow.card.task.update.success": "Task status updated successfully",
  "Dashboard.tasksWorkflow.compactTasks.apiStateChange.name": "API State Change",
  "Dashboard.tasksWorkflow.compactTasks.applicationCreation.name": "Application Creation",
  "Dashboard.tasksWorkflow.compactTasks.applicationRegistration.name": "Application Registration",
  "Dashboard.tasksWorkflow.compactTasks.card.numberOfPendingTasks.postFix.plural": "Pending tasks",
  "Dashboard.tasksWorkflow.compactTasks.card.numberOfPendingTasks.postFix.singular": "Pending task",
  "Dashboard.tasksWorkflow.compactTasks.card.title": "Pending tasks",
  "Dashboard.tasksWorkflow.compactTasks.subscriptionCreation.name": "Subscription Creation",
  "Dashboard.tasksWorkflow.compactTasks.subscriptionUpdate.name": "Subscription Update",
  "Dashboard.tasksWorkflow.compactTasks.userCreation.name": "User Creation",
  "Dashboard.tasksWorkflow.fewerTasks.card.application.createdBy.prefix": "Application Created by",
  "Dashboard.tasksWorkflow.fewerTasks.card.registration.creation.keyType.Production": "Production",
  "Dashboard.tasksWorkflow.fewerTasks.card.registration.creation.keyType.SandBox": "SandBox",
  "Dashboard.tasksWorkflow.fewerTasks.card.registration.key.generated.by": "Key generated by",
  "Dashboard.tasksWorkflow.fewerTasks.card.stateChangeAction.prefix": "State Change Action:",
  "Dashboard.tasksWorkflow.fewerTasks.card.subscription.subscribedBy": "Subscribed by",
  "Dashboard.tasksWorkflow.fewerTasks.card.task.accept": "Accept",
  "Dashboard.tasksWorkflow.fewerTasks.card.task.reject": "Reject",
  "Dashboard.tasksWorkflow.fewerTasks.card.title": "Pending tasks",
  "Dashboard.tasksWorkflow.fewerTasks.card.user.createdOn.prefix": "User Created on",
  "Dashboard.tasksWorkflow.noTasks.card.description": "Manage workflow tasks, increase productivity and enhance\n                        competitiveness by enabling developers to easily deploy\n                        business processes and models.",
  "Dashboard.tasksWorkflow.noTasks.card.title": "All the pending tasks completed",
  "KeyManager.Claim.Helper.text": "Add Claim Mappings",
  "KeyManager.Connector.Configuration.Helper.text": "Add KeyManager Connector Configurations",
  "KeyManager.KeyValidation.CUSTOM": "CUSTOM",
  "KeyManager.KeyValidation.JWT": "JWT",
  "KeyManager.KeyValidation.REFERENCE": "REFERENCE",
  "KeyManager.KeyValidation.token.validation.type": "Type",
  "KeyManager.add.success": "Key Manager added successfully.",
  "KeyManager.add.success.msg": "- Key Manager added successfully.",
  "KeyManager.edit.success": "- Key Manager edited successfully.",
  "KeyManagers.AddEditKeyManager.advanced": "Advanced Configurations",
  "KeyManagers.AddEditKeyManager.advanced.description": "Advanced options for the Key Manager",
  "KeyManagers.AddEditKeyManager.cetificate": "Certificates",
  "KeyManagers.AddEditKeyManager.cetificate.description": "Upload or provide the certificate inline.",
  "KeyManagers.AddEditKeyManager.claim.mappings.hidden.help": "Expand to add edit claim mappings",
  "KeyManagers.AddEditKeyManager.claim.mappings.title": "Claim Mappings",
  "KeyManagers.AddEditKeyManager.claim.uris": "Claim URIs",
  "KeyManagers.AddEditKeyManager.claim.uris.description": "Provide claim URIs for consumer key and scopes.",
  "KeyManagers.AddEditKeyManager.connector.configurations": "Connector Configurations",
  "KeyManagers.AddEditKeyManager.connector.configurations.description": "Provide connection params for the selected Key Manager.",
  "KeyManagers.AddEditKeyManager.endpoints": "Key Manager Endpoints",
  "KeyManagers.AddEditKeyManager.endpoints.description": "Configure endpoints such as client registration endpoint, the token endpoint for this Key Manager.",
  "KeyManagers.AddEditKeyManager.form.Issuer": "Issuer",
  "KeyManagers.AddEditKeyManager.form.add": "Add",
  "KeyManagers.AddEditKeyManager.form.authorizeEndpoint": "Authorize Endpoint",
  "KeyManagers.AddEditKeyManager.form.authorizeEndpoint.help": "E.g., https://localhost:9443/oauth2/userinfo",
  "KeyManagers.AddEditKeyManager.form.cancel": "Cancel",
  "KeyManagers.AddEditKeyManager.form.claim.help": "Type Available Grant Types and press Enter/Return to add them.",
  "KeyManagers.AddEditKeyManager.form.clientRegistrationEndpoint": "Client Registration Endpoint",
  "KeyManagers.AddEditKeyManager.form.clientRegistrationEndpoint.help": "E.g., https://localhost:9444/client-registration/v0.17/register",
  "KeyManagers.AddEditKeyManager.form.consumerKeyClaim.help": "Provide consumer key claim URIs.",
  "KeyManagers.AddEditKeyManager.form.description": "Description",
  "KeyManagers.AddEditKeyManager.form.description.help": "Description of the Key Manager.",
  "KeyManagers.AddEditKeyManager.form.displayName.help": "Display Name of the Key Manager.",
  "KeyManagers.AddEditKeyManager.form.has.errors": "One or more fields contain errors.",
  "KeyManagers.AddEditKeyManager.form.import.button": "Import",
  "KeyManagers.AddEditKeyManager.form.introspectionEndpoint": "Introspection Endpoint",
  "KeyManagers.AddEditKeyManager.form.introspectionEndpoint.help": "E.g., https://localhost:9443/oauth2/introspect",
  "KeyManagers.AddEditKeyManager.form.issuer.help": "E.g.,: https://localhost:9443/oauth2/token",
  "KeyManagers.AddEditKeyManager.form.name": "Name",
  "KeyManagers.AddEditKeyManager.form.name.help": "Name of the Key Manager.",
  "KeyManagers.AddEditKeyManager.form.revokeEndpoint": "Revoke Endpoint",
  "KeyManagers.AddEditKeyManager.form.revokeEndpoint.help": "E.g., https://localhost:9443/oauth2/revoke",
  "KeyManagers.AddEditKeyManager.form.scopeManagementEndpoint": "Scope Management Endpoint",
  "KeyManagers.AddEditKeyManager.form.scopeManagementEndpoint.help": "E.g, https://localhost:9443/oauth2/scope",
  "KeyManagers.AddEditKeyManager.form.scopesClaim.help": "Provide scope claim URI.",
  "KeyManagers.AddEditKeyManager.form.tokenEndpoint": "Token Endpoint",
  "KeyManagers.AddEditKeyManager.form.tokenEndpoint.help": "E.g., https://localhost:9443/oauth2/token",
  "KeyManagers.AddEditKeyManager.form.type.help": "Select Key Manager Type",
  "KeyManagers.AddEditKeyManager.form.update.btn": "Update",
  "KeyManagers.AddEditKeyManager.form.userInfoEndpoint": "UserInfo Endpoint",
  "KeyManagers.AddEditKeyManager.form.userInfoEndpoint.help": "E.g., https://localhost:9443/oauth2/userInfo",
  "KeyManagers.AddEditKeyManager.form.wellKnownUrl": "Well-known URL",
  "KeyManagers.AddEditKeyManager.form.wellKnownUrl.help": "Provide a well-known URL and discover the Key Manager information.",
  "KeyManagers.AddEditKeyManager.general.details": "General Details",
  "KeyManagers.AddEditKeyManager.general.details.description": "Provide name and description of the Key Manager.",
  "KeyManagers.AddEditKeyManager.grant.types": "Grant Types",
  "KeyManagers.AddEditKeyManager.grant.types.description": "Add the supported grant types by the Key Manager. Press enter to add each grant.",
  "KeyManagers.AddEditKeyManager.importing.message": "Importing...",
  "KeyManagers.AddEditKeyManager.is.empty.error": "is empty",
  "KeyManagers.AddEditKeyManager.is.empty.error.key.config": "Required field is empty.",
  "KeyManagers.AddEditKeyManager.selfvalidate": "Self validate JWT",
  "KeyManagers.AddEditKeyManager.space.error": "Key Manager name contains white spaces.",
  "KeyManagers.AddEditKeyManager.title.edit": "Key Manager - Edit",
  "KeyManagers.AddEditKeyManager.title.new": "Key Manager - Create new",
  "KeyManagers.AddEditKeyManager.token.handling.options": "Token Handling Options",
  "KeyManagers.AddEditKeyManager.token.validation.method": "Token Validation Method",
  "KeyManagers.AddEditKeyManager.useIntrospect": "Use introspect",
  "KeyManagers.Cetificates.browse.files.to.upload": "Browse File to Upload",
  "KeyManagers.Cetificates.drag.and.drop.message": "Drag and Drop files here {break} or {break}",
  "KeyManagers.Cetificates.file.error": "Error reading file",
  "KeyManagers.Cetificates.jwks.url": "URL",
  "KeyManagers.Cetificates.override.message": "Upload new file to override the current certificate",
  "KeyManagers.Cetificates.paste.label": "Paste the content of the PEM file",
  "KeyManagers.ImportConfig.dialog.btn.import": "Import",
  "KeyManagers.ImportConfig.dialog.tilte.add.new": "Import Key Manager Configuration",
  "KeyManagers.ImportConfig.dialog.trigger.import": "Import",
  "KeyManagers.ImportConfig.form.url": "Url",
  "KeyManagers.ImportConfig.form.url.help": "Provide Url",
  "KeyManagers.ListKeyManagers.List.addButtonProps.title": "Add KeyManager",
  "KeyManagers.ListKeyManagers.List.addButtonProps.triggerButtonText": "Add KeyManager",
  "KeyManagers.ListKeyManagers.List.title": "Key Managers",
  "KeyManagers.ListKeyManagers.addButtonProps.triggerButtonText": "Add KeyManager",
  "KeyManagers.ListKeyManagers.edit.success": "Key Manager updated successfully.",
  "KeyManagers.ListKeyManagers.empty.title": "Key Managers",
  "KeyManagers.ListKeyManagers.table.header.label.description": "Description",
  "KeyManagers.ListKeyManagers.table.header.label.name": "Name",
  "KeyManagers.ListKeyManagers.table.header.label.type": "Type",
  "Keymanager.Claim.Action": "Action",
  "Keymanager.KeyValidation.Action": "Action",
  "Keymanager.KeyValidation.ClaimKey": "Claim Key",
  "Keymanager.KeyValidation.ClaimValue.Regex": "Claim Value Regex",
  "Keymanager.Local.Claim": "Local Claim",
  "Keymanager.Local.Claim.remove": "Remove",
  "Keymanager.Remote.Claim": "Remote Claim",
  "LoginDenied.logout": "Logout",
  "LoginDenied.message": "The server could not verify that you are authorized to access the requested resource.",
  "LoginDenied.retry": "Retry",
  "LoginDenied.title": "Error 403 : Forbidden",
  "Manage.Alerts.abnormal.backend.time.description": "This alert gets triggered if the backend time corresponding to a particular API is higher than the predefined value. These alerts could be treated as an indication of a slow backend. In technical terms, if the backend time of a particular API of a tenant lies outside the predefined value, an alert will be sent out.",
  "Manage.Alerts.abnormal.backend.time.name": "Abnormal Backend Time",
  "Manage.Alerts.abnormal.request.access.description": "This alert is triggered if there is a change in the resource access pattern of a user of a particular application. These alerts could be treated as an indication of a suspicious activity by a user over your application.",
  "Manage.Alerts.abnormal.request.access.name": "Abnormal Resource Access",
  "Manage.Alerts.abnormal.request.count.description": "This alert is triggered if there is a sudden spike the request count within a period of one minute by default for a particular API for an application. These alerts could be treated as an indication of a possible high traffic, suspicious activity, possible malfunction of the client application, etc.",
  "Manage.Alerts.abnormal.request.count.name": "Abnormal Request Count",
  "Manage.Alerts.abnormal.response.time.description": "This alert gets triggered if the response time of a particular API is higher than the predefined value. These alerts could be treated as an indication of a slow WSO2 API Manager runtime or a slow backend.",
  "Manage.Alerts.abnormal.response.time.name": "Abnormal Response Time",
  "Manage.Alerts.analytics.disabled.empty.content": "A system administrator is allowed to select one or more alert types to subscribe for, as well as specify a list of email addresses to which the alerts should be sent. {breakingLine}{breakingLine}Please enable Analytics for subscribing to Alerts",
  "Manage.Alerts.analytics.disabled.empty.title": "Analytics disabled!",
  "Manage.Alerts.cancel.btn": "Cancel",
  "Manage.Alerts.confirm.btn": "Unsubscribe All",
  "Manage.Alerts.health.availability.description": "This alert gets triggered if at least one of the two cases below are satisfied; Response time of an API greater than Threshold response time value defined for that particular API or Response status code is in between 500 and 600 (By Default)",
  "Manage.Alerts.health.availability.name": "Health Availability",
  "Manage.Alerts.help.link.one": "Subscribe to alerts",
  "Manage.Alerts.loading.error.msg": "Error occurred while loading alerts",
  "Manage.Alerts.subscribe.error.msg": "Error occurred while subscribing to alerts.",
  "Manage.Alerts.subscribe.success.msg": "Subscribed to Alerts Successfully.",
  "Manage.Alerts.subscribe.to.alerts.subheading": "Select the Alert types to subscribe/ unsubscribe and click Save.",
  "Manage.Alerts.tier.crossing.description": "This alert is triggered if at least one of the two cases below are satisfied; if a particular application gets throttled out for hitting the subscribed tier limit of that application more than 10 times (by default) within an hour (by default) or if a particular user of an application gets throttled out for hitting the subscribed tier limit of a particular API more than 10 times (by default) within a day (by default)",
  "Manage.Alerts.tier.crossing.name": "Tier Crossing",
  "Manage.Alerts.title": "Manage Alert Subscriptions",
  "Manage.Alerts.unseen.source.ip.address.description": "This alert is triggered if there is either a change in the request source IP for a particular application by a user or if the request is from an IP used before a time period of 30 days (default). These alerts could be treated as an indication of a suspicious activity by a user over an application.",
  "Manage.Alerts.unseen.source.ip.address.name": "Unseen Source IP Access",
  "Manage.Alerts.unsubscribe.confirm.dialog.heading": "Confirm unsubscription from All Alerts",
  "Manage.Alerts.unsubscribe.confirm.dialog.message": "This will remove all the existing alert subscriptions and emails. This action cannot be undone.",
  "Manage.Alerts.unsubscribe.error.msg": "Error occurred while unsubscribing.",
  "Manage.Alerts.unsubscribe.success.msg": "Unsubscribed from all alerts successfully.",
  "RolePermissions.ListRoles.permission.denied.content": "You dont have enough permission to view Role Permissions. Please contact the site administrator.",
  "RolePermissions.ListRoles.permission.denied.title": "Permission Denied",
  "RolePermissions.ListRoles.title.role.permissions": "Role Permissions",
  "TenantTheme.Upload.Theme.browse.files.to.upload": "Browse File to Upload",
  "TenantTheme.Upload.Theme.button.upload": "Upload",
  "TenantTheme.Upload.Theme.download.error": "Error downloading Tenant theme ZIP file",
  "TenantTheme.Upload.Theme.drag.and.drop.message": "Drag & Drop files here {break} or {break}",
  "TenantTheme.Upload.Theme.help.link.one": "Tenant theming",
  "TenantTheme.Upload.Theme.info.message": "The theme should be a zip file containing CSS and images compliant with the",
  "TenantTheme.Upload.Theme.page.heading": "Manage Tenant Theme",
  "TenantTheme.Upload.Theme.upload.files": "Upload/Download Theme",
  "TenantTheme.Upload.Theme.upload.successful": "Theme uploaded successfully",
  "TenantTheme.Upload.Theme.warning.message": "Zip file contains unsupported files. Upload only supported files.",
  "Throttling.Advanced.AddEdit.ConditionalGroups.form.description.help": "Description of this group",
  "Throttling.Advanced.AddEdit.add.conditional.group": "Conditional groups",
  "Throttling.Advanced.AddEdit.add.conditional.group.add": "Add Conditional Group",
  "Throttling.Advanced.AddEdit.add.success": "Policy Added Successfully",
  "Throttling.Advanced.AddEdit.conditional.group.description": "To add throttling limits with different parameters base on IP, Header, Query Param, and JWT Claim conditions, click Add Conditional Group.",
  "Throttling.Advanced.AddEdit.default.limits": "Default Limits",
  "Throttling.Advanced.AddEdit.default.limits.description": "Request Count and Request Bandwidth are the two options for default limit. You can use the option according to your requirement.",
  "Throttling.Advanced.AddEdit.edit.success": "Policy Updated Successfully",
  "Throttling.Advanced.AddEdit.empty.error": "contains white spaces.",
  "Throttling.Advanced.AddEdit.form.add.btn": "Add",
  "Throttling.Advanced.AddEdit.form.bandwidth.allowed.help": "Bandwidth allowed",
  "Throttling.Advanced.AddEdit.form.cancel": "Cancel",
  "Throttling.Advanced.AddEdit.form.dataAmount.label": "Data Bandwidth",
  "Throttling.Advanced.AddEdit.form.description": "Description",
  "Throttling.Advanced.AddEdit.form.description.help": "Description of the throttle policy.",
  "Throttling.Advanced.AddEdit.form.has.errors": "One or more fields contain errors.",
  "Throttling.Advanced.AddEdit.form.name.help": "Name of the throttle policy.",
  "Throttling.Advanced.AddEdit.form.policyName": "Name",
  "Throttling.Advanced.AddEdit.form.requestCount.label": "Request Count",
  "Throttling.Advanced.AddEdit.form.timeUnit.day": "Day(s)",
  "Throttling.Advanced.AddEdit.form.timeUnit.hour": "Hour(s)",
  "Throttling.Advanced.AddEdit.form.timeUnit.minute": "Minute(s)",
  "Throttling.Advanced.AddEdit.form.timeUnit.month": "Month(s)",
  "Throttling.Advanced.AddEdit.form.timeUnit.second": "Second(s)",
  "Throttling.Advanced.AddEdit.form.timeUnit.year": "Year(s)",
  "Throttling.Advanced.AddEdit.form.unit.time.help": "Time configuration",
  "Throttling.Advanced.AddEdit.form.unit.time.label": "Unit Time",
  "Throttling.Advanced.AddEdit.form.update.btn": "Update",
  "Throttling.Advanced.AddEdit.general.details": "General Details",
  "Throttling.Advanced.AddEdit.general.details.description": "Provide name and description of the policy.The policy can be refered from the name.",
  "Throttling.Advanced.AddEdit.is.empty.error": "is empty",
  "Throttling.Advanced.AddEdit.policy.name.too.long.error.msg": "Throttling policy name is too long",
  "Throttling.Advanced.AddEdit.title.edit": "Advance Rate Limiting Policy - Edit",
  "Throttling.Advanced.AddEdit.title.new": "Advanced Rate Limiting Policy - Create new",
  "Throttling.Advanced.AddEditConditionPolicy.dialog.btn.save": "Save",
  "Throttling.Advanced.AddEditConditionPolicy.dialog.tilte.add.new": "Add New",
  "Throttling.Advanced.AddEditConditionPolicy.dialog.tilte.edit": "Edit IP Condition Policy",
  "Throttling.Advanced.AddEditConditionPolicy.dialog.trigger.add": "Add",
  "Throttling.Advanced.AddEditConditionPolicy.form.name": "Name",
  "Throttling.Advanced.AddEditConditionPolicy.form.name.help": "Provide Name",
  "Throttling.Advanced.AddEditConditionPolicy.form.value": "Value",
  "Throttling.Advanced.AddEditConditionPolicy.form.value.help": "Provide Value",
  "Throttling.Advanced.AddEditConditionPolicyIP.dialog.btn.save": "Save",
  "Throttling.Advanced.AddEditConditionPolicyIP.dialog.tilte.add.new": "Add New IP Condition Policy",
  "Throttling.Advanced.AddEditConditionPolicyIP.dialog.trigger.add": "Add",
  "Throttling.Advanced.AddEditConditionPolicyIP.form.end.ip": "End IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.form.end.ip.help": "Provide Valid IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.form.specific.ip": "Specific IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.form.specific.ip.help": "Provide Valid IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.form.start.ip": "Start IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.form.start.ip.help": "Provide Valid IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.ip.condition.type": "IP Condition Type",
  "Throttling.Advanced.AddEditConditionPolicyIP.ip.range": "IP Range",
  "Throttling.Advanced.AddEditConditionPolicyIP.is.empty.error": "is empty",
  "Throttling.Advanced.AddEditConditionPolicyIP.specific.ip": "Specific IP",
  "Throttling.Advanced.AddEditConditionPolicyIP.valid.ip.address.error": "Invalid IP Addresss",
  "Throttling.Advanced.AddEditConditionPolicyIP.valid.ip.range.error": "Invalid IP Range",
  "Throttling.Advanced.AddEditExecution.default.limit.option": "Default Limit Option",
  "Throttling.Advanced.ConditionalGroup.condition.policies": "Condition Policies",
  "Throttling.Advanced.ConditionalGroup.execution.policy": "Execution Policy",
  "Throttling.Advanced.ConditionalGroup.from": "From:",
  "Throttling.Advanced.ConditionalGroup.header": "Header Condition Policy",
  "Throttling.Advanced.ConditionalGroup.header.help": "This configuration is used to throttle based on Headers.",
  "Throttling.Advanced.ConditionalGroup.header.name": "Name",
  "Throttling.Advanced.ConditionalGroup.header.value": "Value",
  "Throttling.Advanced.ConditionalGroup.invert.condition": "Invert Condition",
  "Throttling.Advanced.ConditionalGroup.ip": "IP Condition Policy",
  "Throttling.Advanced.ConditionalGroup.ip.header.name": "IP Condition Type",
  "Throttling.Advanced.ConditionalGroup.ip.header.value": "IP Address",
  "Throttling.Advanced.ConditionalGroup.ip.help": "This configuration is used to throttle by IP address.",
  "Throttling.Advanced.ConditionalGroup.ip.iprange": "IP Range",
  "Throttling.Advanced.ConditionalGroup.ip.specific": "Specific IP",
  "Throttling.Advanced.ConditionalGroup.jwt": "JWT Condition Policy",
  "Throttling.Advanced.ConditionalGroup.jwt.help": "This configuration is used to define JWT claims conditions",
  "Throttling.Advanced.ConditionalGroup.query.param": "Query Param Condition Policy",
  "Throttling.Advanced.ConditionalGroup.query.param.help": "This configuration is used to throttle based on query parameters.",
  "Throttling.Advanced.ConditionalGroup.to": "To:",
  "Throttling.Advanced.ConditionalGroups.form.description": "Description",
  "Throttling.Advanced.Delete.confirm.text": "Policy deletion might affect current subscriptions. Are you sure you want to delete this policy?",
  "Throttling.Advanced.Delete.ip.iprange": "IP Range",
  "Throttling.Advanced.Delete.ip.specific": "Specific IP",
  "Throttling.Advanced.Delete.save.text": "Delete",
  "Throttling.Advanced.Delete.success": "Policy Deleted Successfully",
  "Throttling.Advanced.Delete.title": "Delete Policy",
  "Throttling.Advanced.Delete.will.be.deleted": "will be deleted.",
  "Throttling.Advanced.List.add.new.polcy": "Add New Policy",
  "Throttling.Advanced.List.addButtonProps.title": "Add Policy",
  "Throttling.Advanced.List.addButtonProps.triggerButtonText": "Add Policy",
  "Throttling.Advanced.List.empty.content": "It is possible to create a Microgateway distribution for a group of APIs. In order to group APIs, a label needs to be created and attached to the APIs that need to be in a single group.",
  "Throttling.Advanced.List.empty.title": "Advanced Throttling Policies",
  "Throttling.Advanced.List.help.link.one": "Introducing Rate Limiting Use-Cases",
  "Throttling.Advanced.List.help.link.two": "Adding a new advanced rate limiting policy",
  "Throttling.Advanced.List.search.default": "Search by Advanced Policy name",
  "Throttling.Advanced.List.title.main": "Advanced Rate Limiting Policies",
  "Throttling.Application.Policy..List.search.default": "Search by Application Policy name",
  "Throttling.Application.Policy.List.addButtonProps.title": "Add Policy",
  "Throttling.Application.Policy.List.addButtonProps.triggerButtonText": "Add Policy",
  "Throttling.Application.Policy.List.empty.content.application.policies": "Application-level throttling policies are applicable per access token generated for an application.",
  "Throttling.Application.Policy.List.empty.title.application.policies": "Application Policies",
  "Throttling.Application.Policy.List.help.link.one": "Create an Application Rate Limiting Policy",
  "Throttling.Application.Policy.List.help.link.two": "Setting an Application Rate Limiting Policy",
  "Throttling.Application.Policy.policy.add.success": "Application Rate Limiting Policy added successfully.",
  "Throttling.Application.Policy.policy.data.amount.empty": "Data Amount is Empty",
  "Throttling.Application.Policy.policy.delete.error": "Application Rate Limiting Policy could not be deleted.",
  "Throttling.Application.Policy.policy.delete.success": "Application Rate Limiting Policy successfully deleted.",
  "Throttling.Application.Policy.policy.dialog.delete.error": "Application Rate Limiting Policy will be deleted.",
  "Throttling.Application.Policy.policy.edit.success": "Application Rate Limiting Policy edited successfully.",
  "Throttling.Application.Policy.policy.name.empty": "Name is Empty",
  "Throttling.Application.Policy.policy.name.invalid.character": "Name contains one or more illegal characters",
  "Throttling.Application.Policy.policy.name.space": "Name contains spaces",
  "Throttling.Application.Policy.policy.name.too.long": "Application policy name is too long",
  "Throttling.Application.Policy.policy.request.count.empty": "Request Count is Empty",
  "Throttling.Application.Policy.policy.unit.time.empty": "Unit Time is Empty",
  "Throttling.Application.Policy.search.default": "Application Rate Limiting Policies",
  "Throttling.Blacklist.Policy.List.addButtonProps.title": "Select Item to Deny",
  "Throttling.Blacklist.Policy.List.addButtonProps.triggerButtonText": "Add Policy",
  "Throttling.Blacklist.Policy.List.empty.content.blacklist.policies and abuse by": "Denying requests from malicious entities helps you to keep your servers safe",
  "Throttling.Blacklist.Policy.List.empty.title.blacklist.policies": "Deny Policies",
  "Throttling.Blacklist.Policy.List.help.link.one": "Denying requests",
  "Throttling.Blacklist.Policy.List.search.default": "Search by Deny Policy name",
  "Throttling.Blacklist.Policy.policy.add.success": "Deny Policy added successfully.",
  "Throttling.Blacklist.Policy.policy.delete.error": "Deny Policy could not be deleted.",
  "Throttling.Blacklist.Policy.policy.delete.success": "Deny Policy successfully deleted.",
  "Throttling.Blacklist.Policy.policy.dialog.delete.error": "Deny Policy will be deleted.",
  "Throttling.Blacklist.Policy.policy.update.success": "Condition status has been updated successfully.",
  "Throttling.Blacklist.Policy.search.default": "Deny Policies",
  "Throttling.Custom.AddEdit.form.add": "Add",
  "Throttling.Custom.AddEdit.form.cancel": "Cancel",
  "Throttling.Custom.AddEdit.title.add": "Custom Rate Limiting Policy - Define Policy",
  "Throttling.Custom.AddEdit.title.edit": "Custom Rate Limiting Policy - Edit",
  "Throttling.Custom.List.add.new.polcy": "Define Policy",
  "Throttling.Custom.Policy.List.addButtonProps.title": "Define Custom Policy",
  "Throttling.Custom.Policy.List.addButtonProps.triggerButtonText": "Define Policy",
  "Throttling.Custom.Policy.List.empty.content.custom.policies and abuse by": "Custom throttling allows system administrators to define dynamic rules for specific use cases, which are applied globally across all tenants.",
  "Throttling.Custom.Policy.List.empty.title.custom.policies": "Custom Policies",
  "Throttling.Custom.Policy.List.help.link.one": "Custom Throttling Policy",
  "Throttling.Custom.Policy.List.search.default": "Search by Custom Policy name",
  "Throttling.Custom.Policy.policy.add.success": "Custom Policy added successfully.",
  "Throttling.Custom.Policy.policy.delete.error": "Custom Policy could not be deleted.",
  "Throttling.Custom.Policy.policy.delete.success": "Custom Policy successfully deleted.",
  "Throttling.Custom.Policy.policy.dialog.delete.error": "Custom Policy will be deleted.",
  "Throttling.Custom.Policy.policy.edit.success": "Custom Policy edited successfully",
  "Throttling.Custom.Policy.policy.invalid.key.template": "Invalid Key Template",
  "Throttling.Custom.Policy.policy.name.empty": "Name is Empty",
  "Throttling.Custom.Policy.policy.name.invalid.character": "Name contains one or more illegal characters",
  "Throttling.Custom.Policy.policy.name.space": "Name contains spaces",
  "Throttling.Custom.Policy.policy.name.too.long.error.msg": "Custom policy name is too long",
  "Throttling.Custom.Policy.search.default": "Custom Rate Limiting Policies",
  "Throttling.Subscription.AddEdit.burst.control.add.description": "Define Burst Control Limits for the subscription policy. This is optional.",
  "Throttling.Subscription.AddEdit.burst.control.limit": "Number of requests for burst control",
  "Throttling.Subscription.AddEdit.burst.control.limits": "Burst Control (Rate Limiting)",
  "Throttling.Subscription.AddEdit.custom.attributes.add.description": "Define custom attributes for the subscription policy.",
  "Throttling.Subscription.AddEdit.form.add": "Save",
  "Throttling.Subscription.AddEdit.form.cancel": "Cancel",
  "Throttling.Subscription.AddEdit.form.dataAmount.name": "Data Bandwidth",
  "Throttling.Subscription.AddEdit.form.description": "Description",
  "Throttling.Subscription.AddEdit.form.description.help": "Description of the rate limiting policy",
  "Throttling.Subscription.AddEdit.form.max.complexity": "Max Complexity",
  "Throttling.Subscription.AddEdit.form.max.depth": "Max Depth",
  "Throttling.Subscription.AddEdit.form.name.help": "Name of the rate limiting policy",
  "Throttling.Subscription.AddEdit.form.policyName": "Name",
  "Throttling.Subscription.AddEdit.form.request.rate": "Request Rate",
  "Throttling.Subscription.AddEdit.form.requestCount.count": "Request Count",
  "Throttling.Subscription.AddEdit.form.roles": "Roles",
  "Throttling.Subscription.AddEdit.general.details": "General Details",
  "Throttling.Subscription.AddEdit.general.details.description": "Provide the name and description of the subscription policy.",
  "Throttling.Subscription.AddEdit.graphql.add.description": "Provide the Maximum Complexity and Maximum depth values for GraphQL APIs using this policy.",
  "Throttling.Subscription.AddEdit.permissions.add.description": "Define the permissions for the subscription policy.",
  "Throttling.Subscription.AddEdit.policy.flags.add.description": "Define the billing plan for the subscription policy. Enable stop on quota reach to block invoking an API when the defined quota is reached.",
  "Throttling.Subscription.AddEdit.quota.limits": "Quota Limits",
  "Throttling.Subscription.AddEdit.quota.policies.add.description": "Request Count and Request Bandwidth are the two options for Quota Limit. You can use the option according to your requirement.",
  "Throttling.Subscription.AddEdit.title.add": "Subscription Rate Limiting Policy - Create new",
  "Throttling.Subscription.AddEdit.title.edit": "Subscription Rate Limiting Policy - Edit",
  "Throttling.Subscription.AddEdit.unitTime": "Unit Time",
  "Throttling.Subscription.Billing.Plan": "Billing Plan",
  "Throttling.Subscription.Fixed.Rate": "Fixed Rate",
  "Throttling.Subscription.GraphQL": "GraphQL",
  "Throttling.Subscription.Policy..List.search.default": "Search by Subscription Policy name",
  "Throttling.Subscription.Policy.Flags": "Policy Flags",
  "Throttling.Subscription.Policy.List.addButtonProps.title": "Add Policy",
  "Throttling.Subscription.Policy.List.empty.title.subscription.policies": "Subscription Policies",
  "Throttling.Subscription.Policy.List.help.link.one": "Creating a Subscription Rate Limiting Policy",
  "Throttling.Subscription.Policy.List.help.link.three": "Setting a Subscription Rate Limiting Policy as an API Subscriber",
  "Throttling.Subscription.Policy.List.help.link.two": "Setting a Subscription Rate Limiting Policy as an API Publisher",
  "Throttling.Subscription.Policy.policy.add.success": "Subscription Rate Limiting Policy added successfully.",
  "Throttling.Subscription.Policy.policy.data.amount.empty.error.msg": "Data Bandwidth amount is Empty",
  "Throttling.Subscription.Policy.policy.delete.error": "Subscription Rate Limiting Policy could not be deleted.",
  "Throttling.Subscription.Policy.policy.delete.success": "Subscription Rate Limiting Policy successfully deleted.",
  "Throttling.Subscription.Policy.policy.dialog.delete.error": "Subscription Rate Limiting Policy will be deleted.",
  "Throttling.Subscription.Policy.policy.edit.success": "Subscription Rate Limiting Policy updated successfully.",
  "Throttling.Subscription.Policy.policy.name.empty.error.msg": "Name is Empty",
  "Throttling.Subscription.Policy.policy.name.invalid.character.error.msg": "Name contains one or more illegal characters",
  "Throttling.Subscription.Policy.policy.name.space.error.msg": "Name contains spaces",
  "Throttling.Subscription.Policy.policy.name.too.long.error.msg": "Subscription policy name is too long",
  "Throttling.Subscription.Policy.policy.request.count.empty.error.msg": "Request Count is Empty",
  "Throttling.Subscription.Policy.policy.unit.time.empty.error.msg": "Unit Time is Empty",
  "Throttling.Subscription.Policy.search.default": "Subscription Rate Limiting Policies",
  "Throttling.Subscription.Properties.Properties.show.add.property.property.name": "Name",
  "Throttling.Subscription.Properties.property.value": "Value",
  "Throttling.Subscription.attribute.delete.tooltip": "Delete",
  "Throttling.Subscription.billing.cycle": "Billing Cycle",
  "Throttling.Subscription.currency": "Currency",
  "Throttling.Subscription.custom.attributes": "Custom Attributes",
  "Throttling.Subscription.custom.attributes.add": "Add Custom Attribute",
  "Throttling.Subscription.dynamic.usage": "Price Per Request",
  "Throttling.Subscription.dynamic.usage.tooltip": "Price per request for the given billing cycle in the given currency",
  "Throttling.Subscription.enter.permission.allowed": "This policy is \"Allowed\" for above roles.",
  "Throttling.Subscription.enter.permission.denied": "This policy is \"Denied\" for above roles.",
  "Throttling.Subscription.enter.role.separation.help.text": "Use comma to seperate roles.",
  "Throttling.Subscription.fixed.rate.tooltip": "Fixed rate for the given billing cycle",
  "Throttling.Subscription.monetization.plan": "Monetization Plan",
  "Throttling.Subscription.monetization.plan.tooltip": "Monetization category type",
  "Throttling.Subscription.permissions": "Permissions",
  "Throttling.Subscription.stop.quota.reach": "Stop On Quota Reach",
  "Throttling.Subsription.Policy.List.empty.content.subscription.policies": "Subscription-level throttling policies are applicable per access token generated for an application.",
  "UnexpectedError.logout": "Logout",
  "UnexpectedError.message": "Error occurred due to invalid request",
  "UnexpectedError.title": "Internal Server Error",
  "Workflow.APIStateChange.List.empty.content.apistatechange": "There are no pending workflow requests for API state change.",
  "Workflow.APIStateChange.List.empty.title.apistatechange": "API State Change",
  "Workflow.APIStateChange.apicall.has.errors": "Unable to get workflow pending requests for API State Change",
  "Workflow.APIStateChange.fetch.has.errors": "Unable to fetch data.",
  "Workflow.APIStateChange.table.button.approve": "Approve",
  "Workflow.APIStateChange.table.button.reject": "Reject",
  "Workflow.APIStateChange.table.header.APIName": "API",
  "Workflow.APIStateChange.table.header.Action": "Action",
  "Workflow.APIStateChange.table.header.ApiProvider": "Created by",
  "Workflow.APIStateChange.table.header.CurrentState": "Current State",
  "Workflow.APIStateChange.table.header.Description": "Description",
  "Workflow.APIStateChange.table.header.RequestState": "Request State",
  "Workflow.APIStateChange.title.apistatechange": "API State Change - Approval Tasks",
  "Workflow.APIStateChange.update.success": "Workflow status is updated successfully.",
  "Workflow.APIStateChange.updateStatus.has.errors": "Unable to complete API state change approve/reject process.",
  "Workflow.APIStatechange.help.link.one": "Create a API State change approval workflow request",
  "Workflow.ApiStateChange.permission.denied.content": "You dont have enough permission to view API State Change - Approval Tasks. Please contact the site administrator.",
  "Workflow.ApiStateChange.permission.denied.title": "Permission Denied",
  "Workflow.ApplicationCreation.List.empty.content.applicationcreations": "There are no pending workflow requests for application creation.",
  "Workflow.ApplicationCreation.List.empty.title.applicationcreations": "Application Creation",
  "Workflow.ApplicationCreation.apicall.has.errors": "Unable to get workflow pending requests for Application Creation",
  "Workflow.ApplicationCreation.fetch.has.errors": "Unable to fetch data.",
  "Workflow.ApplicationCreation.help.link.one": "Create a Application Creation approval workflow Request",
  "Workflow.ApplicationCreation.permission.denied.content": "You dont have enough permission to view Application Creation - Approval Tasks. Please contact the site administrator.",
  "Workflow.ApplicationCreation.permission.denied.title": "Permission Denied",
  "Workflow.ApplicationCreation.table.button.approve": "Approve",
  "Workflow.ApplicationCreation.table.button.reject": "Reject",
  "Workflow.ApplicationCreation.table.header.Action": "Action",
  "Workflow.ApplicationCreation.table.header.ApplicationTier": "Throttling Policy",
  "Workflow.ApplicationCreation.table.header.applicationName": "Application",
  "Workflow.ApplicationCreation.table.header.description": "Description",
  "Workflow.ApplicationCreation.table.header.userName": "Created by",
  "Workflow.ApplicationCreation.title.applicationcreation": "Application Creation - Approval Tasks",
  "Workflow.ApplicationCreation.update.success": "Workflow status is updated successfully",
  "Workflow.ApplicationCreation.updateStatus.has.errors": "Unable to complete subscription creation approve/reject process.",
  "Workflow.ApplicationRegistration.List.empty.content.applicationregistrations": "There are no pending workflow requests for application registration (key generation).",
  "Workflow.ApplicationRegistration.List.empty.title.applicationregistrations": "Application Registration",
  "Workflow.ListUserCreation.search.default": "Search by Tenant name or domain",
  "Workflow.ListUserCreation.title.usercreation": "User Creation - Approval Tasks",
  "Workflow.RegistrationCreation.apicall.has.errors": "Unable to get workflow pending requests for Registration Creation",
  "Workflow.RegistrationCreation.fetch.has.errors": "Unable to fetch data.",
  "Workflow.RegistrationCreation.link.one": "Create a application registration workflow request",
  "Workflow.RegistrationCreation.permission.denied.content": "You dont have enough permission to view Application Registration - Approval Tasks. Please contact the site administrator.",
  "Workflow.RegistrationCreation.permission.denied.title": "Permission Denied",
  "Workflow.RegistrationCreation.search.default": "Search by Application, Throttling Policy, Key type or Creator",
  "Workflow.RegistrationCreation.table.button.approve": "Approve",
  "Workflow.RegistrationCreation.table.button.reject": "Reject",
  "Workflow.RegistrationCreation.table.header.Action": "Action",
  "Workflow.RegistrationCreation.table.header.Application": "Application",
  "Workflow.RegistrationCreation.table.header.ApplicationTier": "Throttling Policy",
  "Workflow.RegistrationCreation.table.header.Creater": "Created by",
  "Workflow.RegistrationCreation.table.header.Description": "Description",
  "Workflow.RegistrationCreation.table.header.KeyType": "Key Type",
  "Workflow.RegistrationCreation.title.registrationcreation": "Application Registration - Approval Tasks",
  "Workflow.RegistrationCreation.update.success": "Workflow status is updated successfully",
  "Workflow.RegistrationCreation.updateStatus.has.errors": "Unable to complete registration creation approve/reject process.",
  "Workflow.SubscriptionCreation.List.empty.content.subscriptioncreations": "There are no pending workflow requests for subscription creation.",
  "Workflow.SubscriptionCreation.List.empty.title.subscriptioncreations": "Subscription Creation",
  "Workflow.SubscriptionCreation.apicall.has.errors": "Unable to get workflow pending requests for Subscription Creation",
  "Workflow.SubscriptionCreation.fetch.has.errors": "Unable to fetch data.",
  "Workflow.SubscriptionCreation.help.link.one": "Create a subscription creation request",
  "Workflow.SubscriptionCreation.permission.denied.content": "You dont have enough permission to view Subscription Creation - Approval Tasks. Please contact the site administrator.",
  "Workflow.SubscriptionCreation.permission.denied.title": "Permission Denied",
  "Workflow.SubscriptionCreation.search.default": "Search by API, Application or Subscriber",
  "Workflow.SubscriptionCreation.table.button.approve": "Approve",
  "Workflow.SubscriptionCreation.table.button.reject": "Reject",
  "Workflow.SubscriptionCreation.table.header.API": "API",
  "Workflow.SubscriptionCreation.table.header.Action": "Action",
  "Workflow.SubscriptionCreation.table.header.Application": "Application",
  "Workflow.SubscriptionCreation.table.header.Description": "Description",
  "Workflow.SubscriptionCreation.table.header.Subscriber": "Subscriber",
  "Workflow.SubscriptionCreation.title.subscriptioncreation": "Subscription Creation - Approval Tasks",
  "Workflow.SubscriptionCreation.title.subscriptionupdate": "Subscription Tier Update - Approval Tasks",
  "Workflow.SubscriptionCreation.update.success": "Workflow status is updated successfully",
  "Workflow.SubscriptionUpdate.List.empty.content.subscriptionUpdates": "There are no pending workflow requests for subscription updates.",
  "Workflow.SubscriptionUpdate.List.empty.title.subscriptionUpdate": "Subscription Update",
  "Workflow.SubscriptionUpdate.apicall.has.errors": "Unable to get workflow pending requests for Subscription Update",
  "Workflow.SubscriptionUpdate.fetch.has.errors": "Unable to fetch data.",
  "Workflow.SubscriptionUpdate.help.link.one": "Create a subscription update request",
  "Workflow.SubscriptionUpdate.permission.denied.content": "You dont have enough permission to view Subscription Tier Update - Approval Tasks. Please contact the site administrator.",
  "Workflow.SubscriptionUpdate.permission.denied.title": "Permission Denied",
  "Workflow.SubscriptionUpdate.search.default": "Search by API, Application or Subscriber",
  "Workflow.SubscriptionUpdate.table.button.approve": "Approve",
  "Workflow.SubscriptionUpdate.table.button.reject": "Reject",
  "Workflow.SubscriptionUpdate.table.header.API": "API",
  "Workflow.SubscriptionUpdate.table.header.Action": "Action",
  "Workflow.SubscriptionUpdate.table.header.Application": "Application",
  "Workflow.SubscriptionUpdate.table.header.Description": "Description",
  "Workflow.SubscriptionUpdate.table.header.Subscriber": "Subscriber",
  "Workflow.SubscriptionUpdate.update.success": "Workflow status is updated successfully",
  "Workflow.SubscriptionUpdate.updateStatus.has.errors": "Unable to complete subscription update approve/reject process.",
  "Workflow.UserCreation.List.empty.content.usercreations": "There are no workflow pending requests for user creation.It is possible to approve or reject workflow pending requests of user sign up. Workflow Approval Executor needs to be enabled to approve or reject the requests.",
  "Workflow.UserCreation.List.empty.title.usercreations": "User Creation",
  "Workflow.UserCreation.apicall.has.errors": "Unable to get workflow pending requests for User Creation",
  "Workflow.UserCreation.fetch.has.errors": "Unable to fetch data.",
  "Workflow.UserCreation.help.link.one": "Create a user self sign up request",
  "Workflow.UserCreation.permission.denied.content": "You dont have enough permission to view User Creation - Approval Tasks. Please contact the site administrator.",
  "Workflow.UserCreation.permission.denied.title": "Permission Denied",
  "Workflow.UserCreation.table.button.approve": "Approve",
  "Workflow.UserCreation.table.button.reject": "Reject",
  "Workflow.UserCreation.table.header.Action": "Action",
  "Workflow.UserCreation.table.header.Description": "Description",
  "Workflow.UserCreation.table.header.ElapsedTime": "Elapsed time",
  "Workflow.UserCreation.table.header.TenantDomain": "Tenant Domain",
  "Workflow.UserCreation.table.header.TenantName": "Tenant Name",
  "Workflow.UserCreation.update.success": "Workflow status is updated successfully",
  "Workflow.UserCreation.updateStatus.has.errors": "Unable to complete User creation approve/reject process.",
  "Workflow.apistatechange.search.default": "Search by API, Request state, Current state or Creator",
  "Workflow.applicationcreation.search.default": "Search by Application, Throttling Policy or Creator",
  "dsdds": "The specific combination of attributes being checked in the policy need to be defined as the key template. Allowed values are : $userId, $apiContext, $apiVersion, $resourceKey, $appTenant, $apiTenant, $appId, $clientIp",
  "error.list.401": "401 : Authorization Required.",
  "error.list.401.description": "The server could not verify that you are authorized to access the requested resource",
  "error.list.403": "403 : Forbidden.",
  "error.list.403.description": "You do not have permission to access anything with that kind of request.",
  "error.list.404": "404 : The page cannot be found.",
  "error.list.404.description": "The page you are looking for might have been removed,  had its name changed or is temporarily unavailable.",
  "error.list.500": "500 : The page cannot be displayed.",
  "error.list.500.description": "The server encountered an internal error or misconfiguration and was unable to complete your request."
}
