<% jagg.template("life-cycles", function(inputs, outputs, jagg) {
if(outputs.isPublishPermitted){
        var api = outputs.api;
        var oldExist = outputs.oldExist;
        var lcs = outputs.lcs;
        var lcData = outputs.lcData;
        var publishedInExternalStores = outputs.publishedInExternalStores;
        var i,resCount,rowNums = [];
        var lcStatus = outputs.lcStatus;
        var apiLc=outputs.apiLc;
 %>

<script type="text/javascript">
$(document).ready(function() {
// call when page load to display message if the API is published to external stores and status is not published
checkExternalStores('<%=lcStatus%>');
var lc='<%=apiLc%>';
var lcJSON=JSON.parse(lc);
var statesList=lcJSON.definition.configuration.lifecycle.scxml.state;
var states=[];

// Create a new directed graph
var g = new dagreD3.graphlib.Graph().setGraph({});

for (var key in statesList) {
// States and transitions from RFC 793
states.push(key.toUpperCase());
}

// Automatically label each of the nodes
states.forEach(function(state) { g.setNode(state, { label: state }); });


// Set up the edges
g.setEdge("CREATED",     "PUBLISHED",     { label: "PUBLISH",labelStyle: "fill: white",lineInterpolate: 'basis',arrowheadClass: 'arrowhead' });
for (var key in statesList) {
var transition=statesList[key].transition;
if(transition!=null){
    for(var i = 0; i < transition.length; i++) {
    var obj = transition[i];
    var event=obj.event;
    var target=obj.target;
    // Set up the edges

g.setEdge(key.toUpperCase(),     target.toUpperCase(),     { label: event.toUpperCase(),labelStyle: "fill: white",lineInterpolate: 'basis',arrowheadClass: 'arrowhead' });}
}
}
g.nodes().forEach(function(v) {
  var node = g.node(v);
  node.rx = node.ry = 5;
});
var status='<%=lcStatus%>';
// Add some custom colors based on state
g.node(status).style = "fill: #5D76E4";


var svg = d3.select("svg"),
    inner = svg.select("g");

// Set up zoom support
var zoom = d3.behavior.zoom().on("zoom", function() {
      inner.attr("transform", "translate(40,30) scale(1)");
    });
svg.call(zoom);

// Create the renderer
var render = new dagreD3.render();

// Run the renderer. This is what draws the final graph.
render(inner, g);
// Center the graph
var initialScale = 0.75;

//Commented out since it throws a JS error
/* zoom
  .translate([(svg.attr("width") - g.graph().width * initialScale) / 2, 20])
  .scale(initialScale)
  .event(svg); */
svg.attr('height', g.graph().height * initialScale + 40);
});

function setChecklistItemVal(element,order) {
    if ($(element).is(":checked") == false) {
        $(element).attr('value', false);
    }
    else {
        $(element).attr('value', true);
    }
    var apiName=$("#name").val();
    var version=$("#apiVersion").val();
    var provider=$("#provider").val();
    var value= $(element).val();
    jagg.post("/site/blocks/life-cycles/ajax/life-cycles.jag", { action:"setCheckListItemVal",provider:provider,name:apiName,version:version,order:order,value:value },
               function (result) {
                  if (!result.error) {

                     setTimeout(function(){
                            location = ''
                     },1000)
                  } else {
                    if (result.message == "AuthenticateError") {
                       jagg.showLogin();
                    } else {
                           jagg.message({content:result.message,type:"error"});
                    }
                }
              },"json");

};
function updateStatus(status){
var apiName=$("#name").val();
var version=$("#apiVersion").val();
var provider=$("#provider").val();
$(".modal-footer").html("");
if(status=='Deprecate'){
jagg.message({
        content:"Once the API is deprecated; you can only retire the API as the next step.Are you sure you want to deprecate the API - " + apiName + " - " + version+"?",
        type:"confirm",
        title:"Change Lifecycle status",
        anotherDialog:true,
        okCallback:function(){
                       $('#messageModal').modal({backdrop: 'static', keyboard: false });
                                  $(".modal-header .close").hide();
                                  $(".modal-footer").html("");
                                  $(".modal-title").html("Please wait");
                                  $(".modal-body").addClass("loadingButton");
                                  $(".modal-body").css({"margin-left":25});
                                  $(".modal-body").html("Changing the API lifecycle status : "+ apiName + " - " + version );
                      jagg.post("/site/blocks/life-cycles/ajax/life-cycles.jag", { action:"updateStatus",provider:provider,name:apiName,version:version,status:status },
                          function (result) {
                              if (!result.error) {
                                 $('#statusUpdateMsg').show();
                                 setTimeout(function(){
                						location = ''
              					 },1000)
                              } else {
                                    if (result.message == "AuthenticateError") {
                                       jagg.showLogin();
                                    } else {
                                           jagg.message({content:result.message,type:"error"});
                                    }
                              }
                          }, "json");

    },
    cancelCallback:function(){
    $('#messageModal').modal('hide');
         $(".modal-footer").html("");
    }
    });
}else{
 jagg.post("/site/blocks/life-cycles/ajax/life-cycles.jag", { action:"updateStatus",provider:provider,name:apiName,version:version,status:status },
                           function (result) {
                               if (!result.error) {
                                  $('#statusUpdateMsg').show();
                                  setTimeout(function(){
                 						location = ''
               					 },1000)
                               } else {
                                    if (result.message == "AuthenticateError") {
                                       jagg.showLogin();
                                    } else {
                                           jagg.message({content:result.message,type:"error"});
                                    }
                                }
                           }, "json");

}



};


var initOf_state = '<%=lcStatus%>';
// java script variable to store the status
var publishedInExternalStores=<%=publishedInExternalStores%>;
</script>

<div class="alert alert-error" id="statusAPIError" style="display:none">
<span id="statusErrorSpan"></span>
</div>
<div class="row-fluid">

 <form class="form-horizontal well">
     <input type="hidden" name="action" id="action" value="updateStatus"/>
     <input type="hidden" name="name" id="name" value="<%=api.name%>"/>
     <input type="hidden" name="version" id="apiVersion" value="<%=api.version%>"/>
     <input type="hidden" name="provider" id="provider" value="<%=api.provider%>"/>
     <div class="alert alert-warning" id="removeFromExternalStoresMsg" style="display:none;">
     	  <span class="badge badge-warning">!</span> <%=i18n.localize("removeAPIFromExternalStoresWarning")%>
     </div>
     <div class="row">
		<div class="form-group form-inline">
		        <label class="control-label col-sm-3" name="state"><%=i18n.localize("state")%>:</label>
		        <div class="controls col-sm-8">
					<label class="control-label col-sm-3" name="stateValue"><% print(lcStatus); %></label>
		         </div>
		</div>
		<br/>

                 <%for (var j=0;j<lcData.items.length;j++){
                 var item=lcData.items[j];
                 var itemName=item.name;
                 var isVisible=item.isVisible;
                 var itemValue=item.value;
                 var itemOrder=item.order;
                 var state=item.lifeCycleStatus;
                 %>
                 <% if(isVisible=="true"){%>
                     <%if((state!="Created")||(state=="Created" && oldExist)){%>
                      <div class="form-group">
                      	 <label class="control-label col-sm-3"></label>
	                     <label class="checkbox col-sm-3" id="itemsDivfromLCXML<%=String(j)%>">
	                        	<input type="checkbox" id="itemDiv<%=String(j)%>" name="itemDiv" onChange="setChecklistItemVal(itemDiv<%=String(j)%>,<%=itemOrder%>)" value="<%=itemValue%>" <%if(itemValue=="true"){%>checked<%}%>>
	                        		<span class="helper"><%=itemName%></span>
	                     </label>
                     </div>
                    <%}else{%>
                        <%if((itemName == i18n.localize("requireReSubscription"))||(itemName  == i18n.localize("deprecateOldVersions"))){
                                continue;
                        }else{%>
                        		<div class="form-group">
                        			 <label class="control-label col-sm-3"></label>
	                                 <label class="checkbox col-sm-3" id="itemsDivfromLCXML<%=String(j)%>">
	                                	<input type="checkbox" id="itemDiv<%=String(j)%>" name="itemDiv" onChange="setChecklistItemVal(itemDiv<%=String(j)%>,<%=itemOrder%>)" value="<%=itemValue%>" <%if(itemValue=="true"){%>checked<%}%>>
	                                	<span class="helper"><%=itemName%></span>
	                            	</label>
                            	</div>
                        <%}
                 <%}}}%>
</div>

    <div class="form-actions">
       <% for (var i=0;i<lcData.nextStates.length;i++) {
           var next = lcData.nextStates[i].toLowerCase();

            if(lcStatus=="CREATED"){
               if(lcData.nextStates[i].toLowerCase().indexOf("prototype") > -1){ %>
               <input type="button" id="actionButton<%=String(i)%>" <%if( api.endpointConfig == "" || api.endpointConfig == null){%>disabled<%}%> class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%} else if (lcData.nextStates[i].toLowerCase().indexOf("publish") > -1) {%>
               <input type="button" id="actionButton<%=String(i)%>" <%if(api.availableTiers == null || api.availableTiers == ""){%>disabled<%}%> class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%} else {%>
               <input type="button" id="actionButton<%=String(i)%>" class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%}
            } else if(lcStatus=="PROTOTYPED") {%>
               <% if (lcData.nextStates[i].toLowerCase().indexOf("prototype") == -1) {%>
               <%if(lcData.nextStates[i].toLowerCase().indexOf("prototype") > -1){ %>
               <input type="button" id="actionButton<%=String(i)%>" <%if( api.endpointConfig == "" || api.endpointConfig == null){%>disabled<%}%> class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%} else if (lcData.nextStates[i].toLowerCase().indexOf("publish") > -1) {%>
               <input type="button" id="actionButton<%=String(i)%>" <%if(api.availableTiers == null || api.availableTiers == ""){%>disabled<%}%> class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%} else {%>
               <input type="button" id="actionButton<%=String(i)%>" class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%}}
            } else if(lcStatus=="PUBLISHED") {%>
               <% if (lcData.nextStates[i].toLowerCase().indexOf("publish") == -1) {%>
               <input type="button" id="actionButton<%=String(i)%>" class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
               <%}%>
            <%} else {%>
               <input type="button" id="actionButton<%=String(i)%>" class="btn btn-primary" onclick="updateStatus('<%=lcData.nextStates[i]%>')"  value="<%=i18n.localize(next)%>"/>
            <%}

        }%>

       </div><br/>&nbsp;
       <div class="alert alert-success" id="statusUpdateMsg" style="display:none;">
        <%=i18n.localize("lifecycleSuccessMsg")%>
      </div>

      </form>
 <div id="lifecycle-rendering-area" class="lifecycle-rendering-area">
       <svg width=900 height=600 ><g/></svg>
       </div>

<div class="page-header">
		<h4 class="lead"><%=i18n.localize("lifecycleHistory")%></h4>
	</div>
<%if(lcs!=null){
        var length = lcs.length;
        if (length == 0) {
        %>
        <span class="label label-info"><%=i18n.localize("noLifecycleMsg")%></span>
 <%}%>

        <table class="lifeCycleTable" id="lifeCycleTable">
  <thead>
         </thead>
       <tbody>
        <%for(var j=0;j<length;j++){
        var lc=lcs[j];
        var path = jagg.getMappedUrl("/site/pages/user.jag") + "?uname=" + lc.username;
        %>
        <tr>
        <td><i class="glyphicon glyphicon-info-sign" title="date"></i> <b><span class="dateFull"><%=lc.date%></span></b> </td><td>&nbsp;&nbsp;&nbsp; <i class="glyphicon glyphicon-user" title="user"></i>&nbsp;<a href="<%=path%>" title="user"><%=lc.username%></a>
        <%if(lc.oldStatus==""){%><%=i18n.localize("createAPIMsg")%> <%}else{%>
        <%=i18n.localize("changeAPIStatusMsg")%>  '<%=lc.oldStatus%>' to '<%=lc.newStatus%>'.
        <%}%>
        </td>
        </tr>
        <%}%>
        </tbody></table>
        <%}%>

</div>

<script type="text/javascript">
function hideMsg() {
    $('#statusUpdateMsg').hide("fast");
};

// function to show / hide external stores message
var checkExternalStores=function(status){
	if(status !== 'PUBLISHED' && publishedInExternalStores==true){
		$('#removeFromExternalStoresMsg').show();
	}else{
		$('#removeFromExternalStoresMsg').hide();
	}
    if (status !== 'PUBLISHED') {
        $('#externalAPIStoresTab').hide();
    }else{
        $('#externalAPIStoresTab').show();
    }
}

 </script>
<% }}); %>
