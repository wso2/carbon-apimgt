<%
jagg.block("life-cycles", {
    initializer:function (data) {

    },

    getInputs:function () {
        return {
            "api":null
        }
    },

    getOutputs:function (inputs) {
    var api;
    
    api=inputs.api;
    var permitted=inputs.isPublishPermitted;
    var modApi = jagg.module("api");
    var result = modApi.isAPIOlderVersionExist(api);
    var oldExist = result.exist;

    var apiData = {};
    apiData.provider = api.provider;
    apiData.name = api.name;
    apiData.version = api.version;
    var resultData = modApi.getAPILCData(apiData);
    var lcData = modApi.getAPILC();
    var result = modApi.getLifeCyclesEvents(apiData);
    var lcs = result.lcs;
    var lcStatus = modApi.getAPILCStatus(apiData);

    // jaggary code which check for published in external stores
    var publishedInExternalStores = false;
    if(api.apiStores != null && api.apiStores != undefined){
    for(var i = 0;i < api.apiStores.length; i++){
         if(api.apiStores[i].published){
              publishedInExternalStores = true;
              break;
         }
    }
    }
   
        return {
            "api":api,
            "lcs":lcs,
            "lcData":resultData,
            "oldExist":oldExist,
            "isPublishPermitted":permitted,
            "publishedInExternalStores":publishedInExternalStores,
            "lcStatus":lcStatus,
            "apiLc":lcData
           
        }
    },


});
%>