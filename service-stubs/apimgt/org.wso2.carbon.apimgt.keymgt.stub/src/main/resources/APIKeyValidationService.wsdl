<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ax2125="http://keymgt.apimgt.carbon.wso2.org/xsd" xmlns:ax2127="http://api.apimgt.carbon.wso2.org/xsd" xmlns:ax2129="http://model.api.apimgt.carbon.wso2.org/xsd" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:ax2130="http://dto.api.apimgt.carbon.wso2.org/xsd" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ax2133="http://dto.impl.apimgt.carbon.wso2.org/xsd" xmlns:tns="http://service.keymgt.apimgt.carbon.wso2.org" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" targetNamespace="http://service.keymgt.apimgt.carbon.wso2.org">
   <wsdl:documentation>APIKeyValidationService</wsdl:documentation>
   <wsdl:types>
      <xs:schema xmlns:ax2131="http://dto.api.apimgt.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://model.api.apimgt.carbon.wso2.org/xsd">
         <xs:import namespace="http://dto.api.apimgt.carbon.wso2.org/xsd"/>
         <xs:complexType name="URITemplate">
            <xs:sequence>
               <xs:element minOccurs="0" name="HTTPVerb" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="aggregatedMediationScript" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="applicableLevel" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="authType" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="authTypeAsString" nillable="true" type="xs:string"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="authTypes" nillable="true" type="xs:string"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="conditionGroups" nillable="true" type="ax2130:ConditionGroupDTO"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="httpVerbs" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="mediationScript" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="methodsAsString" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="resourceMap" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="resourceSandboxURI" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="resourceSandboxURIExist" type="xs:boolean"/>
               <xs:element minOccurs="0" name="resourceURI" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="resourceURIExist" type="xs:boolean"/>
               <xs:element minOccurs="0" name="scope" nillable="true" type="ax2129:Scope"/>
               <xs:element minOccurs="0" name="scopes" nillable="true" type="ax2129:Scope"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="throttlingConditions" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="throttlingConditionsAsString" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="throttlingTier" nillable="true" type="xs:string"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="throttlingTiers" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="throttlingTiersAsString" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="uriTemplate" nillable="true" type="xs:string"/>
            </xs:sequence>
         </xs:complexType>
         <xs:complexType name="Scope">
            <xs:sequence>
               <xs:element minOccurs="0" name="description" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="id" type="xs:int"/>
               <xs:element minOccurs="0" name="key" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="name" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="roles" nillable="true" type="xs:string"/>
            </xs:sequence>
         </xs:complexType>
      </xs:schema>
      <xs:schema xmlns:ax2126="http://keymgt.apimgt.carbon.wso2.org/xsd" xmlns:ax2128="http://api.apimgt.carbon.wso2.org/xsd" xmlns:ns="http://org.apache.axis2/xsd" xmlns:ax2132="http://model.api.apimgt.carbon.wso2.org/xsd" xmlns:ax2134="http://dto.impl.apimgt.carbon.wso2.org/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://org.apache.axis2/xsd">
         <xs:import namespace="http://keymgt.apimgt.carbon.wso2.org/xsd"/>
         <xs:import namespace="http://api.apimgt.carbon.wso2.org/xsd"/>
         <xs:import namespace="http://model.api.apimgt.carbon.wso2.org/xsd"/>
         <xs:import namespace="http://dto.impl.apimgt.carbon.wso2.org/xsd"/>
         <xs:element name="APIKeyValidationServiceAPIKeyMgtException">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="APIKeyMgtException" nillable="true" type="ax2125:APIKeyMgtException"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="APIKeyValidationServiceAPIManagementException">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="APIManagementException" nillable="true" type="ax2127:APIManagementException"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getAllURITemplates">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="context" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getAllURITemplatesResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="ax2129:URITemplate"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="validateKey">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="context" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="version" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="accessToken" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="requiredAuthenticationLevel" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="clientDomain" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="matchingResource" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="httpVerb" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="validateKeyResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" nillable="true" type="ax2133:APIKeyValidationInfoDTO"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:schema>
      <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://keymgt.apimgt.carbon.wso2.org/xsd">
         <xs:complexType name="APIKeyMgtException">
            <xs:sequence/>
         </xs:complexType>
      </xs:schema>
      <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.impl.apimgt.carbon.wso2.org/xsd">
         <xs:complexType name="APIKeyValidationInfoDTO">
            <xs:sequence>
               <xs:element minOccurs="0" name="apiName" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="apiPublisher" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="apiTier" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="applicationId" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="applicationName" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="applicationTier" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="authorized" type="xs:boolean"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="authorizedDomains" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="consumerKey" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="contentAware" type="xs:boolean"/>
               <xs:element minOccurs="0" name="endUserName" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="endUserToken" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="issuedTime" type="xs:long"/>
               <xs:element minOccurs="0" name="productID" nillable="true" type="xs:string"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="scopes" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="spikeArrestLimit" type="xs:int"/>
               <xs:element minOccurs="0" name="spikeArrestUnit" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="stopOnQuotaReach" type="xs:boolean"/>
               <xs:element minOccurs="0" name="subscriber" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="subscriberTenantDomain" nillable="true" type="xs:string"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="throttlingDataList" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="tier" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="type" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="userType" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="validationStatus" type="xs:int"/>
               <xs:element minOccurs="0" name="validityPeriod" type="xs:long"/>
            </xs:sequence>
         </xs:complexType>
      </xs:schema>
      <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://dto.api.apimgt.carbon.wso2.org/xsd">
         <xs:complexType name="ConditionGroupDTO">
            <xs:sequence>
               <xs:element minOccurs="0" name="conditionGroupId" nillable="true" type="xs:string"/>
               <xs:element maxOccurs="unbounded" minOccurs="0" name="conditions" nillable="true" type="ax2130:ConditionDTO"/>
            </xs:sequence>
         </xs:complexType>
         <xs:complexType name="ConditionDTO">
            <xs:sequence>
               <xs:element minOccurs="0" name="conditionName" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="conditionType" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="conditionValue" nillable="true" type="xs:string"/>
               <xs:element minOccurs="0" name="inverted" type="xs:boolean"/>
            </xs:sequence>
         </xs:complexType>
      </xs:schema>
      <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://api.apimgt.carbon.wso2.org/xsd">
         <xs:complexType name="APIManagementException">
            <xs:sequence/>
         </xs:complexType>
      </xs:schema>
   </wsdl:types>
   <wsdl:message name="getAllURITemplatesRequest">
      <wsdl:part name="parameters" element="ns1:getAllURITemplates"/>
   </wsdl:message>
   <wsdl:message name="getAllURITemplatesResponse">
      <wsdl:part name="parameters" element="ns1:getAllURITemplatesResponse"/>
   </wsdl:message>
   <wsdl:message name="APIKeyValidationServiceAPIKeyMgtException">
      <wsdl:part name="parameters" element="ns1:APIKeyValidationServiceAPIKeyMgtException"/>
   </wsdl:message>
   <wsdl:message name="APIKeyValidationServiceAPIManagementException">
      <wsdl:part name="parameters" element="ns1:APIKeyValidationServiceAPIManagementException"/>
   </wsdl:message>
   <wsdl:message name="validateKeyRequest">
      <wsdl:part name="parameters" element="ns1:validateKey"/>
   </wsdl:message>
   <wsdl:message name="validateKeyResponse">
      <wsdl:part name="parameters" element="ns1:validateKeyResponse"/>
   </wsdl:message>
   <wsdl:portType name="APIKeyValidationServicePortType">
      <wsdl:operation name="getAllURITemplates">
         <wsdl:input message="tns:getAllURITemplatesRequest" wsaw:Action="urn:getAllURITemplates"/>
         <wsdl:output message="tns:getAllURITemplatesResponse" wsaw:Action="urn:getAllURITemplatesResponse"/>
         <wsdl:fault message="tns:APIKeyValidationServiceAPIKeyMgtException" name="APIKeyValidationServiceAPIKeyMgtException" wsaw:Action="urn:getAllURITemplatesAPIKeyValidationServiceAPIKeyMgtException"/>
         <wsdl:fault message="tns:APIKeyValidationServiceAPIManagementException" name="APIKeyValidationServiceAPIManagementException" wsaw:Action="urn:getAllURITemplatesAPIKeyValidationServiceAPIManagementException"/>
      </wsdl:operation>
      <wsdl:operation name="validateKey">
         <wsdl:input message="tns:validateKeyRequest" wsaw:Action="urn:validateKey"/>
         <wsdl:output message="tns:validateKeyResponse" wsaw:Action="urn:validateKeyResponse"/>
         <wsdl:fault message="tns:APIKeyValidationServiceAPIKeyMgtException" name="APIKeyValidationServiceAPIKeyMgtException" wsaw:Action="urn:validateKeyAPIKeyValidationServiceAPIKeyMgtException"/>
         <wsdl:fault message="tns:APIKeyValidationServiceAPIManagementException" name="APIKeyValidationServiceAPIManagementException" wsaw:Action="urn:validateKeyAPIKeyValidationServiceAPIManagementException"/>
      </wsdl:operation>
   </wsdl:portType>
   <wsdl:binding name="APIKeyValidationServiceSoap11Binding" type="tns:APIKeyValidationServicePortType">
      <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
      <wsdl:operation name="getAllURITemplates">
         <soap:operation soapAction="urn:getAllURITemplates" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="APIKeyValidationServiceAPIManagementException">
            <soap:fault use="literal" name="APIKeyValidationServiceAPIManagementException"/>
         </wsdl:fault>
         <wsdl:fault name="APIKeyValidationServiceAPIKeyMgtException">
            <soap:fault use="literal" name="APIKeyValidationServiceAPIKeyMgtException"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="validateKey">
         <soap:operation soapAction="urn:validateKey" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="APIKeyValidationServiceAPIManagementException">
            <soap:fault use="literal" name="APIKeyValidationServiceAPIManagementException"/>
         </wsdl:fault>
         <wsdl:fault name="APIKeyValidationServiceAPIKeyMgtException">
            <soap:fault use="literal" name="APIKeyValidationServiceAPIKeyMgtException"/>
         </wsdl:fault>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:binding name="APIKeyValidationServiceSoap12Binding" type="tns:APIKeyValidationServicePortType">
      <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
      <wsdl:operation name="getAllURITemplates">
         <soap12:operation soapAction="urn:getAllURITemplates" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="APIKeyValidationServiceAPIManagementException">
            <soap12:fault use="literal" name="APIKeyValidationServiceAPIManagementException"/>
         </wsdl:fault>
         <wsdl:fault name="APIKeyValidationServiceAPIKeyMgtException">
            <soap12:fault use="literal" name="APIKeyValidationServiceAPIKeyMgtException"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="validateKey">
         <soap12:operation soapAction="urn:validateKey" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="APIKeyValidationServiceAPIManagementException">
            <soap12:fault use="literal" name="APIKeyValidationServiceAPIManagementException"/>
         </wsdl:fault>
         <wsdl:fault name="APIKeyValidationServiceAPIKeyMgtException">
            <soap12:fault use="literal" name="APIKeyValidationServiceAPIKeyMgtException"/>
         </wsdl:fault>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:binding name="APIKeyValidationServiceHttpBinding" type="tns:APIKeyValidationServicePortType">
      <http:binding verb="POST"/>
      <wsdl:operation name="getAllURITemplates">
         <http:operation location="getAllURITemplates"/>
         <wsdl:input>
            <mime:content type="text/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="text/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="validateKey">
         <http:operation location="validateKey"/>
         <wsdl:input>
            <mime:content type="text/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="text/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:service name="APIKeyValidationService">
      <wsdl:port name="APIKeyValidationServiceHttpsSoap11Endpoint" binding="tns:APIKeyValidationServiceSoap11Binding">
         <soap:address location="https://sanjeewa-ThinkPad-X1-Carbon-3rd:8243/services/APIKeyValidationService.APIKeyValidationServiceHttpsSoap11Endpoint"/>
      </wsdl:port>
      <wsdl:port name="APIKeyValidationServiceHttpsSoap12Endpoint" binding="tns:APIKeyValidationServiceSoap12Binding">
         <soap12:address location="https://sanjeewa-ThinkPad-X1-Carbon-3rd:8243/services/APIKeyValidationService.APIKeyValidationServiceHttpsSoap12Endpoint"/>
      </wsdl:port>
      <wsdl:port name="APIKeyValidationServiceHttpsEndpoint" binding="tns:APIKeyValidationServiceHttpBinding">
         <http:address location="https://sanjeewa-ThinkPad-X1-Carbon-3rd:8243/services/APIKeyValidationService.APIKeyValidationServiceHttpsEndpoint"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>
